"use strict";(self.webpackChunkcortex_react_components=self.webpackChunkcortex_react_components||[]).push([[664],{"./src/components/CRM/KanbanBoard.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,NoDeals:()=>NoDeals,__namedExportsOrder:()=>__namedExportsOrder,default:()=>KanbanBoard_stories});var jsx_runtime=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/index.js"),DealDetails=__webpack_require__("./src/components/CRM/DealDetails.tsx"),KanbanColumn=__webpack_require__("./src/components/CRM/KanbanColumn.tsx"),drag_drop_context=__webpack_require__("./node_modules/.pnpm/@atlaskit+pragmatic-drag-and-drop-react-beautiful-dnd-migration@1.3.1_@types+react@19.0.2_rea_r3ncbroy4xnbn6ziwvtrgq3ix4/node_modules/@atlaskit/pragmatic-drag-and-drop-react-beautiful-dnd-migration/dist/esm/drag-drop-context/index.js"),console=__webpack_require__("./node_modules/.pnpm/console-browserify@1.2.0/node_modules/console-browserify/index.js");const statuses=["Cold","Qualified","Proposal","SoW","Won","Lost"];function CRMKanbanBoard({initialData,addNewDeal,updateDeal,addComment,addNewCustomer}){const[selectedDeal,setSelectedDeal]=(0,react.useState)(null),calculateColumnValue=deals=>deals.reduce(((sum,deal)=>sum+(deal.value||0)),0),calculateWeightedValue=(deals,status)=>{const weightMap={Cold:.2,Qualified:.4,Proposal:.6,SoW:.7,Won:1,Lost:0};return deals.reduce(((sum,deal)=>sum+(deal.value||0)*weightMap[status]),0)},onDragEnd=(0,react.useCallback)((result=>{const{source,destination}=result;if(!destination)return;if(source.droppableId===destination.droppableId&&source.index===destination.index)return;const sourceStatus=source.droppableId,destinationStatus=destination.droppableId;console.log("Moving from ",sourceStatus,"to",destinationStatus);const updatedDeals=[...initialData.deals],[movedDeal]=updatedDeals.splice(source.index,1);movedDeal.status=destinationStatus,updatedDeals.splice(destination.index,0,movedDeal),updateDeal(movedDeal)}),[updateDeal]);return(0,jsx_runtime.jsx)(drag_drop_context.J,{onDragEnd,children:(0,jsx_runtime.jsxs)("div",{className:"p-4",children:[(0,jsx_runtime.jsx)("div",{className:"flex space-x-4 overflow-x-auto pb-4",children:statuses.filter((status=>"Won"!==status&&"Lost"!==status)).map((status=>{const deals=(status=>initialData.deals.filter((deal=>deal.status===status)))(status);return(0,jsx_runtime.jsx)(KanbanColumn.m,{status,deals,customers:initialData.customers,users:initialData.users,categories:initialData.categories,onDealClick:setSelectedDeal,calculateColumnValue,calculateWeightedValue,addNewDeal:"Cold"===status?addNewDeal:void 0,onAddCustomer:addNewCustomer},status)}))}),selectedDeal&&(0,jsx_runtime.jsx)(DealDetails.l,{deal:selectedDeal,users:initialData.users,customer:initialData.customers.find((c=>c.id===selectedDeal.customer.id)),categories:initialData.categories,onClose:()=>setSelectedDeal(null),onSave:updateDeal,onAddComment:comment=>addComment(selectedDeal.id.toString(),comment)})]})})}CRMKanbanBoard.__docgenInfo={description:"",methods:[],displayName:"CRMKanbanBoard",props:{initialData:{required:!0,tsType:{name:"signature",type:"object",raw:"{\n  deals: Deal[]\n  users: Partial<User>[]\n  customers: Partial<Customer>[]\n  categories: CRMCategory[]\n}",signature:{properties:[{key:"deals",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  id: number\n  customer: Partial<Customer> \n  value: number\n  assignee: Partial<User>\n  status: CRMStatus\n  categories: string[]\n  dateLogged: string\n  closureDate: string\n  updatedAt: string\n  comments: Comment[]\n  description: string\n}",signature:{properties:[{key:"id",value:{name:"number",required:!0}},{key:"customer",value:{name:"Partial",elements:[{name:"Customer"}],raw:"Partial<Customer>",required:!0}},{key:"value",value:{name:"number",required:!0}},{key:"assignee",value:{name:"Partial",elements:[{name:"User"}],raw:"Partial<User>",required:!0}},{key:"status",value:{name:"union",raw:'"Cold" | "Qualified" | "Proposal" | "SoW" | "Won" | "Lost"',elements:[{name:"literal",value:'"Cold"'},{name:"literal",value:'"Qualified"'},{name:"literal",value:'"Proposal"'},{name:"literal",value:'"SoW"'},{name:"literal",value:'"Won"'},{name:"literal",value:'"Lost"'}],required:!0}},{key:"categories",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}},{key:"dateLogged",value:{name:"string",required:!0}},{key:"closureDate",value:{name:"string",required:!0}},{key:"updatedAt",value:{name:"string",required:!0}},{key:"comments",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  id: string\n  text: string\n  author?: Partial<User>\n  timestamp: string\n}",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"author",value:{name:"Partial",elements:[{name:"User"}],raw:"Partial<User>",required:!1}},{key:"timestamp",value:{name:"string",required:!0}}]}}],raw:"Comment[]",required:!0}},{key:"description",value:{name:"string",required:!0}}]}}],raw:"Deal[]",required:!0}},{key:"users",value:{name:"Array",elements:[{name:"Partial",elements:[{name:"User"}],raw:"Partial<User>"}],raw:"Partial<User>[]",required:!0}},{key:"customers",value:{name:"Array",elements:[{name:"Partial",elements:[{name:"Customer"}],raw:"Partial<Customer>"}],raw:"Partial<Customer>[]",required:!0}},{key:"categories",value:{name:"Array",elements:[{name:"signature",type:"object",raw:'{\n  id: string\n  name: string\n  type: "proposition" | "source" | "sector"\n}',signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"name",value:{name:"string",required:!0}},{key:"type",value:{name:"union",raw:'"proposition" | "source" | "sector"',elements:[{name:"literal",value:'"proposition"'},{name:"literal",value:'"source"'},{name:"literal",value:'"sector"'}],required:!0}}]}}],raw:"CRMCategory[]",required:!0}}]}},description:""},onDragEnd:{required:!0,tsType:{name:"signature",type:"function",raw:"(result: DropResult) => void",signature:{arguments:[{type:{name:"DropResult"},name:"result"}],return:{name:"void"}}},description:""},addNewDeal:{required:!0,tsType:{name:"signature",type:"function",raw:"(newDeal: Deal) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  id: number\n  customer: Partial<Customer> \n  value: number\n  assignee: Partial<User>\n  status: CRMStatus\n  categories: string[]\n  dateLogged: string\n  closureDate: string\n  updatedAt: string\n  comments: Comment[]\n  description: string\n}",signature:{properties:[{key:"id",value:{name:"number",required:!0}},{key:"customer",value:{name:"Partial",elements:[{name:"Customer"}],raw:"Partial<Customer>",required:!0}},{key:"value",value:{name:"number",required:!0}},{key:"assignee",value:{name:"Partial",elements:[{name:"User"}],raw:"Partial<User>",required:!0}},{key:"status",value:{name:"union",raw:'"Cold" | "Qualified" | "Proposal" | "SoW" | "Won" | "Lost"',elements:[{name:"literal",value:'"Cold"'},{name:"literal",value:'"Qualified"'},{name:"literal",value:'"Proposal"'},{name:"literal",value:'"SoW"'},{name:"literal",value:'"Won"'},{name:"literal",value:'"Lost"'}],required:!0}},{key:"categories",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}},{key:"dateLogged",value:{name:"string",required:!0}},{key:"closureDate",value:{name:"string",required:!0}},{key:"updatedAt",value:{name:"string",required:!0}},{key:"comments",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  id: string\n  text: string\n  author?: Partial<User>\n  timestamp: string\n}",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"author",value:{name:"Partial",elements:[{name:"User"}],raw:"Partial<User>",required:!1}},{key:"timestamp",value:{name:"string",required:!0}}]}}],raw:"Comment[]",required:!0}},{key:"description",value:{name:"string",required:!0}}]}},name:"newDeal"}],return:{name:"void"}}},description:""},updateDeal:{required:!0,tsType:{name:"signature",type:"function",raw:"(updatedDeal: Deal) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  id: number\n  customer: Partial<Customer> \n  value: number\n  assignee: Partial<User>\n  status: CRMStatus\n  categories: string[]\n  dateLogged: string\n  closureDate: string\n  updatedAt: string\n  comments: Comment[]\n  description: string\n}",signature:{properties:[{key:"id",value:{name:"number",required:!0}},{key:"customer",value:{name:"Partial",elements:[{name:"Customer"}],raw:"Partial<Customer>",required:!0}},{key:"value",value:{name:"number",required:!0}},{key:"assignee",value:{name:"Partial",elements:[{name:"User"}],raw:"Partial<User>",required:!0}},{key:"status",value:{name:"union",raw:'"Cold" | "Qualified" | "Proposal" | "SoW" | "Won" | "Lost"',elements:[{name:"literal",value:'"Cold"'},{name:"literal",value:'"Qualified"'},{name:"literal",value:'"Proposal"'},{name:"literal",value:'"SoW"'},{name:"literal",value:'"Won"'},{name:"literal",value:'"Lost"'}],required:!0}},{key:"categories",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}},{key:"dateLogged",value:{name:"string",required:!0}},{key:"closureDate",value:{name:"string",required:!0}},{key:"updatedAt",value:{name:"string",required:!0}},{key:"comments",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  id: string\n  text: string\n  author?: Partial<User>\n  timestamp: string\n}",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"author",value:{name:"Partial",elements:[{name:"User"}],raw:"Partial<User>",required:!1}},{key:"timestamp",value:{name:"string",required:!0}}]}}],raw:"Comment[]",required:!0}},{key:"description",value:{name:"string",required:!0}}]}},name:"updatedDeal"}],return:{name:"void"}}},description:""},addComment:{required:!0,tsType:{name:"signature",type:"function",raw:"(dealId: string, comment: Comment) => void",signature:{arguments:[{type:{name:"string"},name:"dealId"},{type:{name:"signature",type:"object",raw:"{\n  id: string\n  text: string\n  author?: Partial<User>\n  timestamp: string\n}",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"author",value:{name:"Partial",elements:[{name:"User"}],raw:"Partial<User>",required:!1}},{key:"timestamp",value:{name:"string",required:!0}}]}},name:"comment"}],return:{name:"void"}}},description:""},addNewCustomer:{required:!0,tsType:{name:"signature",type:"function",raw:"(newCustomer: Partial<Customer>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"Customer"}],raw:"Partial<Customer>"},name:"newCustomer"}],return:{name:"void"}}},description:""}}};var _Default_args,_Default_args_initialData,_Default_args1,_Default_args_initialData1,_Default_args2,_Default_args_initialData2,_Default_args3,mockData=__webpack_require__("./src/components/CRM/mockData.ts"),KanbanBoard_stories_console=__webpack_require__("./node_modules/.pnpm/console-browserify@1.2.0/node_modules/console-browserify/index.js");const KanbanBoard_stories={title:"CRM/KanbanBoard",component:CRMKanbanBoard,parameters:{layout:"fullscreen"}},Default={args:{initialData:{deals:Array.from({length:20},((_,i)=>({id:i+1,customer:mockData.Qd[i%mockData.Qd.length],value:Math.floor(1e5*Math.random())+5e3,assignee:mockData.rB[Math.floor(Math.random()*mockData.rB.length)].name,status:["Cold","Qualified","Proposal Made","Won","Lost"][Math.floor(5*Math.random())],categories:[mockData.zA[i%mockData.zA.length].id],dateLogged:new Date(Date.now()-24*Math.floor(30*Math.random())*60*60*1e3).toISOString(),closureDate:new Date(Date.now()+24*Math.floor(90*Math.random())*60*60*1e3).toISOString(),comments:[],updatedAt:(new Date).toISOString(),description:`This is a mock description for deal ${i+1}. It's a ${["small","medium","large"][i%3]} deal with high potential.`}))),customers:[{id:"1",name:"Acme Corp",active:!0},{id:"2",name:"GlobalTech",active:!0},{id:"3",name:"InnoSystems",active:!0}],users:mockData.rB,categories:[{id:"1",name:"Software",type:"proposition"},{id:"2",name:"Hardware",type:"proposition"},{id:"3",name:"Referral",type:"source"},{id:"4",name:"Outbound",type:"source"},{id:"5",name:"Tech",type:"sector"},{id:"6",name:"Finance",type:"sector"}]},addNewDeal:async deal=>(KanbanBoard_stories_console.log("Adding deal:",deal),{...deal,id:"new-deal-id"}),updateDeal:async deal=>(KanbanBoard_stories_console.log("Updating deal:",deal),deal),addNewCustomer:async customer=>(KanbanBoard_stories_console.log("Adding customer:",customer),{...customer,id:"new-customer-id"}),addComment:async(dealId,comment)=>(KanbanBoard_stories_console.log("Adding comment to deal:",dealId,comment),{...comment,id:"new-comment-id"})}};var _Default_args4,_Default_args_initialData3,_Default_args_initialData_users,_Default_args_initialData_customers,_Default_args_initialData_categories;const NoDeals={args:{...null!==(_Default_args4=Default.args)&&void 0!==_Default_args4?_Default_args4:{},initialData:{...null!==(_Default_args_initialData3=null===(_Default_args=Default.args)||void 0===_Default_args?void 0:_Default_args.initialData)&&void 0!==_Default_args_initialData3?_Default_args_initialData3:{},deals:[],users:null!==(_Default_args_initialData_users=null===(_Default_args1=Default.args)||void 0===_Default_args1||null===(_Default_args_initialData=_Default_args1.initialData)||void 0===_Default_args_initialData?void 0:_Default_args_initialData.users)&&void 0!==_Default_args_initialData_users?_Default_args_initialData_users:[],customers:null!==(_Default_args_initialData_customers=null===(_Default_args2=Default.args)||void 0===_Default_args2||null===(_Default_args_initialData1=_Default_args2.initialData)||void 0===_Default_args_initialData1?void 0:_Default_args_initialData1.customers)&&void 0!==_Default_args_initialData_customers?_Default_args_initialData_customers:[],categories:null!==(_Default_args_initialData_categories=null===(_Default_args3=Default.args)||void 0===_Default_args3||null===(_Default_args_initialData2=_Default_args3.initialData)||void 0===_Default_args_initialData2?void 0:_Default_args_initialData2.categories)&&void 0!==_Default_args_initialData_categories?_Default_args_initialData_categories:[]}}},__namedExportsOrder=["Default","NoDeals"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    initialData: {\n      deals: Array.from({\n        length: 20\n      }, (_, i) => ({\n        id: i + 1,\n        customer: mockCustomers[i % mockCustomers.length],\n        value: Math.floor(Math.random() * 100000) + 5000,\n        assignee: mockUsers[Math.floor(Math.random() * mockUsers.length)].name,\n        status: ["Cold", "Qualified", "Proposal Made", "Won", "Lost"][Math.floor(Math.random() * 5)] as CRMStatus,\n        categories: [mockCategories[i % mockCategories.length].id],\n        dateLogged: new Date(Date.now() - Math.floor(Math.random() * 30) * 24 * 60 * 60 * 1000).toISOString(),\n        closureDate: new Date(Date.now() + Math.floor(Math.random() * 90) * 24 * 60 * 60 * 1000).toISOString(),\n        comments: [],\n        updatedAt: new Date().toISOString(),\n        description: `This is a mock description for deal ${i + 1}. It\'s a ${["small", "medium", "large"][i % 3]} deal with high potential.`\n      })),\n      customers: [{\n        id: "1",\n        name: "Acme Corp",\n        active: true\n      }, {\n        id: "2",\n        name: "GlobalTech",\n        active: true\n      }, {\n        id: "3",\n        name: "InnoSystems",\n        active: true\n      }],\n      users: mockUsers,\n      categories: [{\n        id: "1",\n        name: "Software",\n        type: "proposition"\n      }, {\n        id: "2",\n        name: "Hardware",\n        type: "proposition"\n      }, {\n        id: "3",\n        name: "Referral",\n        type: "source"\n      }, {\n        id: "4",\n        name: "Outbound",\n        type: "source"\n      }, {\n        id: "5",\n        name: "Tech",\n        type: "sector"\n      }, {\n        id: "6",\n        name: "Finance",\n        type: "sector"\n      }]\n    },\n    addNewDeal: async deal => {\n      console.log("Adding deal:", deal);\n      return {\n        ...deal,\n        id: "new-deal-id"\n      };\n    },\n    updateDeal: async deal => {\n      console.log("Updating deal:", deal);\n      return deal;\n    },\n    addNewCustomer: async customer => {\n      console.log("Adding customer:", customer);\n      return {\n        ...customer,\n        id: "new-customer-id"\n      };\n    },\n    addComment: async (dealId, comment) => {\n      console.log("Adding comment to deal:", dealId, comment);\n      return {\n        ...comment,\n        id: "new-comment-id"\n      };\n    }\n  }\n}',...Default.parameters?.docs?.source}}},NoDeals.parameters={...NoDeals.parameters,docs:{...NoDeals.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...(Default.args ?? {}),\n    initialData: {\n      ...(Default.args?.initialData ?? {}),\n      deals: [],\n      users: Default.args?.initialData?.users ?? [],\n      customers: Default.args?.initialData?.customers ?? [],\n      categories: Default.args?.initialData?.categories ?? []\n    }\n  }\n}",...NoDeals.parameters?.docs?.source}}}}}]);