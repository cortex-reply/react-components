"use strict";(self.webpackChunkcortex_react_components=self.webpackChunkcortex_react_components||[]).push([[3868],{"./src/components/Projects/teams-complete-example.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EmptyState:()=>EmptyState,FullExample:()=>FullExample,SingleTeam:()=>SingleTeam,TeamCardExamples:()=>TeamCardExamples,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),_DigitalColleagues_Views_TeamsIndexView__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/DigitalColleagues/Views/TeamsIndexView.tsx"),_team_card__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Projects/team-card.tsx"),_DigitalColleagues_test_data__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/DigitalColleagues/test-data.tsx"),console=__webpack_require__("./node_modules/.pnpm/console-browserify@1.2.0/node_modules/console-browserify/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Projects/Complete Example",component:_DigitalColleagues_Views_TeamsIndexView__WEBPACK_IMPORTED_MODULE_1__.A,parameters:{layout:"fullscreen",docs:{description:{component:"\n# Teams Management System\n\nThis is a complete example of the Teams management system that includes:\n\n## Features\n- **Team Overview**: Display all teams the user is part of\n- **Team Cards**: Individual cards showing team details\n- **Statistics**: Human colleagues, digital colleagues, and project counts\n- **Actions**: View team details\n- **Responsive Design**: Works on all screen sizes\n- **Animations**: Smooth transitions and hover effects\n\n## Components Used\n- `TeamsIndexView`: Main container component\n- `TeamCard`: Individual team display component\n- `HeroSection`: Header with call-to-action\n- `Dialog`: Modal for team creation (placeholder)\n\n## Data Structure\nEach team includes:\n- Basic information (name, description)\n- Colleague counts (human and digital)\n- Project count\n\n## Usage Example\n```tsx\n<TeamsIndexView\n  teams={teams}\n  onTeamOpen={(team) => navigate(`/teams/${team.id}`)}\n  onCreateTeam={() => openCreateDialog()}\n/>\n```\n        "}}},argTypes:{onCreateTeam:{action:"create-team"},onTeamOpen:{action:"team-open"}}},FullExample={args:{teams:_DigitalColleagues_test_data__WEBPACK_IMPORTED_MODULE_2__.AG},parameters:{docs:{description:{story:"Complete teams management interface with all sample data loaded."}}}},EmptyState={args:{teams:[]},parameters:{docs:{description:{story:"What users see when they haven't joined any teams yet."}}}},SingleTeam={args:{teams:[_DigitalColleagues_test_data__WEBPACK_IMPORTED_MODULE_2__.AG[0]]},parameters:{docs:{description:{story:"Display when user is part of only one team."}}}},TeamCardExamples={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"p-8 space-y-8",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"space-y-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h2",{className:"text-2xl font-bold",children:"Team Card Variations"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",children:_DigitalColleagues_test_data__WEBPACK_IMPORTED_MODULE_2__.AG.map((team=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_team_card__WEBPACK_IMPORTED_MODULE_3__.K,{team,onOpen:team=>console.log("Open team:",team.name)},team.id)))})]})}),parameters:{docs:{description:{story:"Individual team cards showing different team types and sizes."}}}},__namedExportsOrder=["FullExample","EmptyState","SingleTeam","TeamCardExamples"];FullExample.parameters={...FullExample.parameters,docs:{...FullExample.parameters?.docs,source:{originalSource:'{\n  args: {\n    teams: mockTeamSummary\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Complete teams management interface with all sample data loaded."\n      }\n    }\n  }\n}',...FullExample.parameters?.docs?.source}}},EmptyState.parameters={...EmptyState.parameters,docs:{...EmptyState.parameters?.docs,source:{originalSource:'{\n  args: {\n    teams: []\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "What users see when they haven\'t joined any teams yet."\n      }\n    }\n  }\n}',...EmptyState.parameters?.docs?.source}}},SingleTeam.parameters={...SingleTeam.parameters,docs:{...SingleTeam.parameters?.docs,source:{originalSource:'{\n  args: {\n    teams: [mockTeamSummary[0]]\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Display when user is part of only one team."\n      }\n    }\n  }\n}',...SingleTeam.parameters?.docs?.source}}},TeamCardExamples.parameters={...TeamCardExamples.parameters,docs:{...TeamCardExamples.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="p-8 space-y-8">\n      <div className="space-y-4">\n        <h2 className="text-2xl font-bold">Team Card Variations</h2>\n        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">\n          {mockTeamSummary.map(team => <TeamCard key={team.id} team={team} onOpen={team => console.log("Open team:", team.name)} />)}\n        </div>\n      </div>\n    </div>,\n  parameters: {\n    docs: {\n      description: {\n        story: "Individual team cards showing different team types and sizes."\n      }\n    }\n  }\n}',...TeamCardExamples.parameters?.docs?.source}}}}}]);