"use strict";(self.webpackChunkcortex_react_components=self.webpackChunkcortex_react_components||[]).push([[3158],{"./src/components/DigitalColleagues/ManagementSidebar.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>ManagementSidebar});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),_barrel_optimize_names_Calendar_FileText_Kanban_Target_lucide_react__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/index.js"),__webpack_require__("./node_modules/.pnpm/lucide-react@0.469.0_react@19.0.0/node_modules/lucide-react/dist/esm/icons/kanban.js")),_barrel_optimize_names_Calendar_FileText_Kanban_Target_lucide_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/lucide-react@0.469.0_react@19.0.0/node_modules/lucide-react/dist/esm/icons/calendar.js"),_barrel_optimize_names_Calendar_FileText_Kanban_Target_lucide_react__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/.pnpm/lucide-react@0.469.0_react@19.0.0/node_modules/lucide-react/dist/esm/icons/target.js"),_barrel_optimize_names_Calendar_FileText_Kanban_Target_lucide_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/.pnpm/lucide-react@0.469.0_react@19.0.0/node_modules/lucide-react/dist/esm/icons/file-text.js");const viewConfig=[{key:"kanban",icon:_barrel_optimize_names_Calendar_FileText_Kanban_Target_lucide_react__WEBPACK_IMPORTED_MODULE_2__.A,label:"Kanban",color:"bg-primary",title:"Kanban View"},{key:"planning",icon:_barrel_optimize_names_Calendar_FileText_Kanban_Target_lucide_react__WEBPACK_IMPORTED_MODULE_3__.A,label:"Planning",color:"bg-brand-plum",title:"Planning View",hiddenOnMobile:!0},{key:"epics",icon:_barrel_optimize_names_Calendar_FileText_Kanban_Target_lucide_react__WEBPACK_IMPORTED_MODULE_4__.A,label:"Epics",color:"bg-brand-orange",title:"Epic Planning"},{key:"files",icon:_barrel_optimize_names_Calendar_FileText_Kanban_Target_lucide_react__WEBPACK_IMPORTED_MODULE_5__.A,label:"Files",color:"bg-brand-green",title:"Files"},{key:"tasks",icon:_barrel_optimize_names_Calendar_FileText_Kanban_Target_lucide_react__WEBPACK_IMPORTED_MODULE_3__.A,label:"Tasks",color:"bg-brand-cyan",title:"Tasks"}],ManagementSidebar=({currentView,onViewChange,children})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex w-full h-screen",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"w-12 h-full bg-sidebar-background flex flex-col flex-shrink-0",children:viewConfig.map((view=>{const Icon=view.icon,isActive=currentView===view.key;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("button",{onClick:()=>onViewChange(view.key),className:`flex-1 w-12 flex items-center justify-center text-sidebar-foreground transition-all duration-200 relative overflow-hidden group/btn ${isActive?view.color:`${view.color}/75 hover:${view.color}`} ${view.hiddenOnMobile?"hidden md:flex":""} hover:w-28 hover:justify-start hover:pl-3`,title:view.title,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Icon,{className:"h-4 w-4 flex-shrink-0"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"text-xs font-medium whitespace-nowrap opacity-0 group-hover/btn:opacity-100 transition-opacity duration-200 absolute left-8",children:view.label})]},view.key)}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"flex-1 min-w-0 px-4 md:px-6 h-full overflow-auto",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"w-full h-full",children})})]});ManagementSidebar.__docgenInfo={description:"",methods:[],displayName:"ManagementSidebar",props:{currentView:{required:!0,tsType:{name:"union",raw:"'kanban' | 'planning' | 'tasks' | 'files' | 'epics'",elements:[{name:"literal",value:"'kanban'"},{name:"literal",value:"'planning'"},{name:"literal",value:"'tasks'"},{name:"literal",value:"'files'"},{name:"literal",value:"'epics'"}]},description:""},onViewChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(view: 'kanban' | 'planning' | 'tasks' | 'files' | 'epics') => void",signature:{arguments:[{type:{name:"union",raw:"'kanban' | 'planning' | 'tasks' | 'files' | 'epics'",elements:[{name:"literal",value:"'kanban'"},{name:"literal",value:"'planning'"},{name:"literal",value:"'tasks'"},{name:"literal",value:"'files'"},{name:"literal",value:"'epics'"}]},name:"view"}],return:{name:"void"}}},description:""},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}}},"./src/components/Projects/ProjectView.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>ProjectView});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/index.js"),_components_DigitalColleagues_ManagementSidebar__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/DigitalColleagues/ManagementSidebar.tsx"),_components_Projects_KanbanBoardView__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Projects/KanbanBoardView.tsx"),_components_Projects_EpicsView__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/components/Projects/EpicsView.tsx"),_components_Projects_PlanningView__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Projects/PlanningView.tsx"),_components_Projects_TasksView__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/Projects/TasksView.tsx"),_FileView__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/components/Projects/FileView.tsx"),_AddTaskModal__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/components/Projects/AddTaskModal.tsx"),_AddEpicModal__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./src/components/Projects/AddEpicModal.tsx"),next_navigation__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/@storybook+nextjs@8.6.12_esbuild@0.24.2_next@15.1.3_@babel+core@7.26.0_@opentelemetry+a_9e100856f2a8ba4ffb44f7006bfa8951/node_modules/@storybook/nextjs/dist/export-mocks/navigation/index.mjs");__webpack_require__("./node_modules/.pnpm/console-browserify@1.2.0/node_modules/console-browserify/index.js");function ProjectView({title="",initialTasks=[],initialEpics=[],initialSprints=[],initialProjects=[],initialReminders=[],initialColleagues=[],initialUsers=[],initialFiles=[],initialView="kanban",onAddTask,onUpdateTask,onDeleteTask,onTaskClick,onAddEpic,onUpdateEpic,onDeleteEpic,onAddTaskToEpic,onAddSprint,onUpdateSprint,onDeleteSprint,onAddProject,onUpdateProject,onDeleteProject,onFileAdd,onFileEdit,onFileDelete,onFileClick,onAddReminder,onUpdateReminder,onDeleteReminder,onViewChange,onToggleMobileMenu,onTeamClick,onTeamChange,onCopilotClick,handleAddComment}){const[tasks,setTasks]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialTasks),[epics,setEpics]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialEpics),[sprints,setSprints]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialSprints),[projects,setProjects]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialProjects),[reminders,setReminders]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialReminders),[colleagues,setColleagues]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialColleagues),[users,setUsers]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialUsers),[files,setFiles]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialFiles),[isAddTaskModalOpen,setIsAddTaskModalOpen]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[isAddEpicModalOpen,setIsAddEpicModalOpen]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[selectedTask,setSelectedTask]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[selectedEpicForTask,setSelectedEpicForTask]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[draggedTask,setDraggedTask]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[currentView,setCurrentView]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialView||"kanban"),[mobileMenuOpen,setMobileMenuOpen]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);(0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{setTasks(initialTasks)}),[initialTasks]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{setSprints(initialSprints)}),[initialSprints]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{setEpics(initialEpics)}),[initialEpics]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{setProjects(initialProjects)}),[initialProjects]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{setFiles(initialFiles)}),[initialFiles]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{setUsers(initialUsers)}),[initialUsers]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{setColleagues(initialColleagues)}),[initialColleagues]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{setReminders(initialReminders)}),[initialReminders]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{setCurrentView(initialView)}),[initialView]);const selectedEpics=epics.filter((epic=>epic.isSelected)).map((epic=>epic.id)),selectedSprint=sprints.find((sprint=>sprint.isSelected)),handleAddTask=(tasks.filter((task=>{const isEpicSelected=selectedEpics.includes(task.epicId);return selectedSprint?"all-tasks"===selectedSprint.id?isEpicSelected:"backlog"===selectedSprint.id?isEpicSelected&&!task.sprintId:isEpicSelected&&task.sprintId===selectedSprint.id:isEpicSelected})),newTask=>{const task={...newTask,id:Date.now().toString(),createdAt:new Date};setTasks((prev=>[...prev,task])),null==onAddTask||onAddTask(task)}),handleUpdateTask=async(taskId,updates)=>(setTasks((prev=>prev.map((task=>task.id===taskId?{...task,...updates}:task)))),await(null==onUpdateTask?void 0:onUpdateTask(taskId,updates))),handleDeleteTask=taskId=>{setTasks((prev=>prev.filter((task=>task.id!==taskId)))),(null==selectedTask?void 0:selectedTask.id)===taskId&&setSelectedTask(null),null==onDeleteTask||onDeleteTask(taskId)},handleAddEpic=newEpic=>{const epic={...newEpic,id:Date.now().toString(),isSelected:!0};setEpics((prev=>[...prev,epic])),null==onAddEpic||onAddEpic({...epic})},handleTaskClick=task=>{setSelectedTask(task)},mockTeams=[{id:"1",name:"Product Development",avatar:"PD",lastUsed:new Date("2024-01-20")},{id:"2",name:"Engineering",avatar:"ENG",lastUsed:new Date("2024-01-19")},{id:"3",name:"Marketing Team",avatar:"MT",lastUsed:new Date("2024-01-18")},{id:"4",name:"Design System",avatar:"DS",lastUsed:new Date("2024-01-17")},{id:"5",name:"Sales Operations",avatar:"SO",lastUsed:new Date("2024-01-16")},{id:"6",name:"Customer Success",avatar:"CS",lastUsed:new Date("2024-01-15")}];mockTeams.sort(((a,b)=>b.lastUsed.getTime()-a.lastUsed.getTime())).slice(0,3),mockTeams.length,mockTeams.slice(3);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components_DigitalColleagues_ManagementSidebar__WEBPACK_IMPORTED_MODULE_3__.M,{currentView,onViewChange:view=>{"planning"===view&&window.innerWidth<768||(setCurrentView(view),null==onViewChange||onViewChange(view))},children:["kanban"===currentView&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"h-full overflow-hidden",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Projects_KanbanBoardView__WEBPACK_IMPORTED_MODULE_4__.d,{initialProjects:projects,initialEpics:epics,initialSprints:sprints,initialTasks:tasks,initialColleagues:colleagues,initialUsers:users,onAddTask:handleAddTask,onUpdateTask:handleUpdateTask,onDeleteTask:handleDeleteTask,onTaskClick:handleTaskClick,onAddEpic:handleAddEpic,onAddComment:handleAddComment})}),"planning"===currentView&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"hidden md:block h-full",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Projects_PlanningView__WEBPACK_IMPORTED_MODULE_5__.v,{tasks,epics,sprints,onUpdateTask:handleUpdateTask,onTaskClick:handleTaskClick,onAddSprint:newSprint=>{const sprint={...newSprint,id:Date.now().toString(),isSelected:!1};setSprints((prev=>[...prev,sprint])),null==onAddSprint||onAddSprint(newSprint)},onUpdateSprint:(sprintId,updates)=>{setSprints((prev=>prev.map((sprint=>sprint.id===sprintId?(updates.isSelected,{...sprint,...updates}):updates.isSelected&&sprintId!==sprint.id?{...sprint,isSelected:!1}:sprint)))),null==onUpdateSprint||onUpdateSprint(sprintId,updates)},onDeleteSprint:sprintId=>{"backlog"!==sprintId&&"all-tasks"!==sprintId&&(setSprints((prev=>prev.filter((sprint=>sprint.id!==sprintId)))),setTasks((prev=>prev.map((task=>task.sprintId===sprintId?{...task,sprintId:void 0}:task)))),null==onDeleteSprint||onDeleteSprint(sprintId))}})}),"tasks"===currentView&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"h-full",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Projects_TasksView__WEBPACK_IMPORTED_MODULE_6__.Q,{initialReminders:reminders,initialColleagues:colleagues,onAddReminder:newReminder=>{const reminder={...newReminder,id:Date.now().toString(),createdAt:new Date};setReminders((prev=>[...prev,reminder])),null==onAddReminder||onAddReminder(newReminder)},onUpdateReminder:(reminderId,updates)=>{setReminders((prev=>prev.map((reminder=>reminder.id===reminderId?{...reminder,...updates}:reminder)))),null==onUpdateReminder||onUpdateReminder(reminderId,updates)},onDeleteReminder:reminderId=>{setReminders((prev=>prev.filter((reminder=>reminder.id!==reminderId)))),null==onDeleteReminder||onDeleteReminder(reminderId)}})}),"files"===currentView&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"h-full",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_FileView__WEBPACK_IMPORTED_MODULE_7__.A,{initialFiles:files,onFileAdd:()=>{null==onFileAdd||onFileAdd()},onFileEdit:file=>{null==onFileEdit||onFileEdit(file)},onFileDelete:fileId=>{setFiles((prev=>prev.filter((file=>file.name!==fileId)))),null==onFileDelete||onFileDelete(fileId)},onFileClick:file=>{null==onFileClick||onFileClick(file)},compactView:!1})}),"epics"===currentView&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"h-full",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Projects_EpicsView__WEBPACK_IMPORTED_MODULE_8__.i,{tasks,epics,sprints,onUpdateTask:handleUpdateTask,onTaskClick:handleTaskClick,onAddTaskToEpic:epicId=>{setSelectedEpicForTask(epicId),setIsAddTaskModalOpen(!0)},onAddEpic:()=>{setIsAddEpicModalOpen(!0)},onUpdateEpic:(epicId,updates)=>{setEpics((prev=>prev.map((epic=>epic.id===epicId?{...epic,...updates}:epic)))),null==onUpdateEpic||onUpdateEpic(epicId,updates)},onDeleteEpic:epicId=>{setEpics((prev=>prev.filter((epic=>epic.id!==epicId)))),setTasks((prev=>prev.filter((task=>task.epicId!==epicId)))),null==onDeleteEpic||onDeleteEpic(epicId)}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_AddTaskModal__WEBPACK_IMPORTED_MODULE_9__.o,{isOpen:isAddTaskModalOpen,onClose:()=>{setIsAddTaskModalOpen(!1),setSelectedEpicForTask(null)},onAddTask:handleAddTask,epics,sprints,assignees:[...colleagues,...users],defaultEpicId:selectedEpicForTask||void 0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_AddEpicModal__WEBPACK_IMPORTED_MODULE_10__.k,{isOpen:isAddEpicModalOpen,onClose:()=>setIsAddEpicModalOpen(!1),onAddEpic:handleAddEpic})]})}ProjectView.__docgenInfo={description:"",methods:[],displayName:"ProjectView",props:{title:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"''",computed:!1}},initialTasks:{required:!1,tsType:{name:"Array",elements:[{name:"Task"}],raw:"Task[]"},description:"",defaultValue:{value:"[]",computed:!1}},initialEpics:{required:!1,tsType:{name:"Array",elements:[{name:"Epic"}],raw:"Epic[]"},description:"",defaultValue:{value:"[]",computed:!1}},initialSprints:{required:!1,tsType:{name:"Array",elements:[{name:"Sprint"}],raw:"Sprint[]"},description:"",defaultValue:{value:"[]",computed:!1}},initialProjects:{required:!1,tsType:{name:"Array",elements:[{name:"Project"}],raw:"Project[]"},description:"",defaultValue:{value:"[]",computed:!1}},initialReminders:{required:!1,tsType:{name:"Array",elements:[{name:"Reminder"}],raw:"Reminder[]"},description:"",defaultValue:{value:"[]",computed:!1}},initialColleagues:{required:!1,tsType:{name:"Array",elements:[{name:"DigitalColleague"}],raw:"DigitalColleague[]"},description:"",defaultValue:{value:"[]",computed:!1}},initialUsers:{required:!1,tsType:{name:"Array",elements:[{name:"User"}],raw:"User[]"},description:"",defaultValue:{value:"[]",computed:!1}},initialFiles:{required:!1,tsType:{name:"Array",elements:[{name:"FileType"}],raw:"FileType[]"},description:"",defaultValue:{value:"[]",computed:!1}},initialView:{required:!1,tsType:{name:"union",raw:"'kanban' | 'planning' | 'tasks' | 'files' | 'epics'",elements:[{name:"literal",value:"'kanban'"},{name:"literal",value:"'planning'"},{name:"literal",value:"'tasks'"},{name:"literal",value:"'files'"},{name:"literal",value:"'epics'"}]},description:"",defaultValue:{value:"'kanban'",computed:!1}},onAddTask:{required:!1,tsType:{name:"signature",type:"function",raw:"(newTask: Omit<Task, 'id' | 'createdAt'>) => void",signature:{arguments:[{type:{name:"Omit",elements:[{name:"Task"},{name:"union",raw:"'id' | 'createdAt'",elements:[{name:"literal",value:"'id'"},{name:"literal",value:"'createdAt'"}]}],raw:"Omit<Task, 'id' | 'createdAt'>"},name:"newTask"}],return:{name:"void"}}},description:""},onUpdateTask:{required:!1,tsType:{name:"signature",type:"function",raw:"(taskId: string, updates: Partial<Task>) => Promise<Task>",signature:{arguments:[{type:{name:"string"},name:"taskId"},{type:{name:"Partial",elements:[{name:"Task"}],raw:"Partial<Task>"},name:"updates"}],return:{name:"Promise",elements:[{name:"Task"}],raw:"Promise<Task>"}}},description:""},onDeleteTask:{required:!1,tsType:{name:"signature",type:"function",raw:"(taskId: string) => void",signature:{arguments:[{type:{name:"string"},name:"taskId"}],return:{name:"void"}}},description:""},onTaskClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(task: Task) => void",signature:{arguments:[{type:{name:"Task"},name:"task"}],return:{name:"void"}}},description:""},onAddEpic:{required:!1,tsType:{name:"signature",type:"function",raw:"(newEpic: Omit<Epic, 'id' | 'createdAt'>) => void",signature:{arguments:[{type:{name:"Omit",elements:[{name:"Epic"},{name:"union",raw:"'id' | 'createdAt'",elements:[{name:"literal",value:"'id'"},{name:"literal",value:"'createdAt'"}]}],raw:"Omit<Epic, 'id' | 'createdAt'>"},name:"newEpic"}],return:{name:"void"}}},description:""},onUpdateEpic:{required:!1,tsType:{name:"signature",type:"function",raw:"(epicId: string, updates: Partial<Epic>) => void",signature:{arguments:[{type:{name:"string"},name:"epicId"},{type:{name:"Partial",elements:[{name:"Epic"}],raw:"Partial<Epic>"},name:"updates"}],return:{name:"void"}}},description:""},onDeleteEpic:{required:!1,tsType:{name:"signature",type:"function",raw:"(epicId: string) => void",signature:{arguments:[{type:{name:"string"},name:"epicId"}],return:{name:"void"}}},description:""},onAddTaskToEpic:{required:!1,tsType:{name:"signature",type:"function",raw:"(epicId: string) => void",signature:{arguments:[{type:{name:"string"},name:"epicId"}],return:{name:"void"}}},description:""},onAddSprint:{required:!1,tsType:{name:"signature",type:"function",raw:"(sprint: Omit<Sprint, 'id'>) => void",signature:{arguments:[{type:{name:"Omit",elements:[{name:"Sprint"},{name:"literal",value:"'id'"}],raw:"Omit<Sprint, 'id'>"},name:"sprint"}],return:{name:"void"}}},description:""},onUpdateSprint:{required:!1,tsType:{name:"signature",type:"function",raw:"(sprintId: string, updates: Partial<Sprint>) => void",signature:{arguments:[{type:{name:"string"},name:"sprintId"},{type:{name:"Partial",elements:[{name:"Sprint"}],raw:"Partial<Sprint>"},name:"updates"}],return:{name:"void"}}},description:""},onDeleteSprint:{required:!1,tsType:{name:"signature",type:"function",raw:"(sprintId: string) => void",signature:{arguments:[{type:{name:"string"},name:"sprintId"}],return:{name:"void"}}},description:""},onAddProject:{required:!1,tsType:{name:"signature",type:"function",raw:"(project: Omit<Project, 'id'>) => void",signature:{arguments:[{type:{name:"Omit",elements:[{name:"Project"},{name:"literal",value:"'id'"}],raw:"Omit<Project, 'id'>"},name:"project"}],return:{name:"void"}}},description:""},onUpdateProject:{required:!1,tsType:{name:"signature",type:"function",raw:"(projectId: string, updates: Partial<Project>) => void",signature:{arguments:[{type:{name:"string"},name:"projectId"},{type:{name:"Partial",elements:[{name:"Project"}],raw:"Partial<Project>"},name:"updates"}],return:{name:"void"}}},description:""},onDeleteProject:{required:!1,tsType:{name:"signature",type:"function",raw:"(projectId: string) => void",signature:{arguments:[{type:{name:"string"},name:"projectId"}],return:{name:"void"}}},description:""},onFileAdd:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onFileEdit:{required:!1,tsType:{name:"signature",type:"function",raw:"(file: FileType) => void",signature:{arguments:[{type:{name:"FileType"},name:"file"}],return:{name:"void"}}},description:""},onFileDelete:{required:!1,tsType:{name:"signature",type:"function",raw:"(fileId: string) => void",signature:{arguments:[{type:{name:"string"},name:"fileId"}],return:{name:"void"}}},description:""},onFileClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(file: FileType) => void",signature:{arguments:[{type:{name:"FileType"},name:"file"}],return:{name:"void"}}},description:""},onAddReminder:{required:!1,tsType:{name:"signature",type:"function",raw:"(reminder: Omit<Reminder, 'id' | 'createdAt'>) => void",signature:{arguments:[{type:{name:"Omit",elements:[{name:"Reminder"},{name:"union",raw:"'id' | 'createdAt'",elements:[{name:"literal",value:"'id'"},{name:"literal",value:"'createdAt'"}]}],raw:"Omit<Reminder, 'id' | 'createdAt'>"},name:"reminder"}],return:{name:"void"}}},description:""},onUpdateReminder:{required:!1,tsType:{name:"signature",type:"function",raw:"(reminderId: string, updates: Partial<Reminder>) => void",signature:{arguments:[{type:{name:"string"},name:"reminderId"},{type:{name:"Partial",elements:[{name:"Reminder"}],raw:"Partial<Reminder>"},name:"updates"}],return:{name:"void"}}},description:""},onDeleteReminder:{required:!1,tsType:{name:"signature",type:"function",raw:"(reminderId: string) => void",signature:{arguments:[{type:{name:"string"},name:"reminderId"}],return:{name:"void"}}},description:""},onViewChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(view: View) => void",signature:{arguments:[{type:{name:"union",raw:"'kanban' | 'planning' | 'tasks' | 'files' | 'epics'",elements:[{name:"literal",value:"'kanban'"},{name:"literal",value:"'planning'"},{name:"literal",value:"'tasks'"},{name:"literal",value:"'files'"},{name:"literal",value:"'epics'"}]},name:"view"}],return:{name:"void"}}},description:""},onToggleMobileMenu:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onTeamClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(teamId: string) => void",signature:{arguments:[{type:{name:"string"},name:"teamId"}],return:{name:"void"}}},description:""},onTeamChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(team: any) => void",signature:{arguments:[{type:{name:"any"},name:"team"}],return:{name:"void"}}},description:""},onCopilotClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},handleAddComment:{required:!1,tsType:{name:"signature",type:"function",raw:"({ content, taskId }: { taskId: string; content: string }) => Promise<Task>",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ taskId: string; content: string }",signature:{properties:[{key:"taskId",value:{name:"string",required:!0}},{key:"content",value:{name:"string",required:!0}}]}},name:""}],return:{name:"Promise",elements:[{name:"Task"}],raw:"Promise<Task>"}}},description:""}}}}}]);