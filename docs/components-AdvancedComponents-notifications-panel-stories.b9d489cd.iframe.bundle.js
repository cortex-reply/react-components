"use strict";(self.webpackChunkcortex_react_components=self.webpackChunkcortex_react_components||[]).push([[7268],{"./src/components/AdvancedComponents/notifications-panel.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Empty:()=>Empty,OnlyReadNotifications:()=>OnlyReadNotifications,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _notifications_panel__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/AdvancedComponents/notifications-panel.tsx"),_DigitalColleagues_test_data__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/DigitalColleagues/test-data.tsx"),console=__webpack_require__("./node_modules/.pnpm/console-browserify@1.2.0/node_modules/console-browserify/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Advanced Components/NotificationsPanel",component:_notifications_panel__WEBPACK_IMPORTED_MODULE_0__.L,parameters:{layout:"fullscreen",docs:{description:{component:"A notifications panel that only shows unread notifications. Users can dismiss notifications individually or use 'Dismiss all' for bulk actions."}}},argTypes:{open:{control:"boolean"}}},Default={args:{notifications:_DigitalColleagues_test_data__WEBPACK_IMPORTED_MODULE_1__.pG,open:!0,onClose:()=>console.log("Close clicked"),onNotificationRemove:id=>console.log("Notification removed:",id),onRemoveAll:()=>console.log("Remove all clicked")}},Empty={args:{notifications:[],open:!0,onClose:()=>console.log("Close clicked"),onNotificationRemove:id=>console.log("Notification removed:",id),onRemoveAll:()=>console.log("Remove all clicked")}},OnlyReadNotifications={args:{notifications:_DigitalColleagues_test_data__WEBPACK_IMPORTED_MODULE_1__.pG.map((n=>({...n,read:!0}))),open:!0,onClose:()=>console.log("Close clicked"),onNotificationRemove:id=>console.log("Notification removed:",id),onRemoveAll:()=>console.log("Remove all clicked")}},__namedExportsOrder=["Default","Empty","OnlyReadNotifications"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    notifications: mockNotifications,\n    open: true,\n    onClose: () => console.log("Close clicked"),\n    onNotificationRemove: (id: string) => console.log("Notification removed:", id),\n    onRemoveAll: () => console.log("Remove all clicked")\n  }\n}',...Default.parameters?.docs?.source}}},Empty.parameters={...Empty.parameters,docs:{...Empty.parameters?.docs,source:{originalSource:'{\n  args: {\n    notifications: [],\n    open: true,\n    onClose: () => console.log("Close clicked"),\n    onNotificationRemove: (id: string) => console.log("Notification removed:", id),\n    onRemoveAll: () => console.log("Remove all clicked")\n  }\n}',...Empty.parameters?.docs?.source}}},OnlyReadNotifications.parameters={...OnlyReadNotifications.parameters,docs:{...OnlyReadNotifications.parameters?.docs,source:{originalSource:'{\n  args: {\n    notifications: mockNotifications.map(n => ({\n      ...n,\n      read: true\n    })),\n    open: true,\n    onClose: () => console.log("Close clicked"),\n    onNotificationRemove: (id: string) => console.log("Notification removed:", id),\n    onRemoveAll: () => console.log("Remove all clicked")\n  }\n}',...OnlyReadNotifications.parameters?.docs?.source}}}}}]);