/*! For license information please see components-DigitalColleagues-team-form-stories.ed688c6c.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkcortex_react_components=self.webpackChunkcortex_react_components||[]).push([[2281],{"./node_modules/.pnpm/@radix-ui+react-compose-refs@1.1.1_@types+react@19.0.2_react@19.0.0/node_modules/@radix-ui/react-compose-refs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{s:()=>useComposedRefs,t:()=>composeRefs});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/index.js");function setRef(ref,value){if("function"==typeof ref)return ref(value);null!=ref&&(ref.current=value)}function composeRefs(...refs){return node=>{let hasCleanup=!1;const cleanups=refs.map((ref=>{const cleanup=setRef(ref,node);return hasCleanup||"function"!=typeof cleanup||(hasCleanup=!0),cleanup}));if(hasCleanup)return()=>{for(let i=0;i<cleanups.length;i++){const cleanup=cleanups[i];"function"==typeof cleanup?cleanup():setRef(refs[i],null)}}}}function useComposedRefs(...refs){return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(composeRefs(...refs),refs)}},"./node_modules/.pnpm/@radix-ui+react-label@2.1.1_@types+react-dom@19.0.2_@types+react@19.0.2__@types+react@1_321aba799e0023b90b4c7c3e34cc0ef4/node_modules/@radix-ui/react-label/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{b:()=>Root});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/index.js"),_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/@radix-ui+react-primitive@2.0.1_@types+react-dom@19.0.2_@types+react@19.0.2__@types+rea_972b36ef307cd961110978cf6cfab524/node_modules/@radix-ui/react-primitive/dist/index.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),Label=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(((props,forwardedRef)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__.sG.label,{...props,ref:forwardedRef,onMouseDown:event=>{event.target.closest("button, input, select, textarea")||(props.onMouseDown?.(event),!event.defaultPrevented&&event.detail>1&&event.preventDefault())}})));Label.displayName="Label";var Root=Label},"./node_modules/.pnpm/@radix-ui+react-primitive@2.0.1_@types+react-dom@19.0.2_@types+react@19.0.2__@types+rea_972b36ef307cd961110978cf6cfab524/node_modules/@radix-ui/react-primitive/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{hO:()=>dispatchDiscreteCustomEvent,sG:()=>Primitive});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/index.js"),react_dom__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react-dom/index.js"),_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/@radix-ui+react-slot@1.1.1_@types+react@19.0.2_react@19.0.0/node_modules/@radix-ui/react-slot/dist/index.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),Primitive=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","span","svg","ul"].reduce(((primitive,node)=>{const Node=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(((props,forwardedRef)=>{const{asChild,...primitiveProps}=props,Comp=asChild?_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__.DX:node;return"undefined"!=typeof window&&(window[Symbol.for("radix-ui")]=!0),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Comp,{...primitiveProps,ref:forwardedRef})}));return Node.displayName=`Primitive.${node}`,{...primitive,[node]:Node}}),{});function dispatchDiscreteCustomEvent(target,event){target&&react_dom__WEBPACK_IMPORTED_MODULE_1__.flushSync((()=>target.dispatchEvent(event)))}},"./node_modules/.pnpm/@radix-ui+react-slot@1.1.1_@types+react@19.0.2_react@19.0.0/node_modules/@radix-ui/react-slot/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{DX:()=>Slot,xV:()=>Slottable});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/index.js"),_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/@radix-ui+react-compose-refs@1.1.1_@types+react@19.0.2_react@19.0.0/node_modules/@radix-ui/react-compose-refs/dist/index.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),Slot=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(((props,forwardedRef)=>{const{children,...slotProps}=props,childrenArray=react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children),slottable=childrenArray.find(isSlottable);if(slottable){const newElement=slottable.props.children,newChildren=childrenArray.map((child=>child===slottable?react__WEBPACK_IMPORTED_MODULE_0__.Children.count(newElement)>1?react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null):react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement)?newElement.props.children:null:child));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SlotClone,{...slotProps,ref:forwardedRef,children:react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement)?react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(newElement,void 0,newChildren):null})}return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SlotClone,{...slotProps,ref:forwardedRef,children})}));Slot.displayName="Slot";var SlotClone=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(((props,forwardedRef)=>{const{children,...slotProps}=props;if(react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(children)){const childrenRef=function getElementRef(element){let getter=Object.getOwnPropertyDescriptor(element.props,"ref")?.get,mayWarn=getter&&"isReactWarning"in getter&&getter.isReactWarning;if(mayWarn)return element.ref;if(getter=Object.getOwnPropertyDescriptor(element,"ref")?.get,mayWarn=getter&&"isReactWarning"in getter&&getter.isReactWarning,mayWarn)return element.props.ref;return element.props.ref||element.ref}(children);return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(children,{...mergeProps(slotProps,children.props),ref:forwardedRef?(0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.t)(forwardedRef,childrenRef):childrenRef})}return react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children)>1?react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null):null}));SlotClone.displayName="SlotClone";var Slottable=({children})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children});function isSlottable(child){return react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(child)&&child.type===Slottable}function mergeProps(slotProps,childProps){const overrideProps={...childProps};for(const propName in childProps){const slotPropValue=slotProps[propName],childPropValue=childProps[propName];/^on[A-Z]/.test(propName)?slotPropValue&&childPropValue?overrideProps[propName]=(...args)=>{childPropValue(...args),slotPropValue(...args)}:slotPropValue&&(overrideProps[propName]=slotPropValue):"style"===propName?overrideProps[propName]={...slotPropValue,...childPropValue}:"className"===propName&&(overrideProps[propName]=[slotPropValue,childPropValue].filter(Boolean).join(" "))}return{...slotProps,...overrideProps}}},"./node_modules/.pnpm/@storybook+addon-actions@8.6.12_storybook@8.6.12_prettier@3.6.2_/node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js"),console=__webpack_require__("./node_modules/.pnpm/console-browserify@1.2.0/node_modules/console-browserify/index.js"),__defProp=Object.defineProperty,ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!globalThis?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}var preview_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(preview_exports,{argsEnhancers:()=>argsEnhancers,loaders:()=>loaders});var isInInitialArgs=(name,initialArgs)=>typeof initialArgs[name]>"u"&&!(name in initialArgs),argsEnhancers=[context=>{let{initialArgs,argTypes,parameters:{actions:actions2}}=context;return actions2?.disable||!argTypes?{}:Object.entries(argTypes).filter((([name,argType])=>!!argType.action)).reduce(((acc,[name,argType])=>(isInInitialArgs(name,initialArgs)&&(acc[name]=action("string"==typeof argType.action?argType.action:name)),acc)),{})},context=>{let{initialArgs,argTypes,id,parameters:{actions:actions2}}=context;if(!actions2||actions2.disable||!actions2.argTypesRegex||!argTypes)return{};let argTypesRegex=new RegExp(actions2.argTypesRegex);return Object.entries(argTypes).filter((([name])=>!!argTypesRegex.test(name))).reduce(((acc,[name,argType])=>(isInInitialArgs(name,initialArgs)&&(acc[name]=action(name,{implicit:!0,id})),acc)),{})}],subscribed=!1,loaders=[context=>{let{parameters:{actions:actions2}}=context;if(!actions2?.disable&&!subscribed&&"__STORYBOOK_TEST_ON_MOCK_CALL__"in external_STORYBOOK_MODULE_GLOBAL_.global&&"function"==typeof external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_TEST_ON_MOCK_CALL__){(0,external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_TEST_ON_MOCK_CALL__)(((mock,args)=>{let name=mock.getMockName();"spy"!==name&&(!/^next\/.*::/.test(name)||["next/router::useRouter()","next/navigation::useRouter()","next/navigation::redirect","next/cache::","next/headers::cookies().set","next/headers::cookies().delete","next/headers::headers().set","next/headers::headers().delete"].some((prefix=>name.startsWith(prefix))))&&action(name)(args)})),subscribed=!0}}]},"./src/components/DigitalColleagues/team-form.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CancelFunctionalityTest:()=>CancelFunctionalityTest,ConfigurationTogglesTest:()=>ConfigurationTogglesTest,CreateNewTeam:()=>CreateNewTeam,Default:()=>Default,EditExistingTeam:()=>EditExistingTeam,EditModeToggleTest:()=>EditModeToggleTest,FormValidationTest:()=>FormValidationTest,InteractiveFormTest:()=>InteractiveFormTest,LoadingState:()=>LoadingState,ReadOnlyView:()=>ReadOnlyView,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/@storybook+addon-actions@8.6.12_storybook@8.6.12_prettier@3.6.2_/node_modules/@storybook/addon-actions/dist/index.mjs"),_storybook_test__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/@storybook+test@8.6.12_storybook@8.6.12_prettier@3.6.2_/node_modules/@storybook/test/dist/index.mjs");const mockExistingTeam={id:1,name:"Product Development Team",description:"Cross-functional team focused on developing innovative products.",systemMsg:"This team follows agile methodology and focuses on user-centered design.",useProjects:!0,useKnowledge:!0,useFiles:!1,useChat:!0,updatedAt:"2024-02-27T10:30:00Z",createdAt:"2024-01-15T09:00:00Z"},__WEBPACK_DEFAULT_EXPORT__={title:"Digital Colleagues/TeamForm",component:__webpack_require__("./src/components/DigitalColleagues/team-form.tsx").O,parameters:{layout:"fullscreen",docs:{description:{component:"A simplified form for creating and editing teams with basic configuration options."}}},argTypes:{team:{description:"Optional existing team data for editing",control:"object"},onSave:{description:"Callback function called when the form is submitted",action:"onSave"},onCancel:{description:"Callback function called when the form is cancelled",action:"onCancel"},isLoading:{description:"Loading state of the form",control:"boolean"},title:{description:"Custom title for the form",control:"text"},submitLabel:{description:"Custom label for the submit button",control:"text"},cancelLabel:{description:"Custom label for the cancel button",control:"text"},readOnly:{description:"Whether the form is in read-only mode",control:"boolean"}}},Default={args:{onSave:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("onSave"),onCancel:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("onCancel")}},CreateNewTeam={args:{...Default.args,title:"Create New Team",submitLabel:"Create Team"},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.ux)(canvasElement);await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(canvas.getByText("Create New Team")).toBeInTheDocument();const nameInput=canvas.getByLabelText("Team Name *");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(nameInput).toBeInTheDocument(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(nameInput).not.toBeDisabled();const descriptionTextarea=canvas.getByLabelText("Description");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(descriptionTextarea).toBeInTheDocument(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(descriptionTextarea).not.toBeDisabled();const submitButton=canvas.getByRole("button",{name:"Create Team"});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(submitButton).toBeInTheDocument(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(submitButton).toBeDisabled()}},EditExistingTeam={args:{...Default.args,team:mockExistingTeam,title:"Edit Team",submitLabel:"Update Team"},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.ux)(canvasElement);await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(canvas.getByDisplayValue("Product Development Team")).toBeInTheDocument(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(canvas.getByDisplayValue("Cross-functional team focused on developing innovative products.")).toBeInTheDocument();const projectsSwitch=canvas.getByRole("switch",{name:"Enable Projects"});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(projectsSwitch).toBeChecked();const knowledgeSwitch=canvas.getByRole("switch",{name:"Enable Knowledge Base"});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(knowledgeSwitch).toBeChecked();const chatSwitch=canvas.getByRole("switch",{name:"Enable Team Chat"});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(chatSwitch).toBeChecked();const filesSwitch=canvas.getByRole("switch",{name:"Enable File Management"});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(filesSwitch).not.toBeChecked()}},ReadOnlyView={args:{...Default.args,team:mockExistingTeam,readOnly:!0},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.ux)(canvasElement);await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(canvas.getByText("View Team")).toBeInTheDocument();const nameInput=canvas.getByDisplayValue("Product Development Team");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(nameInput).toBeDisabled();const editButton=canvas.getByRole("button",{name:"Edit"});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(editButton).toBeInTheDocument();const closeButton=canvas.getByRole("button",{name:"Close"});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(closeButton).toBeInTheDocument()}},LoadingState={args:{...Default.args,isLoading:!0},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.ux)(canvasElement),nameInput=canvas.getByLabelText("Team Name *");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(nameInput).toBeDisabled(),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(canvas.getByText("Saving...")).toBeInTheDocument()}},InteractiveFormTest={args:{...Default.args,onSave:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Team Saved"),onCancel:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Form Cancelled")},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.ux)(canvasElement),user=_storybook_test__WEBPACK_IMPORTED_MODULE_1__.Q4.setup(),nameInput=canvas.getByLabelText("Team Name *");await user.clear(nameInput),await user.type(nameInput,"Test Team"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(nameInput).toHaveValue("Test Team");const descriptionTextarea=canvas.getByLabelText("Description");await user.type(descriptionTextarea,"This is a test team for demonstration purposes."),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(descriptionTextarea).toHaveValue("This is a test team for demonstration purposes.");const systemMsgTextarea=canvas.getByLabelText("Ways of working");await user.type(systemMsgTextarea,"Follow best practices and collaborate effectively."),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(systemMsgTextarea).toHaveValue("Follow best practices and collaborate effectively.");const projectsSwitch=canvas.getByRole("switch",{name:"Enable Projects"});await user.click(projectsSwitch),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(projectsSwitch).toBeChecked();const knowledgeSwitch=canvas.getByRole("switch",{name:"Enable Knowledge Base"});await user.click(knowledgeSwitch),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(knowledgeSwitch).toBeChecked();const filesSwitch=canvas.getByRole("switch",{name:"Enable File Management"});await user.click(filesSwitch),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(filesSwitch).toBeChecked();const chatSwitch=canvas.getByRole("switch",{name:"Enable Team Chat"});await user.click(chatSwitch),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(chatSwitch).toBeChecked();const submitButton=canvas.getByRole("button",{name:"Create Team"});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(submitButton).not.toBeDisabled()}},ConfigurationTogglesTest={args:{...Default.args,onSave:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Team Configuration Saved")},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.ux)(canvasElement),user=_storybook_test__WEBPACK_IMPORTED_MODULE_1__.Q4.setup(),nameInput=canvas.getByLabelText("Team Name *");await user.type(nameInput,"Configuration Test Team");const toggles=[{name:"Enable Projects",initialState:!1},{name:"Enable Knowledge Base",initialState:!1},{name:"Enable File Management",initialState:!1},{name:"Enable Team Chat",initialState:!1}];for(const toggle of toggles){const switchElement=canvas.getByRole("switch",{name:toggle.name});toggle.initialState?await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(switchElement).toBeChecked():await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(switchElement).not.toBeChecked()}for(const toggle of toggles){const switchElement=canvas.getByRole("switch",{name:toggle.name});await user.click(switchElement),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(switchElement).toBeChecked(),await user.click(switchElement),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(switchElement).not.toBeChecked()}}},FormValidationTest={args:{...Default.args},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.ux)(canvasElement),user=_storybook_test__WEBPACK_IMPORTED_MODULE_1__.Q4.setup(),submitButton=canvas.getByRole("button",{name:"Create Team"});await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(submitButton).toBeDisabled();const nameInput=canvas.getByLabelText("Team Name *");await user.type(nameInput,"Valid Team Name"),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fm)((()=>{(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(submitButton).not.toBeDisabled()})),await user.clear(nameInput),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fm)((()=>{(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(submitButton).toBeDisabled()}))}},EditModeToggleTest={args:{...Default.args,team:mockExistingTeam,readOnly:!0},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.ux)(canvasElement),user=_storybook_test__WEBPACK_IMPORTED_MODULE_1__.Q4.setup(),nameInput=canvas.getByDisplayValue("Product Development Team");await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(nameInput).toBeDisabled();const editButton=canvas.getByRole("button",{name:"Edit"});await user.click(editButton),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fm)((()=>{(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(nameInput).not.toBeDisabled()})),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(canvas.getByRole("button",{name:"Update Team"})).toBeInTheDocument()}},CancelFunctionalityTest={args:{...Default.args,onCancel:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Form Cancelled - Data should be reset")},play:async({canvasElement})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.ux)(canvasElement),user=_storybook_test__WEBPACK_IMPORTED_MODULE_1__.Q4.setup(),nameInput=canvas.getByLabelText("Team Name *");await user.type(nameInput,"Changed Team Name");const descriptionTextarea=canvas.getByLabelText("Description");await user.type(descriptionTextarea,"Changed description");const cancelButton=canvas.getByRole("button",{name:"Cancel"});await user.click(cancelButton)}},__namedExportsOrder=["Default","CreateNewTeam","EditExistingTeam","ReadOnlyView","LoadingState","InteractiveFormTest","ConfigurationTogglesTest","FormValidationTest","EditModeToggleTest","CancelFunctionalityTest"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    onSave: action('onSave'),\n    onCancel: action('onCancel')\n  }\n}",...Default.parameters?.docs?.source}}},CreateNewTeam.parameters={...CreateNewTeam.parameters,docs:{...CreateNewTeam.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    title: 'Create New Team',\n    submitLabel: 'Create Team'\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n\n    // Test form title\n    await expect(canvas.getByText('Create New Team')).toBeInTheDocument();\n\n    // Test form fields are present and editable\n    const nameInput = canvas.getByLabelText('Team Name *');\n    await expect(nameInput).toBeInTheDocument();\n    await expect(nameInput).not.toBeDisabled();\n    const descriptionTextarea = canvas.getByLabelText('Description');\n    await expect(descriptionTextarea).toBeInTheDocument();\n    await expect(descriptionTextarea).not.toBeDisabled();\n\n    // Test submit button is present but disabled without name\n    const submitButton = canvas.getByRole('button', {\n      name: 'Create Team'\n    });\n    await expect(submitButton).toBeInTheDocument();\n    await expect(submitButton).toBeDisabled();\n  }\n}",...CreateNewTeam.parameters?.docs?.source}}},EditExistingTeam.parameters={...EditExistingTeam.parameters,docs:{...EditExistingTeam.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    team: mockExistingTeam,\n    title: 'Edit Team',\n    submitLabel: 'Update Team'\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n\n    // Test form is populated with existing data\n    await expect(canvas.getByDisplayValue('Product Development Team')).toBeInTheDocument();\n    await expect(canvas.getByDisplayValue('Cross-functional team focused on developing innovative products.')).toBeInTheDocument();\n\n    // Test that enabled switches are checked\n    const projectsSwitch = canvas.getByRole('switch', {\n      name: 'Enable Projects'\n    });\n    await expect(projectsSwitch).toBeChecked();\n    const knowledgeSwitch = canvas.getByRole('switch', {\n      name: 'Enable Knowledge Base'\n    });\n    await expect(knowledgeSwitch).toBeChecked();\n    const chatSwitch = canvas.getByRole('switch', {\n      name: 'Enable Team Chat'\n    });\n    await expect(chatSwitch).toBeChecked();\n\n    // Test that disabled switch is unchecked\n    const filesSwitch = canvas.getByRole('switch', {\n      name: 'Enable File Management'\n    });\n    await expect(filesSwitch).not.toBeChecked();\n  }\n}",...EditExistingTeam.parameters?.docs?.source}}},ReadOnlyView.parameters={...ReadOnlyView.parameters,docs:{...ReadOnlyView.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    team: mockExistingTeam,\n    readOnly: true\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n\n    // Test form title shows view mode\n    await expect(canvas.getByText('View Team')).toBeInTheDocument();\n\n    // Test form fields are disabled\n    const nameInput = canvas.getByDisplayValue('Product Development Team');\n    await expect(nameInput).toBeDisabled();\n\n    // Test edit button is present\n    const editButton = canvas.getByRole('button', {\n      name: 'Edit'\n    });\n    await expect(editButton).toBeInTheDocument();\n\n    // Test close button instead of cancel\n    const closeButton = canvas.getByRole('button', {\n      name: 'Close'\n    });\n    await expect(closeButton).toBeInTheDocument();\n  }\n}",...ReadOnlyView.parameters?.docs?.source}}},LoadingState.parameters={...LoadingState.parameters,docs:{...LoadingState.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    isLoading: true\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n\n    // Test form fields are disabled during loading\n    const nameInput = canvas.getByLabelText('Team Name *');\n    await expect(nameInput).toBeDisabled();\n\n    // Test buttons show loading state\n    await expect(canvas.getByText('Saving...')).toBeInTheDocument();\n  }\n}",...LoadingState.parameters?.docs?.source}}},InteractiveFormTest.parameters={...InteractiveFormTest.parameters,docs:{...InteractiveFormTest.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    onSave: action('Team Saved'),\n    onCancel: action('Form Cancelled')\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const user = userEvent.setup();\n\n    // Fill in team name\n    const nameInput = canvas.getByLabelText('Team Name *');\n    await user.clear(nameInput);\n    await user.type(nameInput, 'Test Team');\n    await expect(nameInput).toHaveValue('Test Team');\n\n    // Fill in description\n    const descriptionTextarea = canvas.getByLabelText('Description');\n    await user.type(descriptionTextarea, 'This is a test team for demonstration purposes.');\n    await expect(descriptionTextarea).toHaveValue('This is a test team for demonstration purposes.');\n\n    // Fill in ways of working\n    const systemMsgTextarea = canvas.getByLabelText('Ways of working');\n    await user.type(systemMsgTextarea, 'Follow best practices and collaborate effectively.');\n    await expect(systemMsgTextarea).toHaveValue('Follow best practices and collaborate effectively.');\n\n    // Toggle all configuration switches\n    const projectsSwitch = canvas.getByRole('switch', {\n      name: 'Enable Projects'\n    });\n    await user.click(projectsSwitch);\n    await expect(projectsSwitch).toBeChecked();\n    const knowledgeSwitch = canvas.getByRole('switch', {\n      name: 'Enable Knowledge Base'\n    });\n    await user.click(knowledgeSwitch);\n    await expect(knowledgeSwitch).toBeChecked();\n    const filesSwitch = canvas.getByRole('switch', {\n      name: 'Enable File Management'\n    });\n    await user.click(filesSwitch);\n    await expect(filesSwitch).toBeChecked();\n    const chatSwitch = canvas.getByRole('switch', {\n      name: 'Enable Team Chat'\n    });\n    await user.click(chatSwitch);\n    await expect(chatSwitch).toBeChecked();\n\n    // Test that submit button is now enabled\n    const submitButton = canvas.getByRole('button', {\n      name: 'Create Team'\n    });\n    await expect(submitButton).not.toBeDisabled();\n  }\n}",...InteractiveFormTest.parameters?.docs?.source}}},ConfigurationTogglesTest.parameters={...ConfigurationTogglesTest.parameters,docs:{...ConfigurationTogglesTest.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    onSave: action('Team Configuration Saved')\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const user = userEvent.setup();\n\n    // Add team name first to enable submit\n    const nameInput = canvas.getByLabelText('Team Name *');\n    await user.type(nameInput, 'Configuration Test Team');\n\n    // Test all configuration toggles\n    const toggles = [{\n      name: 'Enable Projects',\n      initialState: false\n    }, {\n      name: 'Enable Knowledge Base',\n      initialState: false\n    }, {\n      name: 'Enable File Management',\n      initialState: false\n    }, {\n      name: 'Enable Team Chat',\n      initialState: false\n    }];\n\n    // Test initial states (all should be unchecked for new team)\n    for (const toggle of toggles) {\n      const switchElement = canvas.getByRole('switch', {\n        name: toggle.name\n      });\n      if (toggle.initialState) {\n        await expect(switchElement).toBeChecked();\n      } else {\n        await expect(switchElement).not.toBeChecked();\n      }\n    }\n\n    // Toggle each switch and verify state change\n    for (const toggle of toggles) {\n      const switchElement = canvas.getByRole('switch', {\n        name: toggle.name\n      });\n      await user.click(switchElement);\n      await expect(switchElement).toBeChecked();\n\n      // Toggle back\n      await user.click(switchElement);\n      await expect(switchElement).not.toBeChecked();\n    }\n  }\n}",...ConfigurationTogglesTest.parameters?.docs?.source}}},FormValidationTest.parameters={...FormValidationTest.parameters,docs:{...FormValidationTest.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const user = userEvent.setup();\n\n    // Test that submit button is disabled when name is empty\n    const submitButton = canvas.getByRole('button', {\n      name: 'Create Team'\n    });\n    await expect(submitButton).toBeDisabled();\n\n    // Add team name\n    const nameInput = canvas.getByLabelText('Team Name *');\n    await user.type(nameInput, 'Valid Team Name');\n\n    // Test that submit button is now enabled\n    await waitFor(() => {\n      expect(submitButton).not.toBeDisabled();\n    });\n\n    // Clear the name and verify button is disabled again\n    await user.clear(nameInput);\n    await waitFor(() => {\n      expect(submitButton).toBeDisabled();\n    });\n  }\n}",...FormValidationTest.parameters?.docs?.source}}},EditModeToggleTest.parameters={...EditModeToggleTest.parameters,docs:{...EditModeToggleTest.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    team: mockExistingTeam,\n    readOnly: true\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const user = userEvent.setup();\n\n    // Test initial read-only state\n    const nameInput = canvas.getByDisplayValue('Product Development Team');\n    await expect(nameInput).toBeDisabled();\n\n    // Click edit button\n    const editButton = canvas.getByRole('button', {\n      name: 'Edit'\n    });\n    await user.click(editButton);\n\n    // Test that form is now editable\n    await waitFor(() => {\n      expect(nameInput).not.toBeDisabled();\n    });\n\n    // Test that submit button is now visible\n    await expect(canvas.getByRole('button', {\n      name: 'Update Team'\n    })).toBeInTheDocument();\n  }\n}",...EditModeToggleTest.parameters?.docs?.source}}},CancelFunctionalityTest.parameters={...CancelFunctionalityTest.parameters,docs:{...CancelFunctionalityTest.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    onCancel: action('Form Cancelled - Data should be reset')\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const user = userEvent.setup();\n\n    // Make some changes to the form\n    const nameInput = canvas.getByLabelText('Team Name *');\n    await user.type(nameInput, 'Changed Team Name');\n    const descriptionTextarea = canvas.getByLabelText('Description');\n    await user.type(descriptionTextarea, 'Changed description');\n\n    // Click cancel button\n    const cancelButton = canvas.getByRole('button', {\n      name: 'Cancel'\n    });\n    await user.click(cancelButton);\n\n    // The onCancel action should be triggered (visible in Actions tab)\n  }\n}",...CancelFunctionalityTest.parameters?.docs?.source}}}},"./node_modules/.pnpm/class-variance-authority@0.7.1/node_modules/class-variance-authority/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{F:()=>cva});var clsx__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs");const falsyToString=value=>"boolean"==typeof value?`${value}`:0===value?"0":value,cx=clsx__WEBPACK_IMPORTED_MODULE_0__.$,cva=(base,config)=>props=>{var _config_compoundVariants;if(null==(null==config?void 0:config.variants))return cx(base,null==props?void 0:props.class,null==props?void 0:props.className);const{variants,defaultVariants}=config,getVariantClassNames=Object.keys(variants).map((variant=>{const variantProp=null==props?void 0:props[variant],defaultVariantProp=null==defaultVariants?void 0:defaultVariants[variant];if(null===variantProp)return null;const variantKey=falsyToString(variantProp)||falsyToString(defaultVariantProp);return variants[variant][variantKey]})),propsWithoutUndefined=props&&Object.entries(props).reduce(((acc,param)=>{let[key,value]=param;return void 0===value||(acc[key]=value),acc}),{}),getCompoundVariantClassNames=null==config||null===(_config_compoundVariants=config.compoundVariants)||void 0===_config_compoundVariants?void 0:_config_compoundVariants.reduce(((acc,param)=>{let{class:cvClass,className:cvClassName,...compoundVariantOptions}=param;return Object.entries(compoundVariantOptions).every((param=>{let[key,value]=param;return Array.isArray(value)?value.includes({...defaultVariants,...propsWithoutUndefined}[key]):{...defaultVariants,...propsWithoutUndefined}[key]===value}))?[...acc,cvClass,cvClassName]:acc}),[]);return cx(base,getVariantClassNames,getCompoundVariantClassNames,null==props?void 0:props.class,null==props?void 0:props.className)}},"./node_modules/.pnpm/lucide-react@0.469.0_react@19.0.0/node_modules/lucide-react/dist/esm/createLucideIcon.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>createLucideIcon});var react=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/index.js");const mergeClasses=(...classes)=>classes.filter(((className,index,array)=>Boolean(className)&&""!==className.trim()&&array.indexOf(className)===index)).join(" ").trim();var defaultAttributes={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const Icon=(0,react.forwardRef)((({color="currentColor",size=24,strokeWidth=2,absoluteStrokeWidth,className="",children,iconNode,...rest},ref)=>(0,react.createElement)("svg",{ref,...defaultAttributes,width:size,height:size,stroke:color,strokeWidth:absoluteStrokeWidth?24*Number(strokeWidth)/Number(size):strokeWidth,className:mergeClasses("lucide",className),...rest},[...iconNode.map((([tag,attrs])=>(0,react.createElement)(tag,attrs))),...Array.isArray(children)?children:[children]]))),createLucideIcon=(iconName,iconNode)=>{const Component=(0,react.forwardRef)((({className,...props},ref)=>{return(0,react.createElement)(Icon,{ref,iconNode,className:mergeClasses(`lucide-${string=iconName,string.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,className),...props});var string}));return Component.displayName=`${iconName}`,Component}},"./node_modules/.pnpm/lucide-react@0.469.0_react@19.0.0/node_modules/lucide-react/dist/esm/icons/square-pen.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>SquarePen});const SquarePen=(0,__webpack_require__("./node_modules/.pnpm/lucide-react@0.469.0_react@19.0.0/node_modules/lucide-react/dist/esm/createLucideIcon.js").A)("SquarePen",[["path",{d:"M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7",key:"1m0v6g"}],["path",{d:"M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z",key:"ohrbg2"}]])},"./node_modules/.pnpm/lucide-react@0.469.0_react@19.0.0/node_modules/lucide-react/dist/esm/icons/users.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Users});const Users=(0,__webpack_require__("./node_modules/.pnpm/lucide-react@0.469.0_react@19.0.0/node_modules/lucide-react/dist/esm/createLucideIcon.js").A)("Users",[["path",{d:"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2",key:"1yyitq"}],["circle",{cx:"9",cy:"7",r:"4",key:"nufk8"}],["path",{d:"M22 21v-2a4 4 0 0 0-3-3.87",key:"kshegd"}],["path",{d:"M16 3.13a4 4 0 0 1 0 7.75",key:"1da9ce"}]])}}]);