"use strict";(self.webpackChunkcortex_react_components=self.webpackChunkcortex_react_components||[]).push([[4705],{"./src/components/Projects/project-form.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CompactLayout:()=>CompactLayout,Default:()=>Default,Loading:()=>Loading,ValidationDemo:()=>ValidationDemo,WithInitialData:()=>WithInitialData,WithoutCancel:()=>WithoutCancel,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/@storybook+addon-actions@8.6.12_storybook@8.6.12_prettier@3.6.2_/node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Projects/ProjectForm",component:__webpack_require__("./src/components/Projects/project-form.tsx").o,parameters:{layout:"centered",docs:{description:{component:"A reusable form component for creating new projects with validation and loading states."}}},argTypes:{onSubmit:{action:"submitted"},onCancel:{action:"cancelled"},isLoading:{control:"boolean",description:"Shows loading state when form is being submitted"},initialData:{control:"object",description:"Initial form data for editing existing projects"}},tags:["autodocs"]},mockSubmit=async data=>{(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Form submitted")(data),await new Promise((resolve=>setTimeout(resolve,2e3)))},Default={args:{onSubmit:mockSubmit,onCancel:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Form cancelled"),isLoading:!1}},WithInitialData={args:{onSubmit:mockSubmit,onCancel:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Form cancelled"),isLoading:!1,initialData:{name:"E-commerce Platform",objectives:"Build a modern, scalable e-commerce platform that provides excellent user experience and supports high traffic volumes.",workInstructions:"Follow agile development practices with daily standups, weekly sprint planning, and code reviews. Use TypeScript and React for frontend, Node.js for backend. Ensure all code is well-tested and documented.",plan:!0}},parameters:{docs:{description:{story:"Form pre-populated with existing project data for editing scenarios."}}}},Loading={args:{onSubmit:mockSubmit,onCancel:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Form cancelled"),isLoading:!0,initialData:{name:"Sample Project",objectives:"Sample objectives for demonstration",workInstructions:"Sample work instructions for the loading state demonstration",plan:!1}},parameters:{docs:{description:{story:"Form in loading state during submission."}}}},WithoutCancel={args:{onSubmit:mockSubmit,isLoading:!1},parameters:{docs:{description:{story:"Form without cancel button - useful for modal or dedicated page scenarios."}}}},CompactLayout={args:{onSubmit:mockSubmit,onCancel:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Form cancelled"),isLoading:!1,className:"max-w-lg"},parameters:{docs:{description:{story:"Compact form layout with reduced maximum width."}}}},ValidationDemo={args:{onSubmit:async data=>{(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Validation Demo - Form submitted")(data),await new Promise((resolve=>setTimeout(resolve,1e3)))},onCancel:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Validation Demo - Form cancelled"),isLoading:!1},parameters:{docs:{description:{story:"Try submitting the form with empty or insufficient data to see validation in action."}}}},__namedExportsOrder=["Default","WithInitialData","Loading","WithoutCancel","CompactLayout","ValidationDemo"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    onSubmit: mockSubmit,\n    onCancel: action('Form cancelled'),\n    isLoading: false\n  }\n}",...Default.parameters?.docs?.source}}},WithInitialData.parameters={...WithInitialData.parameters,docs:{...WithInitialData.parameters?.docs,source:{originalSource:"{\n  args: {\n    onSubmit: mockSubmit,\n    onCancel: action('Form cancelled'),\n    isLoading: false,\n    initialData: {\n      name: 'E-commerce Platform',\n      objectives: 'Build a modern, scalable e-commerce platform that provides excellent user experience and supports high traffic volumes.',\n      workInstructions: 'Follow agile development practices with daily standups, weekly sprint planning, and code reviews. Use TypeScript and React for frontend, Node.js for backend. Ensure all code is well-tested and documented.',\n      plan: true\n    }\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Form pre-populated with existing project data for editing scenarios.'\n      }\n    }\n  }\n}",...WithInitialData.parameters?.docs?.source}}},Loading.parameters={...Loading.parameters,docs:{...Loading.parameters?.docs,source:{originalSource:"{\n  args: {\n    onSubmit: mockSubmit,\n    onCancel: action('Form cancelled'),\n    isLoading: true,\n    initialData: {\n      name: 'Sample Project',\n      objectives: 'Sample objectives for demonstration',\n      workInstructions: 'Sample work instructions for the loading state demonstration',\n      plan: false\n    }\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Form in loading state during submission.'\n      }\n    }\n  }\n}",...Loading.parameters?.docs?.source}}},WithoutCancel.parameters={...WithoutCancel.parameters,docs:{...WithoutCancel.parameters?.docs,source:{originalSource:"{\n  args: {\n    onSubmit: mockSubmit,\n    isLoading: false\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Form without cancel button - useful for modal or dedicated page scenarios.'\n      }\n    }\n  }\n}",...WithoutCancel.parameters?.docs?.source}}},CompactLayout.parameters={...CompactLayout.parameters,docs:{...CompactLayout.parameters?.docs,source:{originalSource:"{\n  args: {\n    onSubmit: mockSubmit,\n    onCancel: action('Form cancelled'),\n    isLoading: false,\n    className: 'max-w-lg'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Compact form layout with reduced maximum width.'\n      }\n    }\n  }\n}",...CompactLayout.parameters?.docs?.source}}},ValidationDemo.parameters={...ValidationDemo.parameters,docs:{...ValidationDemo.parameters?.docs,source:{originalSource:"{\n  args: {\n    onSubmit: async (data: ProjectFormData) => {\n      action('Validation Demo - Form submitted')(data);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n    },\n    onCancel: action('Validation Demo - Form cancelled'),\n    isLoading: false\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Try submitting the form with empty or insufficient data to see validation in action.'\n      }\n    }\n  }\n}",...ValidationDemo.parameters?.docs?.source}}}}}]);