"use strict";(self.webpackChunkcortex_react_components=self.webpackChunkcortex_react_components||[]).push([[791],{"./src/client/ui/hover-card.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Instant:()=>Instant,__namedExportsOrder:()=>__namedExportsOrder,default:()=>hover_card_stories});var originalBodyUserSelect,jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),dist=__webpack_require__("./node_modules/@radix-ui/primitive/dist/index.mjs"),react_context_dist=__webpack_require__("./node_modules/@radix-ui/react-context/dist/index.mjs"),react_use_controllable_state_dist=__webpack_require__("./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs"),react_compose_refs_dist=__webpack_require__("./node_modules/@radix-ui/react-compose-refs/dist/index.mjs"),react_popper_dist=__webpack_require__("./node_modules/@radix-ui/react-popper/dist/index.mjs"),react_portal_dist=__webpack_require__("./node_modules/@radix-ui/react-portal/dist/index.mjs"),react_presence_dist=__webpack_require__("./node_modules/@radix-ui/react-presence/dist/index.mjs"),react_primitive_dist=__webpack_require__("./node_modules/@radix-ui/react-primitive/dist/index.mjs"),react_dismissable_layer_dist=__webpack_require__("./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs"),[createHoverCardContext,createHoverCardScope]=(0,react_context_dist.A)("HoverCard",[react_popper_dist.Bk]),usePopperScope=(0,react_popper_dist.Bk)(),[HoverCardProvider,useHoverCardContext]=createHoverCardContext("HoverCard"),HoverCard=props=>{const{__scopeHoverCard,children,open:openProp,defaultOpen,onOpenChange,openDelay=700,closeDelay=300}=props,popperScope=usePopperScope(__scopeHoverCard),openTimerRef=react.useRef(0),closeTimerRef=react.useRef(0),hasSelectionRef=react.useRef(!1),isPointerDownOnContentRef=react.useRef(!1),[open=!1,setOpen]=(0,react_use_controllable_state_dist.i)({prop:openProp,defaultProp:defaultOpen,onChange:onOpenChange}),handleOpen=react.useCallback((()=>{clearTimeout(closeTimerRef.current),openTimerRef.current=window.setTimeout((()=>setOpen(!0)),openDelay)}),[openDelay,setOpen]),handleClose=react.useCallback((()=>{clearTimeout(openTimerRef.current),hasSelectionRef.current||isPointerDownOnContentRef.current||(closeTimerRef.current=window.setTimeout((()=>setOpen(!1)),closeDelay))}),[closeDelay,setOpen]),handleDismiss=react.useCallback((()=>setOpen(!1)),[setOpen]);return react.useEffect((()=>()=>{clearTimeout(openTimerRef.current),clearTimeout(closeTimerRef.current)}),[]),(0,jsx_runtime.jsx)(HoverCardProvider,{scope:__scopeHoverCard,open,onOpenChange:setOpen,onOpen:handleOpen,onClose:handleClose,onDismiss:handleDismiss,hasSelectionRef,isPointerDownOnContentRef,children:(0,jsx_runtime.jsx)(react_popper_dist.bL,{...popperScope,children})})};HoverCard.displayName="HoverCard";var HoverCardTrigger=react.forwardRef(((props,forwardedRef)=>{const{__scopeHoverCard,...triggerProps}=props,context=useHoverCardContext("HoverCardTrigger",__scopeHoverCard),popperScope=usePopperScope(__scopeHoverCard);return(0,jsx_runtime.jsx)(react_popper_dist.Mz,{asChild:!0,...popperScope,children:(0,jsx_runtime.jsx)(react_primitive_dist.sG.a,{"data-state":context.open?"open":"closed",...triggerProps,ref:forwardedRef,onPointerEnter:(0,dist.m)(props.onPointerEnter,excludeTouch(context.onOpen)),onPointerLeave:(0,dist.m)(props.onPointerLeave,excludeTouch(context.onClose)),onFocus:(0,dist.m)(props.onFocus,context.onOpen),onBlur:(0,dist.m)(props.onBlur,context.onClose),onTouchStart:(0,dist.m)(props.onTouchStart,(event=>event.preventDefault()))})})}));HoverCardTrigger.displayName="HoverCardTrigger";var[PortalProvider,usePortalContext]=createHoverCardContext("HoverCardPortal",{forceMount:void 0}),HoverCardPortal=props=>{const{__scopeHoverCard,forceMount,children,container}=props,context=useHoverCardContext("HoverCardPortal",__scopeHoverCard);return(0,jsx_runtime.jsx)(PortalProvider,{scope:__scopeHoverCard,forceMount,children:(0,jsx_runtime.jsx)(react_presence_dist.C,{present:forceMount||context.open,children:(0,jsx_runtime.jsx)(react_portal_dist.Z,{asChild:!0,container,children})})})};HoverCardPortal.displayName="HoverCardPortal";var HoverCardContent=react.forwardRef(((props,forwardedRef)=>{const portalContext=usePortalContext("HoverCardContent",props.__scopeHoverCard),{forceMount=portalContext.forceMount,...contentProps}=props,context=useHoverCardContext("HoverCardContent",props.__scopeHoverCard);return(0,jsx_runtime.jsx)(react_presence_dist.C,{present:forceMount||context.open,children:(0,jsx_runtime.jsx)(HoverCardContentImpl,{"data-state":context.open?"open":"closed",...contentProps,onPointerEnter:(0,dist.m)(props.onPointerEnter,excludeTouch(context.onOpen)),onPointerLeave:(0,dist.m)(props.onPointerLeave,excludeTouch(context.onClose)),ref:forwardedRef})})}));HoverCardContent.displayName="HoverCardContent";var HoverCardContentImpl=react.forwardRef(((props,forwardedRef)=>{const{__scopeHoverCard,onEscapeKeyDown,onPointerDownOutside,onFocusOutside,onInteractOutside,...contentProps}=props,context=useHoverCardContext("HoverCardContent",__scopeHoverCard),popperScope=usePopperScope(__scopeHoverCard),ref=react.useRef(null),composedRefs=(0,react_compose_refs_dist.s)(forwardedRef,ref),[containSelection,setContainSelection]=react.useState(!1);return react.useEffect((()=>{if(containSelection){const body=document.body;return originalBodyUserSelect=body.style.userSelect||body.style.webkitUserSelect,body.style.userSelect="none",body.style.webkitUserSelect="none",()=>{body.style.userSelect=originalBodyUserSelect,body.style.webkitUserSelect=originalBodyUserSelect}}}),[containSelection]),react.useEffect((()=>{if(ref.current){const handlePointerUp=()=>{setContainSelection(!1),context.isPointerDownOnContentRef.current=!1,setTimeout((()=>{""!==document.getSelection()?.toString()&&(context.hasSelectionRef.current=!0)}))};return document.addEventListener("pointerup",handlePointerUp),()=>{document.removeEventListener("pointerup",handlePointerUp),context.hasSelectionRef.current=!1,context.isPointerDownOnContentRef.current=!1}}}),[context.isPointerDownOnContentRef,context.hasSelectionRef]),react.useEffect((()=>{if(ref.current){(function getTabbableNodes(container){const nodes=[],walker=document.createTreeWalker(container,NodeFilter.SHOW_ELEMENT,{acceptNode:node=>node.tabIndex>=0?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP});for(;walker.nextNode();)nodes.push(walker.currentNode);return nodes})(ref.current).forEach((tabbable=>tabbable.setAttribute("tabindex","-1")))}})),(0,jsx_runtime.jsx)(react_dismissable_layer_dist.qW,{asChild:!0,disableOutsidePointerEvents:!1,onInteractOutside,onEscapeKeyDown,onPointerDownOutside,onFocusOutside:(0,dist.m)(onFocusOutside,(event=>{event.preventDefault()})),onDismiss:context.onDismiss,children:(0,jsx_runtime.jsx)(react_popper_dist.UC,{...popperScope,...contentProps,onPointerDown:(0,dist.m)(contentProps.onPointerDown,(event=>{event.currentTarget.contains(event.target)&&setContainSelection(!0),context.hasSelectionRef.current=!1,context.isPointerDownOnContentRef.current=!0})),ref:composedRefs,style:{...contentProps.style,userSelect:containSelection?"text":void 0,WebkitUserSelect:containSelection?"text":void 0,"--radix-hover-card-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-hover-card-content-available-width":"var(--radix-popper-available-width)","--radix-hover-card-content-available-height":"var(--radix-popper-available-height)","--radix-hover-card-trigger-width":"var(--radix-popper-anchor-width)","--radix-hover-card-trigger-height":"var(--radix-popper-anchor-height)"}})})})),HoverCardArrow=react.forwardRef(((props,forwardedRef)=>{const{__scopeHoverCard,...arrowProps}=props,popperScope=usePopperScope(__scopeHoverCard);return(0,jsx_runtime.jsx)(react_popper_dist.i3,{...popperScope,...arrowProps,ref:forwardedRef})}));function excludeTouch(eventHandler){return event=>"touch"===event.pointerType?void 0:eventHandler()}HoverCardArrow.displayName="HoverCardArrow";var Root2=HoverCard,Trigger=HoverCardTrigger,Content2=HoverCardContent,cn=__webpack_require__("./src/utils/cn.ts");const hover_card_HoverCard=Root2,hover_card_HoverCardTrigger=Trigger,hover_card_HoverCardContent=react.forwardRef((({className,align="center",sideOffset=4,...props},ref)=>(0,jsx_runtime.jsx)(Content2,{ref,align,sideOffset,className:(0,cn.cn)("z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",className),...props})));hover_card_HoverCardContent.displayName=Content2.displayName,hover_card_HoverCardContent.__docgenInfo={description:"",methods:[],props:{align:{defaultValue:{value:"'center'",computed:!1},required:!1},sideOffset:{defaultValue:{value:"4",computed:!1},required:!1}}};const hover_card_stories={title:"Base/HoverCard",component:hover_card_HoverCard,tags:["autodocs"],argTypes:{},args:{},render:args=>(0,jsx_runtime.jsxs)(hover_card_HoverCard,{...args,children:[(0,jsx_runtime.jsx)(hover_card_HoverCardTrigger,{children:"Hover"}),(0,jsx_runtime.jsx)(hover_card_HoverCardContent,{children:"The React Framework - created and maintained by @vercel."})]}),parameters:{layout:"centered",docs:{description:{component:"For sighted users to preview content available behind a link."}}}},Default={},Instant={args:{openDelay:0,closeDelay:0}},__namedExportsOrder=["Default","Instant"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source},description:{story:"The default form of the hover card.",...Default.parameters?.docs?.description}}},Instant.parameters={...Instant.parameters,docs:{...Instant.parameters?.docs,source:{originalSource:"{\n  args: {\n    openDelay: 0,\n    closeDelay: 0\n  }\n}",...Instant.parameters?.docs?.source},description:{story:"Use the `openDelay` and `closeDelay` props to control the delay before the\nhover card opens and closes.",...Instant.parameters?.docs?.description}}}},"./src/utils/cn.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");function cn(...inputs){return(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))}}}]);