"use strict";(self.webpackChunkcortex_react_components=self.webpackChunkcortex_react_components||[]).push([[664],{"./src/components/CRM/KanbanBoard.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,NoDeals:()=>NoDeals,__namedExportsOrder:()=>__namedExportsOrder,default:()=>KanbanBoard_stories});var jsx_runtime=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/index.js"),DealDetails=__webpack_require__("./src/components/CRM/DealDetails.tsx"),KanbanColumn=__webpack_require__("./src/components/CRM/KanbanColumn.tsx"),drag_drop_context=__webpack_require__("./node_modules/.pnpm/@atlaskit+pragmatic-drag-and-drop-react-beautiful-dnd-migration@1.3.1_@types+react@19.0.2_rea_r3ncbroy4xnbn6ziwvtrgq3ix4/node_modules/@atlaskit/pragmatic-drag-and-drop-react-beautiful-dnd-migration/dist/esm/drag-drop-context/index.js"),console=__webpack_require__("./node_modules/.pnpm/console-browserify@1.2.0/node_modules/console-browserify/index.js");const statuses=["Cold","Qualified","Proposal Made","SoW Submitted","Won","Lost"];function CRMKanbanBoard({initialData,addNewDeal,updateDeal,addComment,addNewCustomer}){const[selectedDeal,setSelectedDeal]=(0,react.useState)(null),calculateColumnValue=deals=>deals.reduce(((sum,deal)=>sum+(deal.value||0)),0),calculateWeightedValue=(deals,status)=>{const weightMap={Cold:.2,Qualified:.4,"Proposal Made":.6,"SoW Submitted":.7,Won:1,Lost:0};return deals.reduce(((sum,deal)=>sum+(deal.value||0)*weightMap[status]),0)},onDragEnd=(0,react.useCallback)((result=>{const{source,destination}=result;if(!destination)return;if(source.droppableId===destination.droppableId&&source.index===destination.index)return;const sourceStatus=source.droppableId,destinationStatus=destination.droppableId;var _initialData_deals;console.log("Moving from ",sourceStatus,"to",destinationStatus);const updatedDeals=[...null!==(_initialData_deals=initialData.deals)&&void 0!==_initialData_deals?_initialData_deals:[]],[movedDeal]=updatedDeals.splice(source.index,1);movedDeal.status=destinationStatus,updatedDeals.splice(destination.index,0,movedDeal),updateDeal(movedDeal)}),[updateDeal]);var _initialData_categories;return(0,jsx_runtime.jsx)(drag_drop_context.J,{onDragEnd,children:(0,jsx_runtime.jsxs)("div",{className:"p-4",children:[(0,jsx_runtime.jsx)("div",{className:"flex space-x-4 overflow-x-auto pb-4",children:statuses.filter((status=>"Won"!==status&&"Lost"!==status)).map((status=>{const deals=(status=>{var _initialData_deals;return(null!==(_initialData_deals=initialData.deals)&&void 0!==_initialData_deals?_initialData_deals:[]).filter((deal=>deal.status===status))})(status);var _initialData_customers,_initialData_categories;return(0,jsx_runtime.jsx)(KanbanColumn.m,{status,deals,customers:null!==(_initialData_customers=initialData.customers)&&void 0!==_initialData_customers?_initialData_customers:[],users:initialData.users,categories:null!==(_initialData_categories=initialData.categories)&&void 0!==_initialData_categories?_initialData_categories:[],onDealClick:setSelectedDeal,calculateColumnValue,calculateWeightedValue,addNewDeal:"Cold"===status?addNewDeal:void 0,onAddCustomer:addNewCustomer},status)}))}),selectedDeal&&(0,jsx_runtime.jsx)(DealDetails.l,{deal:selectedDeal,users:initialData.users,customer:selectedDeal.customer,categories:null!==(_initialData_categories=initialData.categories)&&void 0!==_initialData_categories?_initialData_categories:[],onClose:()=>setSelectedDeal(null),onSave:updateDeal,onAddComment:comment=>addComment(selectedDeal.id.toString(),comment)})]})})}CRMKanbanBoard.__docgenInfo={description:"",methods:[],displayName:"CRMKanbanBoard",props:{initialData:{required:!0,tsType:{name:"signature",type:"object",raw:"{\n  deals?: Deal[]\n  users?: User[]\n  customers?: Customer[]\n  categories?: DealCategory[]\n}",signature:{properties:[{key:"deals",value:{name:"Array",elements:[{name:"Deal"}],raw:"Deal[]",required:!1}},{key:"users",value:{name:"Array",elements:[{name:"User"}],raw:"User[]",required:!1}},{key:"customers",value:{name:"Array",elements:[{name:"Customer"}],raw:"Customer[]",required:!1}},{key:"categories",value:{name:"Array",elements:[{name:"DealCategory"}],raw:"DealCategory[]",required:!1}}]}},description:""},onDragEnd:{required:!0,tsType:{name:"signature",type:"function",raw:"(result: DropResult) => void",signature:{arguments:[{type:{name:"DropResult"},name:"result"}],return:{name:"void"}}},description:""},addNewDeal:{required:!0,tsType:{name:"signature",type:"function",raw:"(newDeal: Deal) => void",signature:{arguments:[{type:{name:"Deal"},name:"newDeal"}],return:{name:"void"}}},description:""},updateDeal:{required:!0,tsType:{name:"signature",type:"function",raw:"(updatedDeal: Partial<EditableDeal>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"intersection",raw:"Omit<Partial<Deal>, 'comments' | 'customer'> & {\n  comments?: PartialComment[] | null;\n  customer: Partial<Customer> ;\n}",elements:[{name:"Omit",elements:[{name:"Partial",elements:[{name:"Deal"}],raw:"Partial<Deal>"},{name:"union",raw:"'comments' | 'customer'",elements:[{name:"literal",value:"'comments'"},{name:"literal",value:"'customer'"}]}],raw:"Omit<Partial<Deal>, 'comments' | 'customer'>"},{name:"signature",type:"object",raw:"{\n  comments?: PartialComment[] | null;\n  customer: Partial<Customer> ;\n}",signature:{properties:[{key:"comments",value:{name:"union",raw:"PartialComment[] | null",elements:[{name:"Array",elements:[{name:"Partial",elements:[{name:"NonNullable[number]",raw:"NonNullable<Deal['comments']>[number]"}],raw:"Partial<NonNullable<Deal['comments']>[number]>"}],raw:"PartialComment[]"},{name:"null"}],required:!1}},{key:"customer",value:{name:"Partial",elements:[{name:"Customer"}],raw:"Partial<Customer>",required:!0}}]}}]}],raw:"Partial<EditableDeal>"},name:"updatedDeal"}],return:{name:"void"}}},description:""},addComment:{required:!0,tsType:{name:"signature",type:"function",raw:"(dealId: string, comment: PartialComment) => void",signature:{arguments:[{type:{name:"string"},name:"dealId"},{type:{name:"Partial",elements:[{name:"NonNullable[number]",raw:"NonNullable<Deal['comments']>[number]"}],raw:"Partial<NonNullable<Deal['comments']>[number]>"},name:"comment"}],return:{name:"void"}}},description:""},addNewCustomer:{required:!0,tsType:{name:"signature",type:"function",raw:"(newCustomer: Partial<Customer>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"Customer"}],raw:"Partial<Customer>"},name:"newCustomer"}],return:{name:"void"}}},description:""}}};var mockData=__webpack_require__("./src/components/CRM/mockData.ts"),KanbanBoard_stories_console=__webpack_require__("./node_modules/.pnpm/console-browserify@1.2.0/node_modules/console-browserify/index.js");const KanbanBoard_stories={title:"CRM/KanbanBoard",component:CRMKanbanBoard},Template=args=>{const[boardData,setBoardData]=(0,react.useState)(args.initialData);return(0,jsx_runtime.jsx)(CRMKanbanBoard,{...args,initialData:boardData,updateDeal:async updatedDeal=>(KanbanBoard_stories_console.log("Updating deal:",updatedDeal),setBoardData((prevData=>{var _prevData_deals;return{...prevData,deals:(null!==(_prevData_deals=prevData.deals)&&void 0!==_prevData_deals?_prevData_deals:[]).map((deal=>deal.id===updatedDeal.id?updatedDeal:deal))}})),updatedDeal)})},Default=Template.bind({});Default.args={initialData:{deals:Array.from({length:20},((_,i)=>({id:i+1,customer:mockData.Qd[i%mockData.Qd.length],value:Math.floor(1e5*Math.random())+5e3,assignee:mockData.rB[Math.floor(Math.random()*mockData.rB.length)].name,status:["Cold","Qualified","Proposal Made","Won","Lost"][Math.floor(5*Math.random())],categories:[mockData.zA[i%mockData.zA.length].id],dateLogged:new Date(Date.now()-24*Math.floor(30*Math.random())*60*60*1e3).toISOString(),closureDate:new Date(Date.now()+24*Math.floor(90*Math.random())*60*60*1e3).toISOString(),comments:[],updatedAt:(new Date).toISOString(),description:`This is a mock description for deal ${i+1}. It's a ${["small","medium","large"][i%3]} deal with high potential.`}))),customers:mockData.Qd,users:mockData.rB,categories:mockData.zA},addNewDeal:async deal=>(KanbanBoard_stories_console.log("Adding deal:",deal),{...deal,id:"new-deal-id"}),addNewCustomer:async customer=>(KanbanBoard_stories_console.log("Adding customer:",customer),{...customer,id:"new-customer-id"}),addComment:async(dealId,comment)=>(KanbanBoard_stories_console.log("Adding comment to deal:",dealId,comment),{...comment,id:"new-comment-id"})};const NoDeals=Template.bind({});NoDeals.args={...Default.args,initialData:{...Default.args.initialData,deals:[]}};const __namedExportsOrder=["Default","NoDeals"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const [boardData, setBoardData] = useState<BoardData>(args.initialData);\n  const handleUpdateDeal = async (updatedDeal: Deal) => {\n    console.log('Updating deal:', updatedDeal);\n    setBoardData(prevData => ({\n      ...prevData,\n      deals: (prevData.deals ?? []).map(deal => deal.id === updatedDeal.id ? updatedDeal : deal)\n    }));\n    return updatedDeal;\n  };\n  return <CRMKanbanBoard {...args} initialData={boardData} updateDeal={handleUpdateDeal} />;\n}",...Default.parameters?.docs?.source}}},NoDeals.parameters={...NoDeals.parameters,docs:{...NoDeals.parameters?.docs,source:{originalSource:"args => {\n  const [boardData, setBoardData] = useState<BoardData>(args.initialData);\n  const handleUpdateDeal = async (updatedDeal: Deal) => {\n    console.log('Updating deal:', updatedDeal);\n    setBoardData(prevData => ({\n      ...prevData,\n      deals: (prevData.deals ?? []).map(deal => deal.id === updatedDeal.id ? updatedDeal : deal)\n    }));\n    return updatedDeal;\n  };\n  return <CRMKanbanBoard {...args} initialData={boardData} updateDeal={handleUpdateDeal} />;\n}",...NoDeals.parameters?.docs?.source}}}}}]);