"use strict";(self.webpackChunkcortex_react_components=self.webpackChunkcortex_react_components||[]).push([[67622],{"./src/components/Projects/KanbanBoardView.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{d:()=>KanbanBoardView});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/index.js"),_components_ui_badge__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/ui/badge.tsx"),_KanbanColumn__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Projects/KanbanColumn.tsx"),_TaskCard__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Projects/TaskCard.tsx"),_AddTaskModal__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/components/Projects/AddTaskModal.tsx"),_TaskDetailsModal__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/components/Projects/TaskDetailsModal.tsx"),_AddEpicModal__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/components/Projects/AddEpicModal.tsx"),_Heros_DashboardHero__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Heros/DashboardHero/DashboardHero.tsx"),_lib_utils_extract_id__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/utils/extract-id.ts");const KanbanBoardView=({initialTasks=[],initialEpics=[],initialSprints=[],initialUsers=[],initialColleagues=[],initialProjects=[],onAddTask,onUpdateTask,onDeleteTask,onTaskClick,onAddEpic,onAddComment})=>{const[tasks,setTasks]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),[epics,setEpics]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),[sprints,setSprints]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),[isAddTaskModalOpen,setIsAddTaskModalOpen]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[isAddEpicModalOpen,setIsAddEpicModalOpen]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[selectedTask,setSelectedTask]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[draggedTask,setDraggedTask]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[users,setUsers]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),[colleagues,setColleagues]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),[heroHeight,setHeroHeight]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0),heroRef=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),containerRef=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),selectedEpicIds=react__WEBPACK_IMPORTED_MODULE_1__.useMemo((()=>[...epics.map((e=>e.id)),0]),[epics]),prevTaskHash=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(""),prevEpicHash=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(""),prevSprintHash=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(""),prevColleagueHash=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(""),getHash=list=>list.map((item=>`${item.id}-${new Date(item.createdAt).getTime()}-${new Date(item.updatedAt).getTime()}`)).join("-");(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const next=getHash(initialTasks);next!==prevTaskHash.current&&(setTasks(initialTasks),selectedTask&&setSelectedTask(initialTasks.find((task=>task.id===selectedTask.id))||null),prevTaskHash.current=next)}),[initialTasks]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const next=getHash(initialEpics);next!==prevEpicHash.current&&(setEpics(initialEpics),prevEpicHash.current=next)}),[initialEpics]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const next=getHash(initialSprints);next!==prevSprintHash.current&&(setSprints(initialSprints),prevSprintHash.current=next)}),[initialSprints]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const next=getHash(initialColleagues.map((el=>({id:el.id,updatedAt:el.updatedAt,createdAt:el.createdAt}))));next!==prevColleagueHash.current&&(setColleagues(initialColleagues),prevColleagueHash.current=next)}),[initialColleagues]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const measureHeroHeight=()=>{if(heroRef.current){const height=heroRef.current.offsetHeight;setHeroHeight(height)}};measureHeroHeight();const resizeObserver=new ResizeObserver(measureHeroHeight);heroRef.current&&resizeObserver.observe(heroRef.current);const handleStorageChange=()=>{setTimeout(measureHeroHeight,100)};return window.addEventListener("storage",handleStorageChange),()=>{resizeObserver.disconnect(),window.removeEventListener("storage",handleStorageChange)}}),[]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const timer=setTimeout((()=>{heroRef.current&&setHeroHeight(heroRef.current.offsetHeight)}),300);return()=>clearTimeout(timer)}),[isAddTaskModalOpen,isAddEpicModalOpen]);const filteredTasks=tasks.filter((task=>!0)),handleDragStart=task=>{setDraggedTask(task)},handleDrop=status=>{draggedTask&&(setTasks((prev=>prev.map((task=>task.id===draggedTask.id?{...task,status}:task)))),null==onUpdateTask||onUpdateTask(draggedTask.id.toString(),{status}),setDraggedTask(null))},handleTaskClick=task=>{setSelectedTask(task),null==onTaskClick||onTaskClick(task)},calculatedHeight=heroHeight>0?`calc(100vh - ${heroHeight+120}px)`:"calc(100vh - 12rem)";return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{ref:containerRef,className:"h-full flex flex-col px-2 md:px-4 py-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{ref:heroRef,className:"flex-shrink-0",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Heros_DashboardHero__WEBPACK_IMPORTED_MODULE_3__.H,{title:"Project Board",description:"Manage tasks and track progress across your project sprints.",gradient:"bg-gradient-to-r from-purple-600 via-violet-600 to-indigo-600",primaryAction:{label:"Add task",onClick:()=>setIsAddTaskModalOpen(!0)},secondaryAction:{label:"Add epic",onClick:()=>setIsAddEpicModalOpen(!0)}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"flex-1 min-h-0 mt-8",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"h-full",style:{height:heroHeight>0?`calc(100vh - ${heroHeight+120}px)`:"calc(100vh - 12rem)"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"grid grid-cols-1 lg:grid-cols-4 gap-6 h-full",children:[{id:"todo",title:"To Do",status:"todo"},{id:"in-progress",title:"In Progress",status:"in-progress"},{id:"review",title:"Review",status:"review"},{id:"done",title:"Done",status:"done"}].map((column=>{const columnTasks=(status=column.status,filteredTasks.filter((task=>task.status===status)));var status;const tasksByEpic=(tasks=>{const tasksByEpic={};return epics.forEach((epic=>{tasksByEpic[epic.id]=tasks.filter((task=>(0,_lib_utils_extract_id__WEBPACK_IMPORTED_MODULE_2__.d)(task.epic)===epic.id))})),tasksByEpic["no-epic"]=tasks.filter((task=>!(0,_lib_utils_extract_id__WEBPACK_IMPORTED_MODULE_2__.d)(task.epic))),tasksByEpic})(columnTasks);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_KanbanColumn__WEBPACK_IMPORTED_MODULE_4__.m,{title:column.title,status:column.status,taskCount:columnTasks.length,onDrop:handleDrop,isCompact:"done"===column.status,height:calculatedHeight,children:[tasksByEpic["no-epic"].map((task=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_TaskCard__WEBPACK_IMPORTED_MODULE_5__.y,{epic:null,task,onDragStart:handleDragStart,onTaskClick:handleTaskClick,isCompact:"done"===column.status},task.id))),selectedEpicIds.map((epicId=>{const epic=epics.find((e=>e.id===epicId)),epicTasks=tasksByEpic[epicId]||[];return 0===epicTasks.length?null:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mb-6",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex items-center gap-2 mb-3",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:`w-3 h-3 rounded-full ${null==epic?void 0:epic.color}`}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"text-sm font-medium text-muted-foreground select-none-important",children:(null==epic?void 0:epic.name)||"No Epic"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ui_badge__WEBPACK_IMPORTED_MODULE_6__.E,{variant:"secondary",className:"text-xs",children:epicTasks.length})]})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"space-y-3",children:epicTasks.map((task=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_TaskCard__WEBPACK_IMPORTED_MODULE_5__.y,{task,epic,onDragStart:handleDragStart,onTaskClick:handleTaskClick,isCompact:"done"===column.status},task.id)))})]},epicId)}))]},column.id)}))})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_AddTaskModal__WEBPACK_IMPORTED_MODULE_7__.o,{isOpen:isAddTaskModalOpen,onClose:()=>setIsAddTaskModalOpen(!1),onAddTask:newTask=>{const task={...newTask,id:Date.now(),createdAt:(new Date).toISOString(),updatedAt:(new Date).toISOString()};setTasks((prev=>[...prev,task])),null==onAddTask||onAddTask(newTask)},assignees:[...colleagues,...users],epics,sprints}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_AddEpicModal__WEBPACK_IMPORTED_MODULE_8__.k,{isOpen:isAddEpicModalOpen,onClose:()=>setIsAddEpicModalOpen(!1),onAddEpic:newEpic=>{const epic={...newEpic,id:Date.now(),createdAt:(new Date).toISOString(),updatedAt:(new Date).toISOString()};setEpics((prev=>[...prev,epic])),null==onAddEpic||onAddEpic(newEpic)}}),selectedTask&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_TaskDetailsModal__WEBPACK_IMPORTED_MODULE_9__.H,{isOpen:!!selectedTask,onClose:()=>setSelectedTask(null),initialTask:selectedTask,epics,sprints,onUpdateTask:async(taskId,updates)=>{setTasks((prev=>prev.map((task=>task.id===Number(taskId)?{...task,...updates}:task)))),onUpdateTask&&await onUpdateTask(taskId,updates),(null==selectedTask?void 0:selectedTask.id)===Number(taskId)&&setSelectedTask((prev=>({...prev,...updates})))},onDeleteTask:async taskId=>{setTasks((prev=>prev.filter((task=>task.id!==Number(taskId))))),(null==selectedTask?void 0:selectedTask.id)===Number(taskId)&&setSelectedTask(null),onDeleteTask&&await onDeleteTask(taskId)},colleagues,onAddComment})]})};KanbanBoardView.__docgenInfo={description:"",methods:[],displayName:"KanbanBoardView",props:{initialTasks:{required:!1,tsType:{name:"Array",elements:[{name:"Task"}],raw:"Task[]"},description:"",defaultValue:{value:"[]",computed:!1}},initialEpics:{required:!1,tsType:{name:"Array",elements:[{name:"Epic"}],raw:"Epic[]"},description:"",defaultValue:{value:"[]",computed:!1}},initialSprints:{required:!1,tsType:{name:"Array",elements:[{name:"unknown"}],raw:"(Sprint & { isSelected: boolean })[]"},description:"",defaultValue:{value:"[]",computed:!1}},initialProjects:{required:!1,tsType:{name:"Array",elements:[{name:"Project"}],raw:"Project[]"},description:"",defaultValue:{value:"[]",computed:!1}},initialUsers:{required:!1,tsType:{name:"Array",elements:[{name:"User"}],raw:"User[]"},description:"",defaultValue:{value:"[]",computed:!1}},initialColleagues:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"HumanColleague | TypedDigitalColleague",elements:[{name:"intersection",raw:"User & { type: 'human' }",elements:[{name:"User"},{name:"signature",type:"object",raw:"{ type: 'human' }",signature:{properties:[{key:"type",value:{name:"literal",value:"'human'",required:!0}}]}}]},{name:"intersection",raw:"DigitalColleague & { type: 'digital' }",elements:[{name:"DigitalColleague"},{name:"signature",type:"object",raw:"{ type: 'digital' }",signature:{properties:[{key:"type",value:{name:"literal",value:"'digital'",required:!0}}]}}]}]}],raw:"Colleague[]"},description:"",defaultValue:{value:"[]",computed:!1}},onAddTask:{required:!1,tsType:{name:"signature",type:"function",raw:"(newTask: Omit<Task, 'id' | 'createdAt' | 'updatedAt'>) => void",signature:{arguments:[{type:{name:"Omit",elements:[{name:"Task"},{name:"union",raw:"'id' | 'createdAt' | 'updatedAt'",elements:[{name:"literal",value:"'id'"},{name:"literal",value:"'createdAt'"},{name:"literal",value:"'updatedAt'"}]}],raw:"Omit<Task, 'id' | 'createdAt' | 'updatedAt'>"},name:"newTask"}],return:{name:"void"}}},description:""},onUpdateTask:{required:!1,tsType:{name:"signature",type:"function",raw:"(taskId: string, updates: Partial<Task>) => void",signature:{arguments:[{type:{name:"string"},name:"taskId"},{type:{name:"Partial",elements:[{name:"Task"}],raw:"Partial<Task>"},name:"updates"}],return:{name:"void"}}},description:""},onDeleteTask:{required:!1,tsType:{name:"signature",type:"function",raw:"(taskId: string) => void",signature:{arguments:[{type:{name:"string"},name:"taskId"}],return:{name:"void"}}},description:""},onTaskClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(task: Task) => void",signature:{arguments:[{type:{name:"Task"},name:"task"}],return:{name:"void"}}},description:""},onAddEpic:{required:!1,tsType:{name:"signature",type:"function",raw:"(newEpic: Omit<Epic, 'id' | 'updatedAt' | 'createdAt'>) => void",signature:{arguments:[{type:{name:"Omit",elements:[{name:"Epic"},{name:"union",raw:"'id' | 'updatedAt' | 'createdAt'",elements:[{name:"literal",value:"'id'"},{name:"literal",value:"'updatedAt'"},{name:"literal",value:"'createdAt'"}]}],raw:"Omit<Epic, 'id' | 'updatedAt' | 'createdAt'>"},name:"newEpic"}],return:{name:"void"}}},description:""},onAddComment:{required:!1,tsType:{name:"signature",type:"function",raw:"({ content, taskId }: { taskId: string; content: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ taskId: string; content: string }",signature:{properties:[{key:"taskId",value:{name:"string",required:!0}},{key:"content",value:{name:"string",required:!0}}]}},name:""}],return:{name:"void"}}},description:""}}}},"./src/components/Projects/KanbanColumn.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>KanbanColumn});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),_components_ui_card__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/index.js"),__webpack_require__("./src/components/ui/card.tsx")),_components_ui_badge__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/ui/badge.tsx");const KanbanColumn=({title,status,taskCount,children,onDrop,isCompact=!1,height})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components_ui_card__WEBPACK_IMPORTED_MODULE_2__.Zp,{className:`p-4 bg-card border-l-4 ${(()=>{switch(status){case"todo":default:return"border-l-gray-400";case"in-progress":return"border-l-blue-500";case"review":return"border-l-orange-500";case"done":return"border-l-green-500"}})()} shadow-sm hover:shadow-md transition-shadow duration-200 flex flex-col ${isCompact?"lg:max-w-xs":""}`,style:{height:height||"calc(100vh - 350px)"},onDragOver:e=>{e.preventDefault()},onDrop:e=>{e.preventDefault(),onDrop(status)},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex items-center justify-between mb-4 flex-shrink-0",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{className:"font-semibold text-foreground select-none-important "+(isCompact?"text-base":"text-lg"),children:title}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ui_badge__WEBPACK_IMPORTED_MODULE_3__.E,{variant:"secondary",className:"bg-muted text-muted-foreground",children:taskCount})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"flex-1 overflow-y-auto space-y-4 min-h-0",children})]});KanbanColumn.__docgenInfo={description:"",methods:[],displayName:"KanbanColumn",props:{title:{required:!0,tsType:{name:"string"},description:""},status:{required:!0,tsType:{name:"Task['status']",raw:"Task['status']"},description:""},taskCount:{required:!0,tsType:{name:"number"},description:""},children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},onDrop:{required:!0,tsType:{name:"signature",type:"function",raw:"(status: Task['status']) => void",signature:{arguments:[{type:{name:"Task['status']",raw:"Task['status']"},name:"status"}],return:{name:"void"}}},description:""},isCompact:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},height:{required:!1,tsType:{name:"string"},description:""}}}}}]);