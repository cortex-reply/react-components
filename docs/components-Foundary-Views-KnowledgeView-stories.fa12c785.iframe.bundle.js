"use strict";(self.webpackChunkcortex_react_components=self.webpackChunkcortex_react_components||[]).push([[72803],{"./src/components/Foundary/Views/KnowledgeView.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ArchitectureView:()=>ArchitectureView,CustomContextExample:()=>CustomContextExample,Default:()=>Default,DocumentSwitchingWithPreview:()=>DocumentSwitchingWithPreview,DocumentSwitchingWithSharing:()=>DocumentSwitchingWithSharing,EmptyState:()=>EmptyState,InteractiveDocumentSwitching:()=>InteractiveDocumentSwitching,LazyContentLoading:()=>LazyContentLoading,MultiContextDocumentSwitching:()=>MultiContextDocumentSwitching,NoContexts:()=>NoContexts,ServicesView:()=>ServicesView,TeamsView:()=>TeamsView,WithSelection:()=>WithSelection,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,defaultContexts:()=>defaultContexts,sampleDocuments:()=>sampleDocuments});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/index.js"),_KnowledgeView__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Foundary/Views/KnowledgeView.tsx"),_barrel_optimize_names_BookOpen_Code_FileText_Server_Shield_Users_lucide_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/lucide-react@0.469.0_react@19.0.0/node_modules/lucide-react/dist/esm/icons/book-open.js"),_barrel_optimize_names_BookOpen_Code_FileText_Server_Shield_Users_lucide_react__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/.pnpm/lucide-react@0.469.0_react@19.0.0/node_modules/lucide-react/dist/esm/icons/server.js"),_barrel_optimize_names_BookOpen_Code_FileText_Server_Shield_Users_lucide_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/.pnpm/lucide-react@0.469.0_react@19.0.0/node_modules/lucide-react/dist/esm/icons/code.js"),_barrel_optimize_names_BookOpen_Code_FileText_Server_Shield_Users_lucide_react__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/.pnpm/lucide-react@0.469.0_react@19.0.0/node_modules/lucide-react/dist/esm/icons/users.js"),_barrel_optimize_names_BookOpen_Code_FileText_Server_Shield_Users_lucide_react__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/.pnpm/lucide-react@0.469.0_react@19.0.0/node_modules/lucide-react/dist/esm/icons/shield.js"),_barrel_optimize_names_BookOpen_Code_FileText_Server_Shield_Users_lucide_react__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/.pnpm/lucide-react@0.469.0_react@19.0.0/node_modules/lucide-react/dist/esm/icons/file-text.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Foundary/Views/KnowledgeView",component:_KnowledgeView__WEBPACK_IMPORTED_MODULE_2__.A,tags:["autodocs"],parameters:{layout:"fullscreen",componentSubtitle:"A comprehensive knowledge management interface for organizing and accessing team documentation",docs:{description:{component:"\n### Documentation\n\n[Full Documentation HERE](/?path=/docs/foundary-views-knowledgeview-documentation--docs)\n\n        "}}},argTypes:{documents:{description:"Array of knowledge documents to display. Each document contains metadata, content, and organizational information.",control:{type:"object"},table:{type:{summary:"KnowledgeDocument[]"},defaultValue:{summary:"[]"}}},contexts:{description:"Array of KnowledgeContext objects that define different organizational views of the documents. \n      \nEach context represents a different way users can browse and find documents:\n- **All Documents**: General categorization\n- **By Services**: Service and team organization  \n- **Architecture**: Technical component organization\n- **Teams**: Team and project-based grouping\n\nThe menuConfig in each context determines how documents are grouped and sorted within that view.",control:{type:"object"},table:{type:{summary:"KnowledgeContext[]"},defaultValue:{summary:"[]"}}},onDocumentClick:{description:"Callback function invoked when a user clicks on a document for selection. \n\n**Parameters:**\n- `document`: The complete KnowledgeDocument object that was clicked\n\n**Common Use Cases:**\n- Update selection state for visual highlighting\n- Open document preview or detailed view\n- Track analytics and user interactions\n- Navigate to document-specific pages\n- Trigger additional UI updates\n\n**Example:**\n```typescript\nconst handleDocumentClick = (document: KnowledgeDocument) => {\n  setSelectedDocumentId(document.id)\n  openPreviewPanel(document)\n  trackAnalytics('document_clicked', { id: document.id })\n}\n```",action:"document-clicked",table:{type:{summary:"(document: KnowledgeDocument) => void"}}},onDocumentShare:{description:"Callback function invoked when a user initiates sharing of a document.\n\n**Parameters:**  \n- `document`: The KnowledgeDocument object being shared\n\n**Common Use Cases:**\n- Open share dialog with team member selection\n- Copy document link to clipboard\n- Send document via email or messaging\n- Track sharing analytics\n- Create collaboration notifications\n\n**Example:**\n```typescript\nconst handleDocumentShare = (document: KnowledgeDocument) => {\n  copyToClipboard(`/docs/${document.id}`)\n  showNotification('Document link copied!')\n  trackAnalytics('document_shared', { id: document.id })\n}\n```",action:"document-shared",table:{type:{summary:"(document: KnowledgeDocument) => void"}}},onLoadDocumentContent:{description:"Optional async function for lazy loading document content.\n\n**Parameters:**\n- `documentId`: The ID of the document to load content for\n\n**Returns:** \n- `Promise<string>`: The document content as a string\n\n**Use Cases:**\n- Large document collections (50+ items)\n- Documents with substantial content (>10KB)\n- Mobile or low-bandwidth environments\n- Fresh content that needs to be fetched from APIs\n\n**Example:**\n```typescript\nconst loadContent = async (id: string) => {\n  const response = await fetch(`/api/documents/${id}/content`)\n  return response.text()\n}\n```",table:{type:{summary:"(documentId: string) => Promise<string>"}}},selectedDocumentId:{description:"ID of the currently selected/highlighted document. \n\n**Behavior:**\n- Highlights the specified document with distinct styling\n- Selection persists across context switches\n- Used for visual feedback and state management\n- Can be updated through onDocumentClick callback\n\n**Selection States:**\n- `undefined`: No document selected\n- `\"valid-id\"`: Document with matching ID is highlighted\n- `\"invalid-id\"`: No visual effect (gracefully handled)\n\n**Example:**\n```typescript\nconst [selectedId, setSelectedId] = useState<string>('doc-123')\n// Document with ID 'doc-123' will be highlighted\n```",control:{type:"text"},table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}}}},sampleDocuments=[{id:"1",title:"API Authentication Guide",description:"Complete guide for implementing API authentication in our platform",format:"markdown",metadata:{category:"Development",type:"Guide",team:"Backend",difficulty:"Intermediate",version:"2.1",service:"Authentication Service",component:"Auth Module",layer:"API Layer",project:"Security Framework"},content:"# API Authentication Guide\n\n## Overview\nThis guide covers the implementation of secure API authentication...\n\n## OAuth 2.0 Implementation\n- Authorization Code Flow\n- Client Credentials Flow\n- Refresh Token Handling\n\n## Best Practices\n1. Always use HTTPS\n2. Implement proper token expiration\n3. Use secure storage for credentials",tags:["api","security","oauth","backend"],createdAt:new Date("2024-01-15"),updatedAt:new Date("2024-02-10")},{id:"2",title:"UI Component Library",description:"Documentation for our React component library",format:"mdx",metadata:{category:"Development",type:"Documentation",team:"Frontend",difficulty:"Beginner",version:"1.5",service:"UI Service",component:"Component Library",layer:"Presentation Layer",project:"Design System"},content:"# UI Component Library\n\n## Installation\n```bash\nnpm install @company/ui-components\n```\n\n## Basic Usage\n```jsx\nimport { Button, Card } from '@company/ui-components'\n\nfunction App() {\n  return (\n    <Card>\n      <Button variant=\"primary\">Click me</Button>\n    </Card>\n  )\n}\n```",tags:["ui","react","components","frontend"],createdAt:new Date("2024-01-10"),updatedAt:new Date("2024-03-01")},{id:"3",title:"Database Schema Design",description:"Guidelines for designing scalable database schemas",format:"markdown",metadata:{category:"Development",type:"Best Practice",team:"Backend",difficulty:"Advanced",version:"3.0"},content:"# Database Schema Design\n\n## Principles\n- Normalize for consistency\n- Denormalize for performance\n- Index strategically\n\n## Common Patterns\n1. One-to-Many relationships\n2. Many-to-Many with junction tables\n3. Polymorphic associations",tags:["database","schema","sql","backend"],createdAt:new Date("2024-02-01")},{id:"4",title:"Employee Onboarding Process",description:"Step-by-step guide for new employee onboarding",format:"richtext",metadata:{category:"HR",type:"Process",team:"Human Resources",difficulty:"Beginner",department:"Operations"},content:"Employee Onboarding Checklist\n\nDay 1:\n- Welcome meeting with manager\n- IT setup and account creation\n- Office tour and safety briefing\n- Complete paperwork\n\nWeek 1:\n- Team introductions\n- Project overview sessions\n- Access to necessary tools\n- Initial training modules\n\nMonth 1:\n- Progress review\n- Goal setting\n- Feedback session",tags:["hr","onboarding","process","checklist"],createdAt:new Date("2024-01-20")},{id:"5",title:"Marketing Campaign Analysis",description:"Q1 2024 marketing campaign performance analysis",format:"markdown",metadata:{category:"Marketing",type:"Report",team:"Marketing",difficulty:"Intermediate",quarter:"Q1 2024"},content:"# Q1 2024 Marketing Campaign Analysis\n\n## Executive Summary\nOur Q1 campaigns showed a 25% increase in engagement...\n\n## Key Metrics\n- Click-through rate: 3.2%\n- Conversion rate: 1.8%\n- Cost per acquisition: $45\n\n## Recommendations\n1. Increase social media spend\n2. A/B test email subject lines\n3. Optimize landing pages",tags:["marketing","analysis","campaign","metrics"],createdAt:new Date("2024-04-01")},{id:"6",title:"Security Incident Response",description:"Procedures for handling security incidents",format:"markdown",metadata:{category:"Security",type:"Procedure",team:"Security",difficulty:"Advanced",criticality:"High"},content:"# Security Incident Response Procedure\n\n## Immediate Response (0-1 hour)\n1. Assess and contain the threat\n2. Document the incident\n3. Notify the security team\n\n## Investigation Phase (1-24 hours)\n1. Gather evidence\n2. Analyze attack vectors\n3. Determine scope of compromise\n\n## Recovery and Lessons Learned\n1. Implement fixes\n2. Update procedures\n3. Conduct post-incident review",tags:["security","incident","response","procedure"],createdAt:new Date("2024-02-15")},{id:"7",title:"Design System Guidelines",description:"Visual design standards and component usage guidelines",format:"mdx",metadata:{category:"Design",type:"Guidelines",team:"Design",difficulty:"Intermediate",version:"2.0"},content:"# Design System Guidelines\n\n## Color Palette\n- Primary: #3B82F6\n- Secondary: #10B981\n- Neutral: #6B7280\n\n## Typography\n- Headings: Inter Bold\n- Body: Inter Regular\n- Code: JetBrains Mono\n\n## Spacing Scale\n- xs: 4px\n- sm: 8px\n- md: 16px\n- lg: 24px\n- xl: 32px",tags:["design","system","guidelines","ui"],createdAt:new Date("2024-01-25")}],defaultContexts=[{id:"all",label:"All Documentation",description:"Browse all documentation organized by category and type",icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_barrel_optimize_names_BookOpen_Code_FileText_Server_Shield_Users_lucide_react__WEBPACK_IMPORTED_MODULE_3__.A,{className:"h-4 w-4"}),menuConfig:{groupBy:["category","type"],sortBy:"title",sortOrder:"asc",showDocumentCount:!0}},{id:"services",label:"Services",description:"Documentation organized by service and team",icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_barrel_optimize_names_BookOpen_Code_FileText_Server_Shield_Users_lucide_react__WEBPACK_IMPORTED_MODULE_4__.A,{className:"h-4 w-4"}),menuConfig:{groupBy:["service","team"],sortBy:"updatedAt",sortOrder:"desc",showDocumentCount:!0}},{id:"architecture",label:"Architecture",description:"System architecture documentation by component and layer",icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_barrel_optimize_names_BookOpen_Code_FileText_Server_Shield_Users_lucide_react__WEBPACK_IMPORTED_MODULE_5__.A,{className:"h-4 w-4"}),menuConfig:{groupBy:["component","layer"],sortBy:"title",sortOrder:"asc",showDocumentCount:!0}},{id:"teams",label:"Teams",description:"Documentation organized by team and project",icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_barrel_optimize_names_BookOpen_Code_FileText_Server_Shield_Users_lucide_react__WEBPACK_IMPORTED_MODULE_6__.A,{className:"h-4 w-4"}),menuConfig:{groupBy:["team","project"],sortBy:"updatedAt",sortOrder:"desc",showDocumentCount:!0}},{id:"security",label:"Security",description:"Security documentation and compliance guides",icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_barrel_optimize_names_BookOpen_Code_FileText_Server_Shield_Users_lucide_react__WEBPACK_IMPORTED_MODULE_7__.A,{className:"h-4 w-4"}),menuConfig:{groupBy:["category","difficulty"],sortBy:"updatedAt",sortOrder:"desc",showDocumentCount:!0}}],Default={name:"Complete View",parameters:{docs:{description:{story:"Shows the KnowledgeView with all default contexts and sample documentation. This is the most comprehensive view showing all features including context switching, document browsing, and metadata display."}}},args:{documents:sampleDocuments,contexts:defaultContexts}},ServicesView={name:"Services Context Only",parameters:{docs:{description:{story:"Displays only the Services context, showing how documents are organized by service and team. This view is useful for service-oriented documentation workflows."}}},args:{documents:sampleDocuments,contexts:defaultContexts.filter((c=>"services"===c.id))}},ArchitectureView={name:"Architecture Context Only",parameters:{docs:{description:{story:"Shows only the Architecture context, organizing documents by component and layer. Perfect for technical documentation and system architecture references."}}},args:{documents:sampleDocuments,contexts:defaultContexts.filter((c=>"architecture"===c.id))}},TeamsView={name:"Teams Context Only",parameters:{docs:{description:{story:"Focuses on the Teams context, grouping documents by team and project. Ideal for team-specific documentation management."}}},args:{documents:sampleDocuments,contexts:defaultContexts.filter((c=>"teams"===c.id))}},EmptyState={name:"No Documents",parameters:{docs:{description:{story:"Shows how the component handles an empty document state while still providing context navigation. Useful for testing empty states and initial loading scenarios."}}},args:{documents:[],contexts:defaultContexts}},WithSelection={name:"With Selected Document",parameters:{docs:{description:{story:"Demonstrates the component with a pre-selected document (UI Component Library). Shows how selection highlighting works within the knowledge browser."}}},args:{documents:sampleDocuments,contexts:defaultContexts,selectedDocumentId:"2"}},InteractiveDocumentSwitching={name:"Interactive Document Selection",parameters:{docs:{description:{story:"**Interactive Document Selection Demo**\n\nThis story demonstrates how document selection works in the KnowledgeView component:\n\n1. Click on any document in the browser to select it\n2. The selected document will be highlighted with a different background\n3. The onDocumentClick callback will be triggered with the document data\n4. You can see the selection state change in the Actions panel below\n\n**Key Features:**\n- Visual feedback for selected documents\n- Callback handling for document clicks\n- State management for selection highlighting\n- Integration with the KnowledgeBrowser component\n\n**Use Cases:**\n- Document preview interfaces\n- Multi-step document workflows\n- Document comparison tools\n- Knowledge base navigation\n\nThe selection state is managed through the `selectedDocumentId` prop and updated via the `onDocumentClick` callback."}}},render:args=>{const[selectedDocumentId,setSelectedDocumentId]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.selectedDocumentId);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_KnowledgeView__WEBPACK_IMPORTED_MODULE_2__.A,{...args,selectedDocumentId,onDocumentClick:document=>{var _args_onDocumentClick;setSelectedDocumentId(document.id),null===(_args_onDocumentClick=args.onDocumentClick)||void 0===_args_onDocumentClick||_args_onDocumentClick.call(args,document)}})},args:{documents:sampleDocuments,contexts:defaultContexts,selectedDocumentId:"1"}},DocumentSwitchingWithSharing={name:"Document Selection + Sharing",parameters:{docs:{description:{story:"**Document Selection with Sharing Actions**\n\nThis story shows how document selection works together with sharing functionality:\n\n1. **Select Documents**: Click any document to select it\n2. **Share Documents**: Use sharing actions (if available in the KnowledgeBrowser)\n3. **Multiple Interactions**: Both selection and sharing callbacks are demonstrated\n\n**Callback Behavior:**\n- `onDocumentClick`: Triggers when clicking a document for selection\n- `onDocumentShare`: Triggers when sharing a document\n- Both actions are logged to the Actions panel\n\n**Real-world Usage:**\n- Knowledge management systems\n- Document collaboration platforms\n- Team documentation workflows\n- Content sharing interfaces"}}},render:args=>{const[selectedDocumentId,setSelectedDocumentId]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.selectedDocumentId),[lastSharedDocument,setLastSharedDocument]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"space-y-4",children:[lastSharedDocument&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"p-4 bg-blue-50 dark:bg-blue-950 border border-blue-200 dark:border-blue-800 rounded-lg",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{className:"text-sm text-blue-800 dark:text-blue-200",children:["📤 Last shared: ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("strong",{children:lastSharedDocument.title})]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_KnowledgeView__WEBPACK_IMPORTED_MODULE_2__.A,{...args,selectedDocumentId,onDocumentClick:document=>{var _args_onDocumentClick;setSelectedDocumentId(document.id),null===(_args_onDocumentClick=args.onDocumentClick)||void 0===_args_onDocumentClick||_args_onDocumentClick.call(args,document)},onDocumentShare:document=>{var _args_onDocumentShare;setLastSharedDocument(document),null===(_args_onDocumentShare=args.onDocumentShare)||void 0===_args_onDocumentShare||_args_onDocumentShare.call(args,document)}})]})},args:{documents:sampleDocuments,contexts:defaultContexts}},MultiContextDocumentSwitching={name:"Cross-Context Document Selection",parameters:{docs:{description:{story:"**Cross-Context Document Selection**\n\nThis advanced example demonstrates how document selection persists across different context views:\n\n1. **Select a Document**: Click any document in the current context\n2. **Switch Contexts**: Change to a different context using the tabs\n3. **Persistent Selection**: The selected document remains highlighted even in different organizational views\n4. **Context-aware Display**: The same document may appear in different locations depending on the context's grouping rules\n\n**Key Behaviors:**\n- Selection state persists across context switches\n- Documents appear in different groups based on active context\n- Selected document is highlighted regardless of its group location\n- Useful for maintaining focus while exploring different organizational views\n\n**Technical Implementation:**\n- Uses `selectedDocumentId` to maintain selection state\n- KnowledgeBrowser handles highlighting across different grouping structures\n- Context switching doesn't reset selection unless explicitly cleared"}}},render:args=>{const[selectedDocumentId,setSelectedDocumentId]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("3");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"space-y-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"p-4 bg-amber-50 dark:bg-amber-950 border border-amber-200 dark:border-amber-800 rounded-lg",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{className:"text-sm text-amber-800 dark:text-amber-200",children:["💡 ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("strong",{children:"Try this:"})," Select a document, then switch between contexts to see how the selection persists across different organizational views."]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_KnowledgeView__WEBPACK_IMPORTED_MODULE_2__.A,{...args,selectedDocumentId,onDocumentClick:document=>{var _args_onDocumentClick;setSelectedDocumentId(document.id),null===(_args_onDocumentClick=args.onDocumentClick)||void 0===_args_onDocumentClick||_args_onDocumentClick.call(args,document)}})]})},args:{documents:sampleDocuments,contexts:defaultContexts}},NoContexts={name:"No Contexts Available",parameters:{docs:{description:{story:"Shows the fallback state when no contexts are provided. The component gracefully handles this edge case by displaying a message instead of breaking."}}},args:{documents:sampleDocuments,contexts:[]}},CustomContextExample={name:"Custom Context Configuration",parameters:{docs:{description:{story:'Demonstrates how to create a custom context with specific grouping and sorting rules. \n        \nThis example shows a "Priority View" that groups documents by difficulty and priority levels, sorted by update time. This is useful for creating workflow-specific views of your documentation.'}}},args:{documents:sampleDocuments,contexts:[{id:"priority",label:"Priority View",description:"Documents organized by difficulty and sorted by recent updates",icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_barrel_optimize_names_BookOpen_Code_FileText_Server_Shield_Users_lucide_react__WEBPACK_IMPORTED_MODULE_7__.A,{className:"h-4 w-4"}),menuConfig:{groupBy:["difficulty","category"],sortBy:"updatedAt",sortOrder:"desc",showDocumentCount:!0}},{id:"formats",label:"By Format",description:"Documents grouped by their format type",icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_barrel_optimize_names_BookOpen_Code_FileText_Server_Shield_Users_lucide_react__WEBPACK_IMPORTED_MODULE_8__.A,{className:"h-4 w-4"}),menuConfig:{groupBy:["format","team"],sortBy:"title",sortOrder:"asc",showDocumentCount:!0}}]}},DocumentSwitchingWithPreview={name:"Document Selection with Preview",parameters:{docs:{description:{story:"**Document Selection with Live Preview**\n\nThis story demonstrates a complete document browsing experience with live preview:\n\n1. **Browse Documents**: Use the knowledge browser to explore documents\n2. **Select for Preview**: Click any document to see its details in the preview panel\n3. **Context Switching**: Change contexts while maintaining the preview\n4. **Rich Metadata Display**: See document metadata, tags, and content preview\n\n**Preview Panel Features:**\n- Document title and description\n- Metadata display (category, team, type, etc.)\n- Creation and update dates\n- Tag visualization\n- Content preview (first few lines)\n\n**Real-world Applications:**\n- Knowledge base interfaces\n- Document management systems\n- Research and reference tools\n- Team documentation platforms\n\nThis pattern is commonly used in document-heavy applications where users need to quickly preview content before opening the full document."}}},render:args=>{const[selectedDocumentId,setSelectedDocumentId]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(),selectedDocument=selectedDocumentId?sampleDocuments.find((doc=>doc.id===selectedDocumentId)):null;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"grid grid-cols-1 lg:grid-cols-3 gap-6 h-[600px]",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"lg:col-span-2",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_KnowledgeView__WEBPACK_IMPORTED_MODULE_2__.A,{...args,selectedDocumentId,onDocumentClick:document=>{var _args_onDocumentClick;setSelectedDocumentId(document.id),null===(_args_onDocumentClick=args.onDocumentClick)||void 0===_args_onDocumentClick||_args_onDocumentClick.call(args,document)}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"lg:col-span-1 border border-border rounded-lg bg-card",children:selectedDocument?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"p-4 space-y-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{className:"text-lg font-semibold text-foreground",children:selectedDocument.title}),selectedDocument.description&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"text-sm text-muted-foreground mt-1",children:selectedDocument.description})]}),selectedDocument.metadata&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"space-y-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{className:"text-sm font-medium text-foreground",children:"Metadata"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"grid grid-cols-1 gap-1 text-xs",children:Object.entries(selectedDocument.metadata).map((([key,value])=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex justify-between",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("span",{className:"text-muted-foreground capitalize",children:[key,":"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"text-foreground font-medium",children:String(value)})]},key)))})]}),selectedDocument.tags&&selectedDocument.tags.length>0&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"space-y-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{className:"text-sm font-medium text-foreground",children:"Tags"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"flex flex-wrap gap-1",children:selectedDocument.tags.map((tag=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"px-2 py-1 text-xs bg-secondary text-secondary-foreground rounded",children:tag},tag)))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"space-y-1 text-xs text-muted-foreground",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Created: ",selectedDocument.createdAt.toLocaleDateString()]}),selectedDocument.updatedAt&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Updated: ",selectedDocument.updatedAt.toLocaleDateString()]})]}),selectedDocument.content&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"space-y-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{className:"text-sm font-medium text-foreground",children:"Preview"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"p-3 bg-muted rounded text-xs text-muted-foreground font-mono max-h-32 overflow-y-auto",children:[selectedDocument.content.split("\n").slice(0,8).join("\n"),selectedDocument.content.split("\n").length>8&&"\n..."]})]})]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"p-4 text-center text-muted-foreground",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"py-8",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_barrel_optimize_names_BookOpen_Code_FileText_Server_Shield_Users_lucide_react__WEBPACK_IMPORTED_MODULE_8__.A,{className:"h-12 w-12 mx-auto mb-3 opacity-50"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"text-sm",children:"Select a document to see its preview"})]})})})]})},args:{documents:sampleDocuments,contexts:defaultContexts}},LazyContentLoading={name:"Lazy Content Loading",parameters:{docs:{description:{story:"**Lazy Content Loading Pattern**\n\nThis story demonstrates how to implement lazy content loading for better performance:\n\n- Documents loaded with metadata only initially\n- Content fetched on-demand when clicked  \n- Loading states and caching\n- Better performance for large collections\n\n**Use Cases:** 50+ documents, >10KB content, mobile users"}}},render:args=>{const[selectedDocumentId,setSelectedDocumentId]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(),[loadedContent,setLoadedContent]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Map),[loadingContent,setLoadingContent]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Set),documentsWithoutContent=sampleDocuments.map((doc=>({...doc,content:void 0}))),simulateContentLoading=async documentId=>{await new Promise((resolve=>setTimeout(resolve,1e3)));const originalDoc=sampleDocuments.find((doc=>doc.id===documentId));return(null==originalDoc?void 0:originalDoc.content)||`# ${null==originalDoc?void 0:originalDoc.title}\n\nContent loaded dynamically...`},selectedDocument=selectedDocumentId?documentsWithoutContent.find((doc=>doc.id===selectedDocumentId)):null;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"grid grid-cols-1 lg:grid-cols-3 gap-6 h-[600px]",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"lg:col-span-2",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_KnowledgeView__WEBPACK_IMPORTED_MODULE_2__.A,{...args,documents:documentsWithoutContent,selectedDocumentId,onDocumentClick:async document=>{var _args_onDocumentClick;if(setSelectedDocumentId(document.id),null===(_args_onDocumentClick=args.onDocumentClick)||void 0===_args_onDocumentClick||_args_onDocumentClick.call(args,document),!loadedContent.has(document.id)){setLoadingContent((prev=>new Set(prev).add(document.id)));try{const content=await simulateContentLoading(document.id);setLoadedContent((prev=>new Map(prev).set(document.id,content)))}finally{setLoadingContent((prev=>{const newSet=new Set(prev);return newSet.delete(document.id),newSet}))}}},onLoadDocumentContent:simulateContentLoading})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"lg:col-span-1 border border-border rounded-lg bg-card",children:selectedDocument?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"p-4 space-y-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{className:"text-lg font-semibold",children:selectedDocument.title}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"space-y-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex items-center justify-between",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{className:"text-sm font-medium",children:"Content"}),loadingContent.has(selectedDocument.id)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex items-center space-x-2 text-xs",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"animate-spin h-3 w-3 border border-current border-t-transparent rounded-full"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{children:"Loading..."})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"p-3 bg-muted rounded text-xs font-mono max-h-40 overflow-y-auto",children:loadingContent.has(selectedDocument.id)?"Loading content...":loadedContent.get(selectedDocument.id)||"Content not loaded"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"text-xs text-muted-foreground",children:["Cached: ",loadedContent.size," documents"]})]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"p-4 text-center text-muted-foreground",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_barrel_optimize_names_BookOpen_Code_FileText_Server_Shield_Users_lucide_react__WEBPACK_IMPORTED_MODULE_8__.A,{className:"h-12 w-12 mx-auto mb-3 opacity-50"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"text-sm",children:"Select a document to load its content"})]})})]})},args:{documents:[],contexts:defaultContexts}},__namedExportsOrder=["sampleDocuments","defaultContexts","Default","ServicesView","ArchitectureView","TeamsView","EmptyState","WithSelection","InteractiveDocumentSwitching","DocumentSwitchingWithSharing","MultiContextDocumentSwitching","NoContexts","CustomContextExample","DocumentSwitchingWithPreview","LazyContentLoading"];sampleDocuments.parameters={...sampleDocuments.parameters,docs:{...sampleDocuments.parameters?.docs,source:{originalSource:"[{\n  id: '1',\n  title: 'API Authentication Guide',\n  description: 'Complete guide for implementing API authentication in our platform',\n  format: 'markdown',\n  metadata: {\n    category: 'Development',\n    type: 'Guide',\n    team: 'Backend',\n    difficulty: 'Intermediate',\n    version: '2.1',\n    service: 'Authentication Service',\n    component: 'Auth Module',\n    layer: 'API Layer',\n    project: 'Security Framework'\n  },\n  content: `# API Authentication Guide\n\n## Overview\nThis guide covers the implementation of secure API authentication...\n\n## OAuth 2.0 Implementation\n- Authorization Code Flow\n- Client Credentials Flow\n- Refresh Token Handling\n\n## Best Practices\n1. Always use HTTPS\n2. Implement proper token expiration\n3. Use secure storage for credentials`,\n  tags: ['api', 'security', 'oauth', 'backend'],\n  createdAt: new Date('2024-01-15'),\n  updatedAt: new Date('2024-02-10')\n}, {\n  id: '2',\n  title: 'UI Component Library',\n  description: 'Documentation for our React component library',\n  format: 'mdx',\n  metadata: {\n    category: 'Development',\n    type: 'Documentation',\n    team: 'Frontend',\n    difficulty: 'Beginner',\n    version: '1.5',\n    service: 'UI Service',\n    component: 'Component Library',\n    layer: 'Presentation Layer',\n    project: 'Design System'\n  },\n  content: `# UI Component Library\n\n## Installation\n\\`\\`\\`bash\nnpm install @company/ui-components\n\\`\\`\\`\n\n## Basic Usage\n\\`\\`\\`jsx\nimport { Button, Card } from '@company/ui-components'\n\nfunction App() {\n  return (\n    <Card>\n      <Button variant=\"primary\">Click me</Button>\n    </Card>\n  )\n}\n\\`\\`\\``,\n  tags: ['ui', 'react', 'components', 'frontend'],\n  createdAt: new Date('2024-01-10'),\n  updatedAt: new Date('2024-03-01')\n}, {\n  id: '3',\n  title: 'Database Schema Design',\n  description: 'Guidelines for designing scalable database schemas',\n  format: 'markdown',\n  metadata: {\n    category: 'Development',\n    type: 'Best Practice',\n    team: 'Backend',\n    difficulty: 'Advanced',\n    version: '3.0'\n  },\n  content: `# Database Schema Design\n\n## Principles\n- Normalize for consistency\n- Denormalize for performance\n- Index strategically\n\n## Common Patterns\n1. One-to-Many relationships\n2. Many-to-Many with junction tables\n3. Polymorphic associations`,\n  tags: ['database', 'schema', 'sql', 'backend'],\n  createdAt: new Date('2024-02-01')\n}, {\n  id: '4',\n  title: 'Employee Onboarding Process',\n  description: 'Step-by-step guide for new employee onboarding',\n  format: 'richtext',\n  metadata: {\n    category: 'HR',\n    type: 'Process',\n    team: 'Human Resources',\n    difficulty: 'Beginner',\n    department: 'Operations'\n  },\n  content: `Employee Onboarding Checklist\n\nDay 1:\n- Welcome meeting with manager\n- IT setup and account creation\n- Office tour and safety briefing\n- Complete paperwork\n\nWeek 1:\n- Team introductions\n- Project overview sessions\n- Access to necessary tools\n- Initial training modules\n\nMonth 1:\n- Progress review\n- Goal setting\n- Feedback session`,\n  tags: ['hr', 'onboarding', 'process', 'checklist'],\n  createdAt: new Date('2024-01-20')\n}, {\n  id: '5',\n  title: 'Marketing Campaign Analysis',\n  description: 'Q1 2024 marketing campaign performance analysis',\n  format: 'markdown',\n  metadata: {\n    category: 'Marketing',\n    type: 'Report',\n    team: 'Marketing',\n    difficulty: 'Intermediate',\n    quarter: 'Q1 2024'\n  },\n  content: `# Q1 2024 Marketing Campaign Analysis\n\n## Executive Summary\nOur Q1 campaigns showed a 25% increase in engagement...\n\n## Key Metrics\n- Click-through rate: 3.2%\n- Conversion rate: 1.8%\n- Cost per acquisition: $45\n\n## Recommendations\n1. Increase social media spend\n2. A/B test email subject lines\n3. Optimize landing pages`,\n  tags: ['marketing', 'analysis', 'campaign', 'metrics'],\n  createdAt: new Date('2024-04-01')\n}, {\n  id: '6',\n  title: 'Security Incident Response',\n  description: 'Procedures for handling security incidents',\n  format: 'markdown',\n  metadata: {\n    category: 'Security',\n    type: 'Procedure',\n    team: 'Security',\n    difficulty: 'Advanced',\n    criticality: 'High'\n  },\n  content: `# Security Incident Response Procedure\n\n## Immediate Response (0-1 hour)\n1. Assess and contain the threat\n2. Document the incident\n3. Notify the security team\n\n## Investigation Phase (1-24 hours)\n1. Gather evidence\n2. Analyze attack vectors\n3. Determine scope of compromise\n\n## Recovery and Lessons Learned\n1. Implement fixes\n2. Update procedures\n3. Conduct post-incident review`,\n  tags: ['security', 'incident', 'response', 'procedure'],\n  createdAt: new Date('2024-02-15')\n}, {\n  id: '7',\n  title: 'Design System Guidelines',\n  description: 'Visual design standards and component usage guidelines',\n  format: 'mdx',\n  metadata: {\n    category: 'Design',\n    type: 'Guidelines',\n    team: 'Design',\n    difficulty: 'Intermediate',\n    version: '2.0'\n  },\n  content: `# Design System Guidelines\n\n## Color Palette\n- Primary: #3B82F6\n- Secondary: #10B981\n- Neutral: #6B7280\n\n## Typography\n- Headings: Inter Bold\n- Body: Inter Regular\n- Code: JetBrains Mono\n\n## Spacing Scale\n- xs: 4px\n- sm: 8px\n- md: 16px\n- lg: 24px\n- xl: 32px`,\n  tags: ['design', 'system', 'guidelines', 'ui'],\n  createdAt: new Date('2024-01-25')\n}]",...sampleDocuments.parameters?.docs?.source}}},defaultContexts.parameters={...defaultContexts.parameters,docs:{...defaultContexts.parameters?.docs,source:{originalSource:"[{\n  id: 'all',\n  label: 'All Documentation',\n  description: 'Browse all documentation organized by category and type',\n  icon: <BookOpen className=\"h-4 w-4\" />,\n  menuConfig: {\n    groupBy: ['category', 'type'],\n    sortBy: 'title',\n    sortOrder: 'asc',\n    showDocumentCount: true\n  }\n}, {\n  id: 'services',\n  label: 'Services',\n  description: 'Documentation organized by service and team',\n  icon: <Server className=\"h-4 w-4\" />,\n  menuConfig: {\n    groupBy: ['service', 'team'],\n    sortBy: 'updatedAt',\n    sortOrder: 'desc',\n    showDocumentCount: true\n  }\n}, {\n  id: 'architecture',\n  label: 'Architecture',\n  description: 'System architecture documentation by component and layer',\n  icon: <Code className=\"h-4 w-4\" />,\n  menuConfig: {\n    groupBy: ['component', 'layer'],\n    sortBy: 'title',\n    sortOrder: 'asc',\n    showDocumentCount: true\n  }\n}, {\n  id: 'teams',\n  label: 'Teams',\n  description: 'Documentation organized by team and project',\n  icon: <Users className=\"h-4 w-4\" />,\n  menuConfig: {\n    groupBy: ['team', 'project'],\n    sortBy: 'updatedAt',\n    sortOrder: 'desc',\n    showDocumentCount: true\n  }\n}, {\n  id: 'security',\n  label: 'Security',\n  description: 'Security documentation and compliance guides',\n  icon: <Shield className=\"h-4 w-4\" />,\n  menuConfig: {\n    groupBy: ['category', 'difficulty'],\n    sortBy: 'updatedAt',\n    sortOrder: 'desc',\n    showDocumentCount: true\n  }\n}]",...defaultContexts.parameters?.docs?.source}}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  name: 'Complete View',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Shows the KnowledgeView with all default contexts and sample documentation. This is the most comprehensive view showing all features including context switching, document browsing, and metadata display.'\n      }\n    }\n  },\n  args: {\n    documents: sampleDocuments,\n    contexts: defaultContexts\n  }\n}",...Default.parameters?.docs?.source}}},ServicesView.parameters={...ServicesView.parameters,docs:{...ServicesView.parameters?.docs,source:{originalSource:"{\n  name: 'Services Context Only',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Displays only the Services context, showing how documents are organized by service and team. This view is useful for service-oriented documentation workflows.'\n      }\n    }\n  },\n  args: {\n    documents: sampleDocuments,\n    contexts: defaultContexts.filter(c => c.id === 'services')\n  }\n}",...ServicesView.parameters?.docs?.source}}},ArchitectureView.parameters={...ArchitectureView.parameters,docs:{...ArchitectureView.parameters?.docs,source:{originalSource:"{\n  name: 'Architecture Context Only',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Shows only the Architecture context, organizing documents by component and layer. Perfect for technical documentation and system architecture references.'\n      }\n    }\n  },\n  args: {\n    documents: sampleDocuments,\n    contexts: defaultContexts.filter(c => c.id === 'architecture')\n  }\n}",...ArchitectureView.parameters?.docs?.source}}},TeamsView.parameters={...TeamsView.parameters,docs:{...TeamsView.parameters?.docs,source:{originalSource:"{\n  name: 'Teams Context Only',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Focuses on the Teams context, grouping documents by team and project. Ideal for team-specific documentation management.'\n      }\n    }\n  },\n  args: {\n    documents: sampleDocuments,\n    contexts: defaultContexts.filter(c => c.id === 'teams')\n  }\n}",...TeamsView.parameters?.docs?.source}}},EmptyState.parameters={...EmptyState.parameters,docs:{...EmptyState.parameters?.docs,source:{originalSource:"{\n  name: 'No Documents',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Shows how the component handles an empty document state while still providing context navigation. Useful for testing empty states and initial loading scenarios.'\n      }\n    }\n  },\n  args: {\n    documents: [],\n    contexts: defaultContexts\n  }\n}",...EmptyState.parameters?.docs?.source}}},WithSelection.parameters={...WithSelection.parameters,docs:{...WithSelection.parameters?.docs,source:{originalSource:"{\n  name: 'With Selected Document',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstrates the component with a pre-selected document (UI Component Library). Shows how selection highlighting works within the knowledge browser.'\n      }\n    }\n  },\n  args: {\n    documents: sampleDocuments,\n    contexts: defaultContexts,\n    selectedDocumentId: '2'\n  }\n}",...WithSelection.parameters?.docs?.source}}},InteractiveDocumentSwitching.parameters={...InteractiveDocumentSwitching.parameters,docs:{...InteractiveDocumentSwitching.parameters?.docs,source:{originalSource:"{\n  name: 'Interactive Document Selection',\n  parameters: {\n    docs: {\n      description: {\n        story: `**Interactive Document Selection Demo**\n\nThis story demonstrates how document selection works in the KnowledgeView component:\n\n1. Click on any document in the browser to select it\n2. The selected document will be highlighted with a different background\n3. The onDocumentClick callback will be triggered with the document data\n4. You can see the selection state change in the Actions panel below\n\n**Key Features:**\n- Visual feedback for selected documents\n- Callback handling for document clicks\n- State management for selection highlighting\n- Integration with the KnowledgeBrowser component\n\n**Use Cases:**\n- Document preview interfaces\n- Multi-step document workflows\n- Document comparison tools\n- Knowledge base navigation\n\nThe selection state is managed through the \\`selectedDocumentId\\` prop and updated via the \\`onDocumentClick\\` callback.`\n      }\n    }\n  },\n  render: args => {\n    const [selectedDocumentId, setSelectedDocumentId] = useState<string | undefined>(args.selectedDocumentId);\n    const handleDocumentClick = (document: KnowledgeDocument) => {\n      setSelectedDocumentId(document.id);\n      // Call the original callback for Actions panel\n      args.onDocumentClick?.(document);\n    };\n    return <KnowledgeView {...args} selectedDocumentId={selectedDocumentId} onDocumentClick={handleDocumentClick} />;\n  },\n  args: {\n    documents: sampleDocuments,\n    contexts: defaultContexts,\n    selectedDocumentId: '1'\n  }\n}",...InteractiveDocumentSwitching.parameters?.docs?.source}}},DocumentSwitchingWithSharing.parameters={...DocumentSwitchingWithSharing.parameters,docs:{...DocumentSwitchingWithSharing.parameters?.docs,source:{originalSource:'{\n  name: \'Document Selection + Sharing\',\n  parameters: {\n    docs: {\n      description: {\n        story: `**Document Selection with Sharing Actions**\n\nThis story shows how document selection works together with sharing functionality:\n\n1. **Select Documents**: Click any document to select it\n2. **Share Documents**: Use sharing actions (if available in the KnowledgeBrowser)\n3. **Multiple Interactions**: Both selection and sharing callbacks are demonstrated\n\n**Callback Behavior:**\n- \\`onDocumentClick\\`: Triggers when clicking a document for selection\n- \\`onDocumentShare\\`: Triggers when sharing a document\n- Both actions are logged to the Actions panel\n\n**Real-world Usage:**\n- Knowledge management systems\n- Document collaboration platforms\n- Team documentation workflows\n- Content sharing interfaces`\n      }\n    }\n  },\n  render: args => {\n    const [selectedDocumentId, setSelectedDocumentId] = useState<string | undefined>(args.selectedDocumentId);\n    const [lastSharedDocument, setLastSharedDocument] = useState<KnowledgeDocument | null>(null);\n    const handleDocumentClick = (document: KnowledgeDocument) => {\n      setSelectedDocumentId(document.id);\n      args.onDocumentClick?.(document);\n    };\n    const handleDocumentShare = (document: KnowledgeDocument) => {\n      setLastSharedDocument(document);\n      args.onDocumentShare?.(document);\n    };\n    return <div className="space-y-4">\n        {lastSharedDocument && <div className="p-4 bg-blue-50 dark:bg-blue-950 border border-blue-200 dark:border-blue-800 rounded-lg">\n            <p className="text-sm text-blue-800 dark:text-blue-200">\n              📤 Last shared: <strong>{lastSharedDocument.title}</strong>\n            </p>\n          </div>}\n        <KnowledgeView {...args} selectedDocumentId={selectedDocumentId} onDocumentClick={handleDocumentClick} onDocumentShare={handleDocumentShare} />\n      </div>;\n  },\n  args: {\n    documents: sampleDocuments,\n    contexts: defaultContexts\n  }\n}',...DocumentSwitchingWithSharing.parameters?.docs?.source}}},MultiContextDocumentSwitching.parameters={...MultiContextDocumentSwitching.parameters,docs:{...MultiContextDocumentSwitching.parameters?.docs,source:{originalSource:"{\n  name: 'Cross-Context Document Selection',\n  parameters: {\n    docs: {\n      description: {\n        story: `**Cross-Context Document Selection**\n\nThis advanced example demonstrates how document selection persists across different context views:\n\n1. **Select a Document**: Click any document in the current context\n2. **Switch Contexts**: Change to a different context using the tabs\n3. **Persistent Selection**: The selected document remains highlighted even in different organizational views\n4. **Context-aware Display**: The same document may appear in different locations depending on the context's grouping rules\n\n**Key Behaviors:**\n- Selection state persists across context switches\n- Documents appear in different groups based on active context\n- Selected document is highlighted regardless of its group location\n- Useful for maintaining focus while exploring different organizational views\n\n**Technical Implementation:**\n- Uses \\`selectedDocumentId\\` to maintain selection state\n- KnowledgeBrowser handles highlighting across different grouping structures\n- Context switching doesn't reset selection unless explicitly cleared`\n      }\n    }\n  },\n  render: args => {\n    const [selectedDocumentId, setSelectedDocumentId] = useState<string | undefined>('3');\n    const handleDocumentClick = (document: KnowledgeDocument) => {\n      setSelectedDocumentId(document.id);\n      args.onDocumentClick?.(document);\n    };\n    return <div className=\"space-y-4\">\n        <div className=\"p-4 bg-amber-50 dark:bg-amber-950 border border-amber-200 dark:border-amber-800 rounded-lg\">\n          <p className=\"text-sm text-amber-800 dark:text-amber-200\">\n            💡 <strong>Try this:</strong> Select a document, then switch between contexts to see how\n            the selection persists across different organizational views.\n          </p>\n        </div>\n        <KnowledgeView {...args} selectedDocumentId={selectedDocumentId} onDocumentClick={handleDocumentClick} />\n      </div>;\n  },\n  args: {\n    documents: sampleDocuments,\n    contexts: defaultContexts\n  }\n}",...MultiContextDocumentSwitching.parameters?.docs?.source}}},NoContexts.parameters={...NoContexts.parameters,docs:{...NoContexts.parameters?.docs,source:{originalSource:"{\n  name: 'No Contexts Available',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Shows the fallback state when no contexts are provided. The component gracefully handles this edge case by displaying a message instead of breaking.'\n      }\n    }\n  },\n  args: {\n    documents: sampleDocuments,\n    contexts: []\n  }\n}",...NoContexts.parameters?.docs?.source}}},CustomContextExample.parameters={...CustomContextExample.parameters,docs:{...CustomContextExample.parameters?.docs,source:{originalSource:"{\n  name: 'Custom Context Configuration',\n  parameters: {\n    docs: {\n      description: {\n        story: `Demonstrates how to create a custom context with specific grouping and sorting rules. \n        \nThis example shows a \"Priority View\" that groups documents by difficulty and priority levels, sorted by update time. This is useful for creating workflow-specific views of your documentation.`\n      }\n    }\n  },\n  args: {\n    documents: sampleDocuments,\n    contexts: [{\n      id: 'priority',\n      label: 'Priority View',\n      description: 'Documents organized by difficulty and sorted by recent updates',\n      icon: <Shield className=\"h-4 w-4\" />,\n      menuConfig: {\n        groupBy: ['difficulty', 'category'],\n        sortBy: 'updatedAt',\n        sortOrder: 'desc',\n        showDocumentCount: true\n      }\n    }, {\n      id: 'formats',\n      label: 'By Format',\n      description: 'Documents grouped by their format type',\n      icon: <FileText className=\"h-4 w-4\" />,\n      menuConfig: {\n        groupBy: ['format', 'team'],\n        sortBy: 'title',\n        sortOrder: 'asc',\n        showDocumentCount: true\n      }\n    }]\n  }\n}",...CustomContextExample.parameters?.docs?.source}}},DocumentSwitchingWithPreview.parameters={...DocumentSwitchingWithPreview.parameters,docs:{...DocumentSwitchingWithPreview.parameters?.docs,source:{originalSource:'{\n  name: \'Document Selection with Preview\',\n  parameters: {\n    docs: {\n      description: {\n        story: `**Document Selection with Live Preview**\n\nThis story demonstrates a complete document browsing experience with live preview:\n\n1. **Browse Documents**: Use the knowledge browser to explore documents\n2. **Select for Preview**: Click any document to see its details in the preview panel\n3. **Context Switching**: Change contexts while maintaining the preview\n4. **Rich Metadata Display**: See document metadata, tags, and content preview\n\n**Preview Panel Features:**\n- Document title and description\n- Metadata display (category, team, type, etc.)\n- Creation and update dates\n- Tag visualization\n- Content preview (first few lines)\n\n**Real-world Applications:**\n- Knowledge base interfaces\n- Document management systems\n- Research and reference tools\n- Team documentation platforms\n\nThis pattern is commonly used in document-heavy applications where users need to quickly preview content before opening the full document.`\n      }\n    }\n  },\n  render: args => {\n    const [selectedDocumentId, setSelectedDocumentId] = useState<string | undefined>();\n    const selectedDocument = selectedDocumentId ? sampleDocuments.find(doc => doc.id === selectedDocumentId) : null;\n    const handleDocumentClick = (document: KnowledgeDocument) => {\n      setSelectedDocumentId(document.id);\n      args.onDocumentClick?.(document);\n    };\n    return <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 h-[600px]">\n        {/* Knowledge View - Takes up 2/3 of the space */}\n        <div className="lg:col-span-2">\n          <KnowledgeView {...args} selectedDocumentId={selectedDocumentId} onDocumentClick={handleDocumentClick} />\n        </div>\n\n        {/* Document Preview Panel - Takes up 1/3 of the space */}\n        <div className="lg:col-span-1 border border-border rounded-lg bg-card">\n          {selectedDocument ? <div className="p-4 space-y-4">\n              <div>\n                <h3 className="text-lg font-semibold text-foreground">{selectedDocument.title}</h3>\n                {selectedDocument.description && <p className="text-sm text-muted-foreground mt-1">\n                    {selectedDocument.description}\n                  </p>}\n              </div>\n\n              {/* Metadata */}\n              {selectedDocument.metadata && <div className="space-y-2">\n                  <h4 className="text-sm font-medium text-foreground">Metadata</h4>\n                  <div className="grid grid-cols-1 gap-1 text-xs">\n                    {Object.entries(selectedDocument.metadata).map(([key, value]) => <div key={key} className="flex justify-between">\n                        <span className="text-muted-foreground capitalize">{key}:</span>\n                        <span className="text-foreground font-medium">{String(value)}</span>\n                      </div>)}\n                  </div>\n                </div>}\n\n              {/* Tags */}\n              {selectedDocument.tags && selectedDocument.tags.length > 0 && <div className="space-y-2">\n                  <h4 className="text-sm font-medium text-foreground">Tags</h4>\n                  <div className="flex flex-wrap gap-1">\n                    {selectedDocument.tags.map(tag => <span key={tag} className="px-2 py-1 text-xs bg-secondary text-secondary-foreground rounded">\n                        {tag}\n                      </span>)}\n                  </div>\n                </div>}\n\n              {/* Dates */}\n              <div className="space-y-1 text-xs text-muted-foreground">\n                <div>Created: {selectedDocument.createdAt.toLocaleDateString()}</div>\n                {selectedDocument.updatedAt && <div>Updated: {selectedDocument.updatedAt.toLocaleDateString()}</div>}\n              </div>\n\n              {/* Content Preview */}\n              {selectedDocument.content && <div className="space-y-2">\n                  <h4 className="text-sm font-medium text-foreground">Preview</h4>\n                  <div className="p-3 bg-muted rounded text-xs text-muted-foreground font-mono max-h-32 overflow-y-auto">\n                    {selectedDocument.content.split(\'\\n\').slice(0, 8).join(\'\\n\')}\n                    {selectedDocument.content.split(\'\\n\').length > 8 && \'\\n...\'}\n                  </div>\n                </div>}\n            </div> : <div className="p-4 text-center text-muted-foreground">\n              <div className="py-8">\n                <FileText className="h-12 w-12 mx-auto mb-3 opacity-50" />\n                <p className="text-sm">Select a document to see its preview</p>\n              </div>\n            </div>}\n        </div>\n      </div>;\n  },\n  args: {\n    documents: sampleDocuments,\n    contexts: defaultContexts\n  }\n}',...DocumentSwitchingWithPreview.parameters?.docs?.source}}},LazyContentLoading.parameters={...LazyContentLoading.parameters,docs:{...LazyContentLoading.parameters?.docs,source:{originalSource:'{\n  name: \'Lazy Content Loading\',\n  parameters: {\n    docs: {\n      description: {\n        story: `**Lazy Content Loading Pattern**\n\nThis story demonstrates how to implement lazy content loading for better performance:\n\n- Documents loaded with metadata only initially\n- Content fetched on-demand when clicked  \n- Loading states and caching\n- Better performance for large collections\n\n**Use Cases:** 50+ documents, >10KB content, mobile users`\n      }\n    }\n  },\n  render: args => {\n    const [selectedDocumentId, setSelectedDocumentId] = useState<string | undefined>();\n    const [loadedContent, setLoadedContent] = useState<Map<string, string>>(new Map());\n    const [loadingContent, setLoadingContent] = useState<Set<string>>(new Set());\n\n    // Documents without pre-loaded content\n    const documentsWithoutContent = sampleDocuments.map(doc => ({\n      ...doc,\n      content: undefined\n    }));\n\n    // Simulate API loading\n    const simulateContentLoading = async (documentId: string): Promise<string> => {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const originalDoc = sampleDocuments.find(doc => doc.id === documentId);\n      return originalDoc?.content || `# ${originalDoc?.title}\\n\\nContent loaded dynamically...`;\n    };\n    const handleDocumentClick = async (document: KnowledgeDocument) => {\n      setSelectedDocumentId(document.id);\n      args.onDocumentClick?.(document);\n      if (!loadedContent.has(document.id)) {\n        setLoadingContent(prev => new Set(prev).add(document.id));\n        try {\n          const content = await simulateContentLoading(document.id);\n          setLoadedContent(prev => new Map(prev).set(document.id, content));\n        } finally {\n          setLoadingContent(prev => {\n            const newSet = new Set(prev);\n            newSet.delete(document.id);\n            return newSet;\n          });\n        }\n      }\n    };\n    const selectedDocument = selectedDocumentId ? documentsWithoutContent.find(doc => doc.id === selectedDocumentId) : null;\n    return <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 h-[600px]">\n        <div className="lg:col-span-2">\n          <KnowledgeView {...args} documents={documentsWithoutContent} selectedDocumentId={selectedDocumentId} onDocumentClick={handleDocumentClick} onLoadDocumentContent={simulateContentLoading} />\n        </div>\n\n        <div className="lg:col-span-1 border border-border rounded-lg bg-card">\n          {selectedDocument ? <div className="p-4 space-y-4">\n              <h3 className="text-lg font-semibold">{selectedDocument.title}</h3>\n\n              <div className="space-y-2">\n                <div className="flex items-center justify-between">\n                  <h4 className="text-sm font-medium">Content</h4>\n                  {loadingContent.has(selectedDocument.id) && <div className="flex items-center space-x-2 text-xs">\n                      <div className="animate-spin h-3 w-3 border border-current border-t-transparent rounded-full"></div>\n                      <span>Loading...</span>\n                    </div>}\n                </div>\n\n                <div className="p-3 bg-muted rounded text-xs font-mono max-h-40 overflow-y-auto">\n                  {loadingContent.has(selectedDocument.id) ? \'Loading content...\' : loadedContent.get(selectedDocument.id) || \'Content not loaded\'}\n                </div>\n              </div>\n\n              <div className="text-xs text-muted-foreground">\n                Cached: {loadedContent.size} documents\n              </div>\n            </div> : <div className="p-4 text-center text-muted-foreground">\n              <FileText className="h-12 w-12 mx-auto mb-3 opacity-50" />\n              <p className="text-sm">Select a document to load its content</p>\n            </div>}\n        </div>\n      </div>;\n  },\n  args: {\n    documents: [],\n    contexts: defaultContexts\n  }\n}',...LazyContentLoading.parameters?.docs?.source}}}},"./src/components/Foundary/Views/KnowledgeView.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>KnowledgeView});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/index.js"),_Heros_DashboardHero_DashboardHero__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Heros/DashboardHero/DashboardHero.tsx"),_knowledge_browser__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Foundary/knowledge-browser.tsx"),console=__webpack_require__("./node_modules/.pnpm/console-browserify@1.2.0/node_modules/console-browserify/index.js");function KnowledgeView({documents=[],contexts=[],onDocumentClick=document=>console.log("Document clicked:",document),onDocumentShare=document=>console.log("Share document:",document),onLoadDocumentContent,selectedDocumentId}){const[activeContext,setActiveContext]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(contexts[0]);return contexts&&0!==contexts.length?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex flex-col h-full max-h-[calc(100vh-8rem)]",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"px-2 md:px-4 py-4 flex-shrink-0",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Heros_DashboardHero_DashboardHero__WEBPACK_IMPORTED_MODULE_2__.H,{title:"Knowledge",description:"Access, manage, and share all your team knowledge in one place.",gradient:"bg-gradient-to-r from-teal-600 via-cyan-600 to-blue-600",primaryAction:{label:"Create",onClick:()=>console.log("Create document clicked")}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mt-6",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"border-b border-border",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("nav",{className:"-mb-px flex space-x-8 overflow-x-auto",children:contexts.map((context=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("button",{onClick:()=>setActiveContext(context),className:"group inline-flex items-center gap-2 py-3 px-1 border-b-2 font-medium text-sm whitespace-nowrap transition-colors "+(activeContext.id===context.id?"border-primary text-primary":"border-transparent text-muted-foreground hover:text-foreground hover:border-muted-foreground"),children:[context.icon,context.label]},context.id)))})}),activeContext.description&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"mt-3 px-1",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"text-sm text-muted-foreground",children:activeContext.description})})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"flex-1 min-h-0 px-2 md:px-4 pb-4",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"h-full rounded-3xl border overflow-hidden",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_knowledge_browser__WEBPACK_IMPORTED_MODULE_3__.N,{documents,menuConfig:activeContext.menuConfig,onDocumentClick,onDocumentShare,selectedDocumentId})})})]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex flex-col h-full max-h-[calc(100vh-8rem)]",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"px-2 md:px-4 py-4 flex-shrink-0",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Heros_DashboardHero_DashboardHero__WEBPACK_IMPORTED_MODULE_2__.H,{title:"Knowledge",description:"Access, manage, and share all your team knowledge in one place.",gradient:"bg-gradient-to-r from-teal-600 via-cyan-600 to-blue-600",primaryAction:{label:"Create",onClick:()=>console.log("Create document clicked")}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"flex-1 min-h-0 px-2 md:px-4 pb-4 flex items-center justify-center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"text-muted-foreground",children:"No contexts available"})})]})}KnowledgeView.__docgenInfo={description:"",methods:[],displayName:"KnowledgeView",props:{documents:{required:!1,tsType:{name:"Array",elements:[{name:"KnowledgeDocument"}],raw:"KnowledgeDocument[]"},description:"",defaultValue:{value:"[]",computed:!1}},contexts:{required:!1,tsType:{name:"Array",elements:[{name:"KnowledgeContext"}],raw:"KnowledgeContext[]"},description:"",defaultValue:{value:"[]",computed:!1}},onDocumentClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(document: KnowledgeDocument) => void",signature:{arguments:[{type:{name:"KnowledgeDocument"},name:"document"}],return:{name:"void"}}},description:"",defaultValue:{value:"(document: KnowledgeDocument) => console.log('Document clicked:', document)",computed:!1}},onDocumentShare:{required:!1,tsType:{name:"signature",type:"function",raw:"(document: KnowledgeDocument) => void",signature:{arguments:[{type:{name:"KnowledgeDocument"},name:"document"}],return:{name:"void"}}},description:"",defaultValue:{value:"(document: KnowledgeDocument) => console.log('Share document:', document)",computed:!1}},onLoadDocumentContent:{required:!1,tsType:{name:"signature",type:"function",raw:"(documentId: string) => Promise<string>",signature:{arguments:[{type:{name:"string"},name:"documentId"}],return:{name:"Promise",elements:[{name:"string"}],raw:"Promise<string>"}}},description:""},selectedDocumentId:{required:!1,tsType:{name:"string"},description:""}}}}}]);