"use strict";(self.webpackChunkcortex_react_components=self.webpackChunkcortex_react_components||[]).push([[294],{"./src/client/ui/input.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,WithButton:()=>WithButton,WithHelperText:()=>WithHelperText,WithLabel:()=>WithLabel,__namedExportsOrder:()=>__namedExportsOrder,default:()=>input_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),cn=__webpack_require__("./src/utils/cn.ts");const Input=react.forwardRef((({className,type,...props},ref)=>(0,jsx_runtime.jsx)("input",{type,className:(0,cn.cn)("flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50",className),ref,...props})));Input.displayName="Input",Input.__docgenInfo={description:"",methods:[],displayName:"Input"};const input_stories={title:"Base/Input",component:Input,tags:["autodocs"],argTypes:{},args:{className:"w-96",type:"email",placeholder:"Email",disabled:!1},parameters:{layout:"centered",docs:{description:{component:"Displays a form input field or a component that looks like an input field."}}}},Default={},Disabled={args:{disabled:!0}},WithLabel={render:args=>(0,jsx_runtime.jsxs)("div",{className:"grid items-center gap-1.5",children:[(0,jsx_runtime.jsx)("label",{htmlFor:"email",children:args.placeholder}),(0,jsx_runtime.jsx)(Input,{...args,id:"email"})]})},WithHelperText={render:args=>(0,jsx_runtime.jsxs)("div",{className:"grid items-center gap-1.5",children:[(0,jsx_runtime.jsx)("label",{htmlFor:"email-2",children:args.placeholder}),(0,jsx_runtime.jsx)(Input,{...args,id:"email-2"}),(0,jsx_runtime.jsx)("p",{className:"text-sm text-foreground/50",children:"Enter your email address."})]})},WithButton={render:args=>(0,jsx_runtime.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,jsx_runtime.jsx)(Input,{...args}),(0,jsx_runtime.jsx)("button",{className:"rounded bg-primary px-4 py-2 text-primary-foreground",type:"submit",children:"Subscribe"})]})},__namedExportsOrder=["Default","Disabled","WithLabel","WithHelperText","WithButton"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source},description:{story:"The default form of the input field.",...Default.parameters?.docs?.description}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    disabled: true\n  }\n}",...Disabled.parameters?.docs?.source},description:{story:"Use the `disabled` prop to make the input non-interactive and appears faded,\nindicating that input is not currently accepted.",...Disabled.parameters?.docs?.description}}},WithLabel.parameters={...WithLabel.parameters,docs:{...WithLabel.parameters?.docs,source:{originalSource:'{\n  render: args => <div className="grid items-center gap-1.5">\n      <label htmlFor="email">{args.placeholder}</label>\n      <Input {...args} id="email" />\n    </div>\n}',...WithLabel.parameters?.docs?.source},description:{story:"Use the `Label` component to includes a clear, descriptive label above or\nalongside the input area to guide users.",...WithLabel.parameters?.docs?.description}}},WithHelperText.parameters={...WithHelperText.parameters,docs:{...WithHelperText.parameters?.docs,source:{originalSource:'{\n  render: args => <div className="grid items-center gap-1.5">\n      <label htmlFor="email-2">{args.placeholder}</label>\n      <Input {...args} id="email-2" />\n      <p className="text-sm text-foreground/50">Enter your email address.</p>\n    </div>\n}',...WithHelperText.parameters?.docs?.source},description:{story:"Use a text element below the input field to provide additional instructions\nor information to users.",...WithHelperText.parameters?.docs?.description}}},WithButton.parameters={...WithButton.parameters,docs:{...WithButton.parameters?.docs,source:{originalSource:'{\n  render: args => <div className="flex items-center space-x-2">\n      <Input {...args} />\n      <button className="rounded bg-primary px-4 py-2 text-primary-foreground" type="submit">\n        Subscribe\n      </button>\n    </div>\n}',...WithButton.parameters?.docs?.source},description:{story:"Use the `Button` component to indicate that the input field can be submitted\nor used to trigger an action.",...WithButton.parameters?.docs?.description}}}},"./src/utils/cn.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");function cn(...inputs){return(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))}}}]);