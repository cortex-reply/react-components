"use strict";(self.webpackChunkcortex_react_components=self.webpackChunkcortex_react_components||[]).push([[1504],{"./src/components/Chat/ChatDemo.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CapabilitiesInteraction:()=>CapabilitiesInteraction,Default:()=>Default,ErrorHandling:()=>ErrorHandling,FileUploads:()=>FileUploads,LongMessages:()=>LongMessages,MarkdownResponses:()=>MarkdownResponses,ToolCalling:()=>ToolCalling,UIComponents:()=>UIComponents,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ChatDemo_stories});var jsx_runtime=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.83.0/node_modules/next/dist/compiled/react/index.js"),CopilotInterface=__webpack_require__("./src/components/Chat/CopilotInterface.tsx"),capabilities=__webpack_require__("./src/test-data/capabilities.ts");const demoMessages=[{id:"1",role:"user",parts:[{type:"text",text:"Hello! Can you help me with a task?"}]},{id:"2",role:"assistant",parts:[{type:"text",text:"Of course! I can help you with various tasks. Try uploading a file or use the capabilities menu at the bottom to see what I can do."}]}];function ChatDemo(){const[messages,setMessages]=(0,react.useState)(demoMessages);return(0,jsx_runtime.jsx)("div",{className:"h-screen w-full",children:(0,jsx_runtime.jsx)(CopilotInterface.C,{messages,capabilities:capabilities.NH,enableFileUpload:!0,maxFileSize:10,allowedFileTypes:["*"],businessUnits:[],sessions:[],notifications:[],onNewChat:()=>setMessages([]),onSessionSelect:()=>{},onSessionDelete:()=>{},showCapabilities:!0})})}ChatDemo.__docgenInfo={description:"",methods:[],displayName:"ChatDemo"};const longMessageDemo=[{id:"1",role:"user",parts:[{type:"text",text:"Can you write me a comprehensive analysis of the current state of artificial intelligence and machine learning technologies, including their applications, limitations, and future prospects?"}]},{id:"2",role:"assistant",parts:[{type:"text",text:'Here\'s a comprehensive analysis of the current state of AI and ML technologies:\n\n**Current State of Artificial Intelligence and Machine Learning**\n\nArtificial Intelligence (AI) and Machine Learning (ML) have experienced unprecedented growth and adoption across virtually every industry in recent years. We\'re currently in what many experts consider the "golden age" of AI, characterized by breakthrough achievements in natural language processing, computer vision, and autonomous systems.\n\n**Key Applications:**\n\n1. **Natural Language Processing**: Large Language Models like GPT-4, Claude, and others have revolutionized how we interact with computers, enabling conversational AI, content generation, code assistance, and translation services that approach human-level quality.\n\n2. **Computer Vision**: AI systems can now accurately identify objects, faces, and scenes in images and videos, powering applications from medical imaging diagnosis to autonomous vehicle navigation and augmented reality experiences.\n\n3. **Recommendation Systems**: Platforms like Netflix, Amazon, and Spotify use sophisticated ML algorithms to personalize user experiences, driving significant business value and user engagement.\n\n4. **Healthcare**: AI is transforming medical diagnosis, drug discovery, and treatment planning, with systems that can detect diseases earlier and more accurately than human specialists in some cases.\n\n5. **Financial Services**: From fraud detection and algorithmic trading to credit scoring and risk assessment, ML models are integral to modern financial operations.\n\n**Current Limitations:**\n\nDespite remarkable progress, several significant limitations remain:\n\n1. **Data Quality and Bias**: AI systems are only as good as the data they\'re trained on, and biased or incomplete datasets can lead to unfair or inaccurate outcomes.\n\n2. **Interpretability**: Many advanced AI models, particularly deep neural networks, operate as "black boxes," making it difficult to understand how they arrive at specific decisions.\n\n3. **Energy Consumption**: Training and running large AI models requires substantial computational resources and energy, raising environmental concerns.\n\n4. **Generalization**: While AI excels in specific domains, achieving artificial general intelligence (AGI) that can perform any intellectual task remains elusive.\n\n5. **Safety and Alignment**: Ensuring AI systems behave safely and align with human values becomes increasingly challenging as they become more powerful.\n\n**Future Prospects:**\n\nThe future of AI holds immense promise across multiple dimensions:\n\n1. **Multimodal AI**: Integration of text, image, audio, and video processing will enable more natural and comprehensive AI interactions.\n\n2. **Edge AI**: Deployment of AI directly on devices will reduce latency, improve privacy, and enable offline functionality.\n\n3. **AI-Assisted Scientific Discovery**: AI will accelerate research in fields like materials science, climate modeling, and space exploration.\n\n4. **Personalized Education**: Adaptive learning systems will provide customized educational experiences tailored to individual learning styles and pace.\n\n5. **Sustainable AI**: Development of more efficient algorithms and hardware will reduce the environmental impact of AI systems.\n\nThe next decade will likely see AI becoming even more integrated into our daily lives, while addressing current limitations through improved techniques, better governance frameworks, and more sustainable practices. The key will be balancing innovation with responsible development to ensure AI benefits humanity as a whole.'}]},{id:"3",role:"user",parts:[{type:"text",text:"This is an extremely long message to test the width constraints of the chat interface and ensure that even when I write a very long message that goes on and on and on, it still maintains proper formatting and doesn't cause the chat interface to become too wide or break the layout. The message should wrap properly and maintain readability while staying within the maximum width constraints that have been set for the chat bubbles. This is important for user experience and ensuring that the interface remains functional and visually appealing even with extensive text content."}]},{id:"4",role:"assistant",parts:[{type:"text",text:"Perfect! Your long message demonstrates exactly what we needed to test. As you can see, the chat interface now properly handles long text messages by:\n\n• Constraining the overall chat width with max-w-4xl\n• Using break-words to prevent text overflow\n• Maintaining the max-w-[80%] constraint on individual message bubbles\n• Preserving whitespace and line breaks with whitespace-pre-wrap\n• Ensuring proper text wrapping for readability\n\nThe interface remains visually appealing and functional regardless of message length, which is crucial for a good user experience."}]}];function ChatDemoLongMessages(){const[messages,setMessages]=(0,react.useState)(longMessageDemo);return(0,jsx_runtime.jsx)("div",{className:"h-screen w-full",children:(0,jsx_runtime.jsx)(CopilotInterface.C,{messages,capabilities:capabilities.NH,enableFileUpload:!0,maxFileSize:10,allowedFileTypes:["*"],businessUnits:[],sessions:[],notifications:[],onNewChat:()=>setMessages(longMessageDemo),onSessionSelect:()=>{},onSessionDelete:()=>{},showCapabilities:!0})})}function ChatDemoToolCalling(){const[messages,setMessages]=(0,react.useState)([{id:"1",role:"user",parts:[{type:"text",text:"Can you help me analyze my sales data?"}]},{id:"2",role:"assistant",parts:[{type:"text",text:'I\'ll help you analyze your sales data. Let me fetch the latest information.\n\n*🔧 Calling function: fetch_sales_data(period="30d", region="all")*'}]},{id:"3",role:"assistant",parts:[{type:"text",text:"Great! I've retrieved your sales data for the last 30 days. Here's what I found:\n\n**Sales Summary:**\n- **Total Revenue:** $125,000\n- **Deals Closed:** 15\n- **Average Deal Size:** $8,333\n\n**Top Performers:**\n1. Alice Johnson\n2. Bob Smith\n3. Carol Davis\n\n*📊 Tool Result: Successfully retrieved 1,247 records from sales database*\n\nWould you like me to create a detailed report or analyze any specific metrics?"}]},{id:"4",role:"user",parts:[{type:"text",text:"Can you create a chart showing the revenue trend?"}]},{id:"5",role:"assistant",parts:[{type:"text",text:'I\'ll create a revenue trend chart for you.\n\n*🔧 Calling function: create_chart(type="line", data_source="sales_revenue", period="30d")*\n\n*📈 Tool Result: Chart generated successfully - ID: revenue-trend-123*\n\nPerfect! I\'ve created a revenue trend chart for the last 30 days. The chart shows your daily revenue performance with clear trend indicators:\n\n```\n📊 Revenue Trend - Last 30 Days\n   $6K ┤     ●\n   $5K ┤   ● │ ●   ●\n   $4K ┤ ● │ │ │ ● │ ●\n   $3K ┤ │ │ │ │ │ │ │ ●\n   $2K ┤ │ │ │ │ │ │ │ │\n   $1K ┤ │ │ │ │ │ │ │ │\n     0 └─┴─┴─┴─┴─┴─┴─┴─\n       1 2 3 4 5 6 7 8... (days)\n```\n\n**Key Insights:**\n- Peak revenue on Day 5: $5,500\n- Lowest revenue on Day 6: $3,200\n- Average daily revenue: $4,443\n- Overall trend: **Positive growth** (+12% from start to end)'}]},{id:"6",role:"user",parts:[{type:"text",text:"What about error handling? Try calling a function that doesn't exist."}]},{id:"7",role:"assistant",parts:[{type:"text",text:"I'll demonstrate error handling by calling a non-existent function.\n\n*🔧 Calling function: non_existent_function(param=\"test\")*\n\n❌ **Function Call Error**\n```\nError: Function 'non_existent_function' not found\nCode: FUNCTION_NOT_FOUND\nTimestamp: 2024-01-20T10:30:45Z\n```\n\n**Error Handling:**\n- ✅ Error caught and handled gracefully\n- ✅ User-friendly error message displayed\n- ✅ System remains stable and responsive\n- ✅ Fallback options available\n\n**Available Functions:**\n- `fetch_sales_data` - Retrieve sales information\n- `create_chart` - Generate visualizations\n- `analyze_data` - Perform data analysis\n- `generate_report` - Create reports\n\nWould you like me to try a valid function instead?"}]}]);return(0,jsx_runtime.jsx)("div",{className:"h-screen w-full",children:(0,jsx_runtime.jsx)(CopilotInterface.C,{messages,capabilities:capabilities.NH,enableFileUpload:!0,maxFileSize:10,allowedFileTypes:["*"],businessUnits:[],sessions:[],notifications:[],onNewChat:()=>setMessages([]),onSessionSelect:()=>{},onSessionDelete:()=>{},showCapabilities:!0})})}function ChatDemoMarkdownResponses(){const[messages,setMessages]=(0,react.useState)([{id:"1",role:"user",parts:[{type:"text",text:"Can you show me some examples of markdown formatting?"}]},{id:"2",role:"assistant",parts:[{type:"text",text:"# Markdown Formatting Examples\n\nHere are various markdown elements that should render properly in the chat:\n\n## Headers and Text Formatting\n\n**Bold text** and *italic text* and ***bold italic text***\n\n~~Strikethrough text~~\n\n`Inline code` and regular text.\n\n## Code Blocks\n\nHere's a JavaScript function:\n\n```javascript\nfunction calculateRevenue(deals) {\n  return deals.reduce((total, deal) => {\n    return total + deal.amount;\n  }, 0);\n}\n\nconst deals = [\n  { id: 1, amount: 5000, status: 'closed' },\n  { id: 2, amount: 3500, status: 'pending' },\n  { id: 3, amount: 7200, status: 'closed' }\n];\n\nconsole.log('Total Revenue:', calculateRevenue(deals));\n```\n\n## Lists\n\n### Unordered List:\n- Project management features\n- Real-time collaboration\n- Advanced analytics\n  - Revenue tracking\n  - Performance metrics\n  - Custom dashboards\n\n### Ordered List:\n1. **Setup** - Configure your workspace\n2. **Import** - Upload your data\n3. **Analyze** - Review insights\n4. **Action** - Implement changes\n\n## Tables\n\n| Feature | Basic | Pro | Enterprise |\n|---------|-------|-----|------------|\n| Users | 5 | 50 | Unlimited |\n| Storage | 1GB | 100GB | 1TB |\n| Support | Email | Priority | 24/7 |\n| Price | $0 | $29/mo | $99/mo |\n\n## Links and Images\n\nVisit our [documentation](https://docs.example.com) for more details.\n\n## Blockquotes\n\n> \"The best way to predict the future is to create it.\"\n> \n> — Peter Drucker\n\n## Horizontal Rule\n\n---\n\nThat covers the main markdown elements! They should all render properly in the chat interface."}]},{id:"3",role:"user",parts:[{type:"text",text:"Can you show me a complex code example with syntax highlighting?"}]},{id:"4",role:"assistant",parts:[{type:"text",text:"# Complex Code Examples\n\nHere are some advanced code examples with different languages:\n\n## React Component with TypeScript\n\n```typescript\nimport React, { useState, useEffect, useCallback } from 'react';\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n  role: 'admin' | 'user' | 'viewer';\n}\n\ninterface UserListProps {\n  initialUsers?: User[];\n  onUserSelect: (user: User) => void;\n  filterByRole?: User['role'];\n}\n\nconst UserList: React.FC<UserListProps> = ({ \n  initialUsers = [], \n  onUserSelect, \n  filterByRole \n}) => {\n  const [users, setUsers] = useState<User[]>(initialUsers);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchUsers = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch('/api/users');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const userData: User[] = await response.json();\n      setUsers(userData);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (initialUsers.length === 0) {\n      fetchUsers();\n    }\n  }, [fetchUsers, initialUsers.length]);\n\n  const filteredUsers = filterByRole \n    ? users.filter(user => user.role === filterByRole)\n    : users;\n\n  if (loading) return <div className=\"spinner\">Loading...</div>;\n  if (error) return <div className=\"error\">Error: {error}</div>;\n\n  return (\n    <div className=\"user-list\">\n      {filteredUsers.map(user => (\n        <UserCard \n          key={user.id} \n          user={user} \n          onClick={() => onUserSelect(user)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default UserList;\n```\n\n## Python Data Analysis\n\n```python\nimport pandas as pd\nimport numpy as np\nfrom datetime import datetime, timedelta\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nclass SalesAnalyzer:\n    def __init__(self, data_path: str):\n        self.data = pd.read_csv(data_path)\n        self.prepare_data()\n    \n    def prepare_data(self):\n        \"\"\"Clean and prepare the sales data for analysis.\"\"\"\n        # Convert date columns\n        self.data['date'] = pd.to_datetime(self.data['date'])\n        self.data['month'] = self.data['date'].dt.to_period('M')\n        \n        # Handle missing values\n        self.data['revenue'].fillna(0, inplace=True)\n        self.data['customer_id'].fillna('unknown', inplace=True)\n        \n        # Create derived metrics\n        self.data['revenue_category'] = pd.cut(\n            self.data['revenue'], \n            bins=[0, 1000, 5000, 10000, float('inf')],\n            labels=['Small', 'Medium', 'Large', 'Enterprise']\n        )\n    \n    def monthly_trends(self) -> pd.DataFrame:\n        \"\"\"Calculate monthly revenue trends.\"\"\"\n        monthly_data = self.data.groupby('month').agg({\n            'revenue': ['sum', 'mean', 'count'],\n            'customer_id': 'nunique'\n        }).round(2)\n        \n        monthly_data.columns = [\n            'total_revenue', 'avg_deal_size', \n            'deal_count', 'unique_customers'\n        ]\n        \n        # Calculate growth rates\n        monthly_data['revenue_growth'] = (\n            monthly_data['total_revenue']\n            .pct_change() * 100\n        ).round(2)\n        \n        return monthly_data\n    \n    def top_customers(self, n: int = 10) -> pd.DataFrame:\n        \"\"\"Find top customers by revenue.\"\"\"\n        return (\n            self.data.groupby('customer_id')['revenue']\n            .sum()\n            .sort_values(ascending=False)\n            .head(n)\n            .reset_index()\n        )\n    \n    def visualize_trends(self, save_path: str = None):\n        \"\"\"Create visualizations of sales trends.\"\"\"\n        fig, axes = plt.subplots(2, 2, figsize=(15, 10))\n        \n        # Monthly revenue trend\n        monthly = self.monthly_trends()\n        axes[0, 0].plot(monthly.index.astype(str), monthly['total_revenue'])\n        axes[0, 0].set_title('Monthly Revenue Trend')\n        axes[0, 0].tick_params(axis='x', rotation=45)\n        \n        # Revenue distribution\n        axes[0, 1].hist(self.data['revenue'], bins=30, alpha=0.7)\n        axes[0, 1].set_title('Revenue Distribution')\n        \n        # Customer segments\n        segment_counts = self.data['revenue_category'].value_counts()\n        axes[1, 0].pie(segment_counts.values, labels=segment_counts.index, autopct='%1.1f%%')\n        axes[1, 0].set_title('Customer Segments')\n        \n        # Top customers\n        top_customers = self.top_customers()\n        axes[1, 1].barh(top_customers['customer_id'][::-1], top_customers['revenue'][::-1])\n        axes[1, 1].set_title('Top 10 Customers by Revenue')\n        \n        plt.tight_layout()\n        \n        if save_path:\n            plt.savefig(save_path, dpi=300, bbox_inches='tight')\n        \n        return fig\n\n# Usage example\nif __name__ == \"__main__\":\n    analyzer = SalesAnalyzer('sales_data.csv')\n    \n    # Generate insights\n    trends = analyzer.monthly_trends()\n    print(\"Monthly Trends:\")\n    print(trends)\n    \n    top_customers = analyzer.top_customers()\n    print(\"\\nTop Customers:\")\n    print(top_customers)\n    \n    # Create visualizations\n    analyzer.visualize_trends('sales_analysis.png')\n```\n\nThis demonstrates complex syntax highlighting with multiple languages and should render properly with appropriate color coding!"}]}]);return(0,jsx_runtime.jsx)("div",{className:"h-screen w-full",children:(0,jsx_runtime.jsx)(CopilotInterface.C,{messages,capabilities:capabilities.NH,enableFileUpload:!0,maxFileSize:10,allowedFileTypes:["*"],businessUnits:[],sessions:[],notifications:[],onNewChat:()=>setMessages([]),onSessionSelect:()=>{},onSessionDelete:()=>{},showCapabilities:!0})})}function ChatDemoUIComponents(){const[messages,setMessages]=(0,react.useState)([{id:"1",role:"user",parts:[{type:"text",text:"Can you show me some interactive dashboard components?"}]},{id:"2",role:"assistant",parts:[{type:"text",text:"I'll create some interactive dashboard components for you. Here are various UI elements:"},{type:"data-dashboard",data:{title:"Sales Dashboard",widgets:[{type:"metric",title:"Total Revenue",value:"$125,000",change:"+12.5%",trend:"up"},{type:"metric",title:"New Customers",value:"47",change:"+8.3%",trend:"up"},{type:"metric",title:"Conversion Rate",value:"3.2%",change:"-2.1%",trend:"down"}]}}]},{id:"3",role:"user",parts:[{type:"text",text:"Can you show me a data table with customer information?"}]},{id:"4",role:"assistant",parts:[{type:"text",text:"Here's a customer data table with sorting and filtering capabilities:"},{type:"data-table",data:{title:"Customer Information",columns:[{key:"name",label:"Customer Name",sortable:!0},{key:"company",label:"Company",sortable:!0},{key:"revenue",label:"Revenue",sortable:!0,type:"currency"},{key:"status",label:"Status",type:"badge"},{key:"lastContact",label:"Last Contact",type:"date"}],rows:[{id:"1",name:"Alice Johnson",company:"Acme Corp",revenue:85e3,status:"active",lastContact:"2024-01-15"},{id:"2",name:"Bob Smith",company:"Beta Inc",revenue:45e3,status:"pending",lastContact:"2024-01-12"},{id:"3",name:"Carol Davis",company:"Gamma LLC",revenue:15e3,status:"inactive",lastContact:"2024-01-08"},{id:"4",name:"David Wilson",company:"Delta Systems",revenue:125e3,status:"active",lastContact:"2024-01-18"}]}}]},{id:"5",role:"user",parts:[{type:"text",text:"Show me a progress tracker for a project"}]},{id:"6",role:"assistant",parts:[{type:"text",text:"Here's a project progress tracker with timeline and milestones:"},{type:"data-progress",data:{title:"Website Redesign Project",overall_progress:65,phases:[{name:"Discovery & Planning",status:"completed",progress:100,start_date:"2024-01-01",end_date:"2024-01-15",tasks:[{name:"Stakeholder interviews",completed:!0},{name:"Requirements gathering",completed:!0},{name:"Project timeline",completed:!0}]},{name:"Design & Prototyping",status:"completed",progress:100,start_date:"2024-01-16",end_date:"2024-02-15",tasks:[{name:"Wireframes",completed:!0},{name:"Visual design",completed:!0},{name:"Interactive prototype",completed:!0}]},{name:"Development",status:"in_progress",progress:75,start_date:"2024-02-16",end_date:"2024-03-30",tasks:[{name:"Frontend development",completed:!0},{name:"Backend integration",completed:!1},{name:"Testing & QA",completed:!1}]},{name:"Launch & Deployment",status:"pending",progress:0,start_date:"2024-03-31",end_date:"2024-04-15",tasks:[{name:"Production deployment",completed:!1},{name:"User training",completed:!1},{name:"Go-live support",completed:!1}]}]}}]}]);return(0,jsx_runtime.jsx)("div",{className:"h-screen w-full",children:(0,jsx_runtime.jsx)(CopilotInterface.C,{messages,capabilities:capabilities.NH,enableFileUpload:!0,maxFileSize:10,allowedFileTypes:["*"],businessUnits:[],sessions:[],notifications:[],onNewChat:()=>setMessages([]),onSessionSelect:()=>{},onSessionDelete:()=>{},showCapabilities:!0})})}function ChatDemoFileUploads(){const[messages,setMessages]=(0,react.useState)([{id:"1",role:"user",parts:[{type:"text",text:"I want to upload some files for analysis. I have a sales_data.csv file and a quarterly_report.pdf that I need to analyze."}]},{id:"2",role:"assistant",parts:[{type:"text",text:"Perfect! I can help you analyze various file types. You can upload:\n\n📊 **Data Files:**\n- CSV/Excel spreadsheets\n- JSON data files\n- Database exports\n\n📄 **Documents:**\n- PDF reports\n- Word documents\n- Text files\n\n🖼️ **Media Files:**\n- Images (PNG, JPG, GIF)\n- Charts and diagrams\n\n**File Upload Features:**\n- ✅ Drag & drop support\n- ✅ Multiple file selection\n- ✅ Progress indicators\n- ✅ File type validation\n- ✅ Size limit checking (max 10MB)\n\nTry uploading your files using the attachment button below! I'll analyze them once uploaded."}]},{id:"3",role:"user",parts:[{type:"text",text:"I just uploaded sales_data.csv (15.4 KB) and quarterly_report.pdf (2.6 MB)"}]},{id:"4",role:"assistant",parts:[{type:"text",text:"Great! I can see you've uploaded two files:\n\n## 📁 Uploaded Files\n\n### 1. 📊 sales_data.csv (15.4 KB)\n- **Type:** CSV Spreadsheet\n- **Status:** ✅ Successfully uploaded\n- **Preview:** Contains sales transaction data\n- **Columns:** Date, Customer, Product, Revenue, Region\n\n### 2. 📄 quarterly_report.pdf (2.6 MB)\n- **Type:** PDF Document  \n- **Status:** ✅ Successfully uploaded\n- **Pages:** 24 pages\n- **Content:** Q4 2023 Business Report\n\n*🔧 Analyzing CSV file: sales_data.csv*\n\n## 🔍 Analysis Results\n\n**CSV Data Summary:**\n- **Total Records:** 1,247 sales transactions\n- **Date Range:** January 1, 2023 - December 31, 2023\n- **Total Revenue:** $1,250,000\n- **Average Deal Size:** $1,002.40\n\n*🔧 Extracting PDF content: quarterly_report.pdf*\n\n**PDF Report Highlights:**\n- **Q4 Revenue:** $485,000 (from report)\n- **Annual Growth:** 15.2%\n- **Top Region:** North America\n- **Key Sections:** Executive Summary, Financial Performance, Sales Analysis\n\n## 🔍 Data Comparison\n- **Variance Found:** $70,000 difference between CSV total ($1,250,000) and PDF annual total ($1,180,000)\n- **Recommendation:** Investigate timing differences or adjustments\n\nWould you like me to:\n- 📊 Create detailed visualizations\n- 🔍 Investigate the revenue variance\n- 📈 Generate trend analysis\n- 📋 Create a unified report?"}]}]);return(0,jsx_runtime.jsx)("div",{className:"h-screen w-full",children:(0,jsx_runtime.jsx)(CopilotInterface.C,{messages,capabilities:capabilities.NH,enableFileUpload:!0,maxFileSize:10,allowedFileTypes:["*"],businessUnits:[],sessions:[],notifications:[],onNewChat:()=>setMessages([]),onSessionSelect:()=>{},onSessionDelete:()=>{},showCapabilities:!0})})}function ChatDemoErrorHandling(){const[messages,setMessages]=(0,react.useState)([{id:"1",role:"user",parts:[{type:"text",text:"Can you fetch my latest sales data?"}]},{id:"2",role:"assistant",parts:[{type:"text",text:"I'll fetch your latest sales data right away.\n\n*🔧 Calling function: fetch_sales_data(period=\"latest\")*\n\n⚠️ **Database Connection Timeout**\n\n```\nError: Database connection timeout\nCode: DB_TIMEOUT\nRetry after: 30 seconds\nTimestamp: 2024-01-20T10:15:23Z\n```\n\nThis is usually a temporary issue. I'll retry the request in 30 seconds. In the meantime, you can:\n\n1. Check if there are any ongoing system maintenance notifications\n2. Try refreshing the page\n3. Contact support if the issue persists\n\nWould you like me to try again now or wait for the suggested retry time?"}]},{id:"3",role:"user",parts:[{type:"text",text:"Please try again now"}]},{id:"4",role:"assistant",parts:[{type:"text",text:"Retrying the sales data fetch...\n\n*🔧 Calling function: fetch_sales_data(period=\"latest\", retry=true)*\n\n🚫 **Access Denied**\n\n```\nError: Insufficient permissions\nCode: AUTH_ERROR\nRequired permissions: ['sales:read', 'data:access']\nContact admin: true\n```\n\nI'm unable to fetch the sales data due to insufficient permissions.\n\n**Required Permissions:**\n- `sales:read` - Read access to sales data\n- `data:access` - General data access rights\n\n**Next Steps:**\n1. **Contact your administrator** to request the necessary permissions\n2. **Verify your role** - You may need a sales or data analyst role\n3. **Check group memberships** - Ensure you're in the appropriate security groups\n\n**Alternative Options:**\n- Upload a sales data file directly (CSV, Excel)\n- Request data from a colleague with appropriate access\n- Use the capabilities menu to explore other available features\n\nWould you like to try uploading a file instead, or explore other features I can help you with?"}]},{id:"5",role:"user",parts:[{type:"text",text:"What about creating a report with invalid data?"}]},{id:"6",role:"assistant",parts:[{type:"text",text:"I'll attempt to create a report with the data available.\n\n*🔧 Calling function: generate_report(data_source=\"invalid_source\", report_type=\"sales_summary\")*\n\n❌ **Invalid Data Source**\n\n```\nError: Invalid data source specified\nCode: INVALID_SOURCE\nValid sources: ['sales_db', 'crm_system', 'uploaded_files']\nSuggestion: Please specify a valid data source\n```\n\nThe report generation failed because the specified data source is not valid.\n\n**Available Data Sources:**\n- `sales_db` - Main sales database\n- `crm_system` - Customer relationship management system\n- `uploaded_files` - Files you've uploaded to the chat\n\n**How to Fix This:**\n1. **Choose a valid source** from the list above\n2. **Upload data files** if you want to use your own data\n3. **Check data permissions** for database sources\n\n**Example:** \"Generate a sales report using the CRM system data\"\n\nWould you like me to try generating a report with one of the valid data sources?"}]},{id:"7",role:"user",parts:[{type:"text",text:"Let me try uploading some corrupted data (corrupted_data.xlsx - 0 bytes)"}]},{id:"8",role:"assistant",parts:[{type:"text",text:'I see you\'re trying to upload a file. Let me analyze it.\n\n*🔧 Processing file: corrupted_data.xlsx*\n\n💾 **Corrupted or Empty File**\n\n```\nError: File appears to be corrupted or empty\nCode: CORRUPTED_FILE\nFile size: 0 bytes\nMIME type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n```\n\nThe uploaded Excel file appears to be corrupted or empty (0 bytes).\n\n**Possible Causes:**\n- File upload was interrupted\n- Original file is corrupted\n- File format is not supported\n- Network issues during upload\n\n**Troubleshooting Steps:**\n\n1. **Re-save the file:**\n   - Open in Excel and save as a new file\n   - Try "Save As" → Excel Workbook (.xlsx)\n\n2. **Try different format:**\n   - Export as CSV (.csv) for better compatibility\n   - Save as Excel 97-2003 (.xls) if needed\n\n3. **Check file integrity:**\n   - Verify you can open the file locally\n   - Check file size (should be > 0 bytes)\n\n4. **Re-upload:**\n   - Clear browser cache\n   - Try uploading again\n\n**Alternative Solutions:**\n- Copy data into a new spreadsheet\n- Use Google Sheets and export as Excel\n- Upload as a text/CSV file instead\n\nWould you like to try uploading the file again or in a different format?'}]},{id:"9",role:"user",parts:[{type:"text",text:"What about network connectivity issues?"}]},{id:"10",role:"assistant",parts:[{type:"text",text:"Let me check the network connectivity and system status.\n\n*🔧 Calling function: check_system_status()*\n\n🌐 **Network Connectivity Issues**\n\n```\nError: Unable to reach external services\nCode: NETWORK_ERROR\nStatus: Multiple service endpoints unreachable\nLast successful connection: 5 minutes ago\n```\n\nIt appears there are network connectivity issues affecting several services:\n\n**Affected Services:**\n- ❌ Customer Database (timeout)\n- ❌ File Processing Service (unreachable)\n- ❌ Analytics Engine (connection refused)\n- ✅ Chat Service (operational)\n- ✅ Authentication (operational)\n\n**Impact:**\n- File uploads may fail or be delayed\n- Data retrieval functions unavailable\n- Real-time analytics temporarily disabled\n- Chat functionality remains available\n\n**Troubleshooting:**\n1. **Check your internet connection**\n2. **Try refreshing the page**\n3. **Wait 2-3 minutes and retry**\n4. **Contact IT if issues persist**\n\n**What you can still do:**\n- Continue chatting for general assistance\n- Review previously uploaded data\n- Access cached reports and documents\n- Plan future actions for when services restore\n\nI'll continue monitoring the connection status. Services typically restore within 5-10 minutes during maintenance windows."}]}]);return(0,jsx_runtime.jsx)("div",{className:"h-screen w-full",children:(0,jsx_runtime.jsx)(CopilotInterface.C,{messages,capabilities:capabilities.NH,enableFileUpload:!0,maxFileSize:10,allowedFileTypes:["*"],businessUnits:[],sessions:[],notifications:[],onNewChat:()=>setMessages([]),onSessionSelect:()=>{},onSessionDelete:()=>{},showCapabilities:!0})})}function ChatDemoCapabilitiesInteraction(){const[messages,setMessages]=(0,react.useState)([{id:"1",role:"assistant",parts:[{type:"text",text:"Welcome! I can help you with various business tasks. Use the capabilities menu at the bottom to explore what I can do, or ask me directly about:\n\n🏢 **Sales & CRM**\n- Customer management\n- Sales pipeline tracking\n- Revenue analysis\n\n📊 **Marketing**\n- Campaign management\n- Analytics and reporting\n- Lead generation\n\n👥 **HR & Operations**\n- Employee management\n- Project tracking\n- Document processing\n\n💰 **Finance**\n- Financial reporting\n- Budget analysis\n- Expense tracking\n\nTry clicking on any capability in the menu below to get started!"}]},{id:"2",role:"user",parts:[{type:"text",text:"I clicked on Sales → Customers → Acme Corp"}]},{id:"3",role:"assistant",parts:[{type:"text",text:"Great! You've selected **Acme Corp** from the customers list. Here's what I found:"},{type:"data-customer-card",data:{id:"acme-corp",name:"Acme Corp",type:"Enterprise Customer",revenue:"$125,000 ARR",industry:"Technology",employees:500,lastContact:"2024-01-15",status:"active",contacts:[{name:"John Smith",role:"CTO",email:"john@acme.com"},{name:"Sarah Johnson",role:"Procurement",email:"sarah@acme.com"}],recent_activity:[{date:"2024-01-15",activity:"Contract renewal discussion"},{date:"2024-01-10",activity:"Product demo scheduled"},{date:"2024-01-05",activity:"Support ticket resolved"}],opportunities:[{name:"Enterprise License Renewal",value:"$150K",stage:"Negotiation"},{name:"Additional Modules",value:"$25K",stage:"Proposal"}]}}]},{id:"4",role:"assistant",parts:[{type:"text",text:"**Available Actions for Acme Corp:**\n\n🎯 **Sales Actions**\n- Schedule follow-up meeting\n- Update opportunity status\n- Send contract renewal proposal\n\n📞 **Communication**\n- Log customer call\n- Send email update\n- Schedule product demo\n\n📊 **Analytics**\n- View customer health score\n- Generate account report\n- Analyze usage patterns\n\nWhat would you like to do next?"}]},{id:"5",role:"user",parts:[{type:"text",text:"Now I want to explore Marketing → Campaign Management"}]},{id:"6",role:"assistant",parts:[{type:"text",text:"Perfect! You've navigated to **Campaign Management**. Here's an overview of your marketing campaigns:"},{type:"data-campaigns",data:{title:"Active Marketing Campaigns",campaigns:[{id:"winter-promo",name:"Winter Promotion 2024",status:"active",type:"Email + Social",start_date:"2024-01-01",end_date:"2024-02-29",budget:15e3,spent:8500,leads:247,conversions:23,roi:"180%"},{id:"product-launch",name:"New Product Launch",status:"planning",type:"Multi-channel",start_date:"2024-02-15",end_date:"2024-04-15",budget:25e3,spent:0,leads:0,conversions:0,roi:"TBD"},{id:"retargeting",name:"Retargeting Campaign",status:"active",type:"Digital Ads",start_date:"2024-01-10",end_date:"2024-03-10",budget:8e3,spent:3200,leads:89,conversions:12,roi:"150%"}]}}]},{id:"7",role:"assistant",parts:[{type:"text",text:"**Campaign Management Actions:**\n\n📝 **Create & Edit**\n- Create new campaign\n- Duplicate existing campaign\n- Edit campaign settings\n\n📊 **Analytics & Reporting**\n- View detailed performance\n- Generate ROI report\n- Compare campaign metrics\n\n⚙️ **Management**\n- Pause/resume campaigns\n- Adjust budgets\n- Update target audiences\n\n🎯 **Optimization**\n- A/B test variations\n- Optimize targeting\n- Adjust bidding strategies\n\nWhich campaign would you like to work with, or what action would you like to take?"}]},{id:"8",role:"user",parts:[{type:"text",text:"Let me check HR → Employee Management → Performance Reviews"}]},{id:"9",role:"assistant",parts:[{type:"text",text:"You've accessed **Performance Reviews** in HR. Here's the current status of performance reviews:"},{type:"data-performance",data:{title:"Performance Review Dashboard",period:"Q4 2023",overview:{total_employees:127,reviews_completed:89,reviews_pending:23,reviews_overdue:15,completion_rate:70.1},departments:[{name:"Engineering",employees:45,completed:38,pending:5,overdue:2,avg_rating:4.2},{name:"Sales",employees:28,completed:22,pending:4,overdue:2,avg_rating:3.9},{name:"Marketing",employees:18,completed:12,pending:3,overdue:3,avg_rating:4},{name:"Operations",employees:15,completed:9,pending:4,overdue:2,avg_rating:3.8}],upcoming_deadlines:[{employee:"Alex Chen",department:"Engineering",due_date:"2024-01-25"},{employee:"Maria Garcia",department:"Sales",due_date:"2024-01-27"},{employee:"David Kim",department:"Marketing",due_date:"2024-01-30"}]}}]},{id:"10",role:"assistant",parts:[{type:"text",text:"**Performance Review Actions:**\n\n✅ **Review Management**\n- Schedule new reviews\n- Send completion reminders\n- Mark reviews as complete\n\n📋 **Templates & Forms**\n- Create review templates\n- Customize evaluation forms\n- Set review criteria\n\n📊 **Analytics & Reports**\n- Generate department reports\n- Track completion rates\n- Analyze performance trends\n\n🔔 **Notifications**\n- Send deadline reminders\n- Notify managers of overdue reviews\n- Schedule follow-up meetings\n\n**Attention Required:**\n- 15 reviews are **overdue**\n- 23 reviews are **pending**\n- 3 employees have upcoming deadlines this week\n\nWould you like me to send reminder notifications or help with any specific review tasks?"}]}]);return(0,jsx_runtime.jsx)("div",{className:"h-screen w-full",children:(0,jsx_runtime.jsx)(CopilotInterface.C,{messages,capabilities:capabilities.NH,enableFileUpload:!0,maxFileSize:10,allowedFileTypes:["*"],businessUnits:[],sessions:[],notifications:[],onNewChat:()=>setMessages([]),onSessionSelect:()=>{},onSessionDelete:()=>{},showCapabilities:!0})})}ChatDemoLongMessages.__docgenInfo={description:"",methods:[],displayName:"ChatDemoLongMessages"},ChatDemoToolCalling.__docgenInfo={description:"",methods:[],displayName:"ChatDemoToolCalling"},ChatDemoMarkdownResponses.__docgenInfo={description:"",methods:[],displayName:"ChatDemoMarkdownResponses"},ChatDemoUIComponents.__docgenInfo={description:"",methods:[],displayName:"ChatDemoUIComponents"},ChatDemoFileUploads.__docgenInfo={description:"",methods:[],displayName:"ChatDemoFileUploads"},ChatDemoErrorHandling.__docgenInfo={description:"",methods:[],displayName:"ChatDemoErrorHandling"},ChatDemoCapabilitiesInteraction.__docgenInfo={description:"",methods:[],displayName:"ChatDemoCapabilitiesInteraction"};const ChatDemo_stories={title:"Chat/Chat Demo",component:ChatDemo,parameters:{layout:"fullscreen"}},Default={name:"Clean Interface with File Upload & Bottom Capabilities",parameters:{docs:{description:{story:"Basic chat interface with file upload capabilities and bottom menu."}}}},LongMessages={render:()=>(0,jsx_runtime.jsx)(ChatDemoLongMessages,{}),name:"Long Text Messages",parameters:{docs:{description:{story:"Demonstrates how the chat interface handles very long text messages with proper width constraints and text wrapping."}}}},ToolCalling={render:()=>(0,jsx_runtime.jsx)(ChatDemoToolCalling,{}),name:"Tool Calling & Function Execution",parameters:{docs:{description:{story:"Tests the interface with tool calling scenarios, including function execution, results display, and error handling."}}}},MarkdownResponses={render:()=>(0,jsx_runtime.jsx)(ChatDemoMarkdownResponses,{}),name:"Markdown & Rich Text Responses",parameters:{docs:{description:{story:"Tests how the chat interface renders markdown content including code blocks, tables, lists, and formatting."}}}},UIComponents={render:()=>(0,jsx_runtime.jsx)(ChatDemoUIComponents,{}),name:"Custom UI Components",parameters:{docs:{description:{story:"Tests the interface with custom UI components like charts, cards, and interactive elements."}}}},FileUploads={render:()=>(0,jsx_runtime.jsx)(ChatDemoFileUploads,{}),name:"File Upload Scenarios",parameters:{docs:{description:{story:"Tests various file upload scenarios including different file types, sizes, and upload states."}}}},ErrorHandling={render:()=>(0,jsx_runtime.jsx)(ChatDemoErrorHandling,{}),name:"Error Handling & Edge Cases",parameters:{docs:{description:{story:"Tests error scenarios, loading states, and edge cases in the chat interface."}}}},CapabilitiesInteraction={render:()=>(0,jsx_runtime.jsx)(ChatDemoCapabilitiesInteraction,{}),name:"Capabilities Menu Interaction",parameters:{docs:{description:{story:"Tests the capabilities menu functionality, navigation, and action triggering."}}}},__namedExportsOrder=["Default","LongMessages","ToolCalling","MarkdownResponses","UIComponents","FileUploads","ErrorHandling","CapabilitiesInteraction"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  name: 'Clean Interface with File Upload & Bottom Capabilities',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Basic chat interface with file upload capabilities and bottom menu.'\n      }\n    }\n  }\n}",...Default.parameters?.docs?.source}}},LongMessages.parameters={...LongMessages.parameters,docs:{...LongMessages.parameters?.docs,source:{originalSource:"{\n  render: () => <ChatDemoLongMessages />,\n  name: 'Long Text Messages',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstrates how the chat interface handles very long text messages with proper width constraints and text wrapping.'\n      }\n    }\n  }\n}",...LongMessages.parameters?.docs?.source}}},ToolCalling.parameters={...ToolCalling.parameters,docs:{...ToolCalling.parameters?.docs,source:{originalSource:"{\n  render: () => <ChatDemoToolCalling />,\n  name: 'Tool Calling & Function Execution',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Tests the interface with tool calling scenarios, including function execution, results display, and error handling.'\n      }\n    }\n  }\n}",...ToolCalling.parameters?.docs?.source}}},MarkdownResponses.parameters={...MarkdownResponses.parameters,docs:{...MarkdownResponses.parameters?.docs,source:{originalSource:"{\n  render: () => <ChatDemoMarkdownResponses />,\n  name: 'Markdown & Rich Text Responses',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Tests how the chat interface renders markdown content including code blocks, tables, lists, and formatting.'\n      }\n    }\n  }\n}",...MarkdownResponses.parameters?.docs?.source}}},UIComponents.parameters={...UIComponents.parameters,docs:{...UIComponents.parameters?.docs,source:{originalSource:"{\n  render: () => <ChatDemoUIComponents />,\n  name: 'Custom UI Components',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Tests the interface with custom UI components like charts, cards, and interactive elements.'\n      }\n    }\n  }\n}",...UIComponents.parameters?.docs?.source}}},FileUploads.parameters={...FileUploads.parameters,docs:{...FileUploads.parameters?.docs,source:{originalSource:"{\n  render: () => <ChatDemoFileUploads />,\n  name: 'File Upload Scenarios',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Tests various file upload scenarios including different file types, sizes, and upload states.'\n      }\n    }\n  }\n}",...FileUploads.parameters?.docs?.source}}},ErrorHandling.parameters={...ErrorHandling.parameters,docs:{...ErrorHandling.parameters?.docs,source:{originalSource:"{\n  render: () => <ChatDemoErrorHandling />,\n  name: 'Error Handling & Edge Cases',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Tests error scenarios, loading states, and edge cases in the chat interface.'\n      }\n    }\n  }\n}",...ErrorHandling.parameters?.docs?.source}}},CapabilitiesInteraction.parameters={...CapabilitiesInteraction.parameters,docs:{...CapabilitiesInteraction.parameters?.docs,source:{originalSource:"{\n  render: () => <ChatDemoCapabilitiesInteraction />,\n  name: 'Capabilities Menu Interaction',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Tests the capabilities menu functionality, navigation, and action triggering.'\n      }\n    }\n  }\n}",...CapabilitiesInteraction.parameters?.docs?.source}}}}}]);